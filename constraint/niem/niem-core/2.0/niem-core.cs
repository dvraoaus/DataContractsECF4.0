/*
	'=======================================================================
	'   Author(s):      D V Rao
	'   Module/Form:    niem-core.cs
	'   Created Date:   
	'   Description:    
	'
	'   Modification History:
	'=======================================================================
	'   Author(s)       Date        Control/Procedure       Change
 	'=======================================================================
 *  '   Rao     02/10/2015      Removed references to Amcad extensions
 *  '   Rao     03/01/2014      CountryCode , Country
    '   Rao     06/12/2013      Changed Extension to  PhoneNumberExtension , Adding WorkPhoneExtension
    '   Rao     05/07/2013       PersonNameType, TelephoneNumberType , ContactInformationType , Person , Organization - New Constructor To Simple Type  
    '   Rao     06/24/2012       NIEM Document Type Added Properties FiledTime
    '   Rao     04/24/2012       NIEM Document Type Added Properties PostDate , ReceivedDate
    '   Rao     08/12/2011       Also include telephone number
    '   Rao     08/12/2011       If single email address passed as ; seperated list create multiple email address entries
	'=======================================================================
	*/

#region WSCF
//------------------------------------------------------------------------------
// <autogenerated code>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated code>
//------------------------------------------------------------------------------
// File time 26-11-08 02:51 PM
//
// This source code was auto-generated by WsContractFirst, Version=0.7.6319.1
#endregion

using Niem.AnsiNist.v20;
using Niem.AnsiD20.v20;
using Niem.fbi.v20;
using Niem.Fips104.v20;
using Niem.Fips64.v20;
using Niem.Iso4217.v20;
using Niem.Iso639Part3.v20;
using Niem.NonauthoritativeCode.v20;
using Niem.Proxy.xsd.v20;
using Niem.Structures.v20;
using Niem.UneceRec20Misc.v20;
using Niem.UspsStates.v20;
using System.Collections.Generic; 
namespace Niem.NiemCore.v20
{
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DateType")]
    [System.Xml.Serialization.XmlRootAttribute("ActivityDate", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DateType")]
    
    public partial class DateType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> dateRepresentations;
        
        public DateType()
        {
        }

        public DateType(System.DateTime  itemDateTime)
        {
            Niem.Proxy.xsd.v20.DateTime niemDateTime = new DateTime(itemDateTime);
            dateRepresentations = new System.Collections.Generic.List<object>();
            dateRepresentations.Add(niemDateTime); 
        }


        public DateType(System.Collections.Generic.List<object> dateRepresentations)
        {
            this.dateRepresentations = dateRepresentations;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Date", typeof(Date), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("DateTime", typeof(DateTime), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Year", typeof(GYear), IsNullable=true, Order=0)]
        public System.Collections.Generic.List<object> DateRepresentations
        {
            get
            {
                return this.dateRepresentations;
            }
            set
            {
                if ((this.dateRepresentations != value))
                {
                    this.dateRepresentations = value;
                    this.RaisePropertyChanged("DateRepresentations");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnore()]
        public System.DateTime? DateValue
        {
            get
            {
                System.DateTime? dateValue = null;
                if (this.dateRepresentations != null && dateRepresentations.Count > 0 && dateRepresentations[0] is DateTime)
                {
                    DateTime niemDate = dateRepresentations[0] as DateTime;
                    if (niemDate != null) dateValue = niemDate.Value;
                }
                return dateValue;
            }
        }
    }
    
    
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="SupervisionType")]
    [System.Xml.Serialization.XmlRootAttribute("Supervision", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="SupervisionType")]
    
    public partial class SupervisionType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<FacilityType> supervisionFacility;
        
        public SupervisionType()
        {
        }
        
        public SupervisionType(System.Collections.Generic.List<FacilityType> supervisionFacility)
        {
            this.supervisionFacility = supervisionFacility;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("SupervisionFacility", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<FacilityType> SupervisionFacility
        {
            get
            {
                return this.supervisionFacility;
            }
            set
            {
                if ((this.supervisionFacility != value))
                {
                    this.supervisionFacility = value;
                    this.RaisePropertyChanged("SupervisionFacility");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="FacilityType")]
    [System.Xml.Serialization.XmlRootAttribute("SupervisionFacility", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="FacilityType")]
    
    public partial class FacilityType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> facilityIdentification;
        
        public FacilityType()
        {
        }
        
        public FacilityType(System.Collections.Generic.List<IdentificationType> facilityIdentification)
        {
            this.facilityIdentification = facilityIdentification;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("FacilityIdentification", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<IdentificationType> FacilityIdentification
        {
            get
            {
                return this.facilityIdentification;
            }
            set
            {
                if ((this.facilityIdentification != value))
                {
                    this.facilityIdentification = value;
                    this.RaisePropertyChanged("FacilityIdentification");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="IdentificationType")]
    [System.Xml.Serialization.XmlRootAttribute("ActivityIdentification", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="IdentificationType")]
    
    public partial class IdentificationType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<String> identificationID;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> identificationCategories;
        
        /// <remarks/>
        private System.Collections.Generic.List<object> identificationJurisdiction;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> identificationSourceText;
        
        public IdentificationType()
        {
        }

        public IdentificationType(System.String identificationIDValue) : this(identificationIDValue , string.Empty)
        {
            
        }


        public IdentificationType(System.String identificationIDValue , System.String identificationCategoryValue)
        {
            if ( !string.IsNullOrEmpty(identificationIDValue))
            {
                this.identificationID = NiemStringHelper<String>.ToList(identificationIDValue);
                if ( !string.IsNullOrEmpty(identificationCategoryValue)) this.identificationCategories = NiemStringHelper<TextType>.ToList(identificationCategoryValue) ;
            }
        }

        public void ToSimpleType(out System.String identificationIDValue, out System.String identificationCategoryValue)
        {
            identificationIDValue = NiemStringHelper<String>.FirstValue(this.identificationID);
            identificationCategoryValue = NiemStringHelper<TextType>.FirstValue(this.identificationCategories);

        }

        public IdentificationType(System.Collections.Generic.List<String> identificationID, System.Collections.Generic.List<TextType> identificationCategories, System.Collections.Generic.List<object> identificationJurisdiction, System.Collections.Generic.List<TextType> identificationSourceText)
        {
            this.identificationID = identificationID;
            this.identificationCategories = identificationCategories;
            this.identificationJurisdiction = identificationJurisdiction;
            this.identificationSourceText = identificationSourceText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("IdentificationID", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<String> IdentificationID
        {
            get
            {
                return this.identificationID;
            }
            set
            {
                if ((this.identificationID != value))
                {
                    this.identificationID = value;
                    this.RaisePropertyChanged("IdentificationID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("IdentificationCategoryText", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<TextType> IdentificationCategories
        {
            get
            {
                return this.identificationCategories;
            }
            set
            {
                if ((this.identificationCategories != value))
                {
                    this.identificationCategories = value;
                    this.RaisePropertyChanged("IdentificationCategories");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("IdentificationJurisdiction", Order=2)]
        public System.Collections.Generic.List<object> IdentificationJurisdiction
        {
            get
            {
                return this.identificationJurisdiction;
            }
            set
            {
                if ((this.identificationJurisdiction != value))
                {
                    this.identificationJurisdiction = value;
                    this.RaisePropertyChanged("IdentificationJurisdiction");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("IdentificationSourceText", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<TextType> IdentificationSourceText
        {
            get
            {
                return this.identificationSourceText;
            }
            set
            {
                if ((this.identificationSourceText != value))
                {
                    this.identificationSourceText = value;
                    this.RaisePropertyChanged("IdentificationSourceText");
                }
            }
        }
    }
    
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProperNameTextType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonNameTextType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="TextType")]
    [System.Xml.Serialization.XmlRootAttribute("ActivityDescriptionText", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="TextType")]
    public partial class TextType : String
    {
        
        public TextType()
        {
        }
        public TextType(string value)
        {
            this.Value = value;
        }


    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonNameTextType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ProperNameTextType")]
    [System.Xml.Serialization.XmlRootAttribute("LocationCityName", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ProperNameTextType")]
    public partial class ProperNameTextType : TextType
    {
        
        public ProperNameTextType()
        {
        }

        public ProperNameTextType(string value)
        {
            this.Value = value;
        }

    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PersonNameTextType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonFullName", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PersonNameTextType")]
    public partial class PersonNameTextType : ProperNameTextType
    {
        
        public PersonNameTextType()
        {
        }
        public PersonNameTextType(System.String value)
        {
            this.Value = value; 
        }

    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ScheduleDayType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ScheduleDayType")]
    
    public partial class ScheduleDayType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> scheduleActivityText;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> scheduleDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<Time> scheduleDayEndTime;
        
        /// <remarks/>
        private System.Collections.Generic.List<Time> scheduleDayStartTime;
        
        public ScheduleDayType()
        {
        }
        
        public ScheduleDayType(System.Collections.Generic.List<TextType> scheduleActivityText, System.Collections.Generic.List<DateType> scheduleDate, System.Collections.Generic.List<Time> scheduleDayEndTime, System.Collections.Generic.List<Time> scheduleDayStartTime)
        {
            this.scheduleActivityText = scheduleActivityText;
            this.scheduleDate = scheduleDate;
            this.scheduleDayEndTime = scheduleDayEndTime;
            this.scheduleDayStartTime = scheduleDayStartTime;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ScheduleActivityText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> ScheduleActivityText
        {
            get
            {
                return this.scheduleActivityText;
            }
            set
            {
                if ((this.scheduleActivityText != value))
                {
                    this.scheduleActivityText = value;
                    this.RaisePropertyChanged("ScheduleActivityText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDate", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<DateType> ScheduleDate
        {
            get
            {
                return this.scheduleDate;
            }
            set
            {
                if ((this.scheduleDate != value))
                {
                    this.scheduleDate = value;
                    this.RaisePropertyChanged("ScheduleDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDayEndTime", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<Time> ScheduleDayEndTime
        {
            get
            {
                return this.scheduleDayEndTime;
            }
            set
            {
                if ((this.scheduleDayEndTime != value))
                {
                    this.scheduleDayEndTime = value;
                    this.RaisePropertyChanged("ScheduleDayEndTime");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ScheduleDayStartTime", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<Time> ScheduleDayStartTime
        {
            get
            {
                return this.scheduleDayStartTime;
            }
            set
            {
                if ((this.scheduleDayStartTime != value))
                {
                    this.scheduleDayStartTime = value;
                    this.RaisePropertyChanged("ScheduleDayStartTime");
                }
            }
        }
    }
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PropertyType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PropertyType")]
    public partial class PropertyType : ComplexObjectType
    {
        
        public PropertyType()
        {
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObligationRecurrenceType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ObligationType")]
    [System.Xml.Serialization.XmlRootAttribute("Obligation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ObligationType")]
    
    public partial class ObligationType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<AmountType> obligationDueAmount;
        
        /// <remarks/>
        private System.Collections.Generic.List<ObligationExemptionType> obligationExemption;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> obligationRequirementDescriptionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> obligationCategoryText;
        
        /// <remarks/>
        private System.Collections.Generic.List<EntityType> obligationEntity;
        
        /// <remarks/>
        private System.Collections.Generic.List<EntityType> obligationRecipient;
        
        /// <remarks/>
        private System.Collections.Generic.List<ObligationRecurrenceType> obligationRecurrence;
        
        public ObligationType()
        {
        }

        public ObligationType(System.Collections.Generic.List<AmountType> obligationDueAmount, System.Collections.Generic.List<ObligationExemptionType> obligationExemption, System.Collections.Generic.List<TextType> obligationRequirementDescriptionText, System.Collections.Generic.List<TextType> obligationCategoryText, System.Collections.Generic.List<EntityType> obligationEntity, System.Collections.Generic.List<EntityType> obligationRecipient, System.Collections.Generic.List<ObligationRecurrenceType> obligationRecurrence)
        {
            this.obligationDueAmount = obligationDueAmount;
            this.obligationExemption = obligationExemption;
            this.obligationRequirementDescriptionText = obligationRequirementDescriptionText;
            this.obligationCategoryText = obligationCategoryText;
            this.obligationEntity = obligationEntity;
            this.obligationRecipient = obligationRecipient;
            this.obligationRecurrence = obligationRecurrence;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationDueAmount", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<AmountType> ObligationDueAmount
        {
            get
            {
                return this.obligationDueAmount;
            }
            set
            {
                if ((this.obligationDueAmount != value))
                {
                    this.obligationDueAmount = value;
                    this.RaisePropertyChanged("ObligationDueAmount");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationExemption", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<ObligationExemptionType> ObligationExemption
        {
            get
            {
                return this.obligationExemption;
            }
            set
            {
                if ((this.obligationExemption != value))
                {
                    this.obligationExemption = value;
                    this.RaisePropertyChanged("ObligationExemption");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationRequirementDescriptionText", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<TextType> ObligationRequirementDescriptionText
        {
            get
            {
                return this.obligationRequirementDescriptionText;
            }
            set
            {
                if ((this.obligationRequirementDescriptionText != value))
                {
                    this.obligationRequirementDescriptionText = value;
                    this.RaisePropertyChanged("ObligationRequirementDescriptionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationCategoryText", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<TextType> ObligationCategoryText
        {
            get
            {
                return this.obligationCategoryText;
            }
            set
            {
                if ((this.obligationCategoryText != value))
                {
                    this.obligationCategoryText = value;
                    this.RaisePropertyChanged("ObligationCategoryText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationEntity", IsNullable=true, Order=4)]
        public System.Collections.Generic.List<EntityType> ObligationEntity
        {
            get
            {
                return this.obligationEntity;
            }
            set
            {
                if ((this.obligationEntity != value))
                {
                    this.obligationEntity = value;
                    this.RaisePropertyChanged("ObligationEntity");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationRecipient", IsNullable=true, Order=5)]
        public System.Collections.Generic.List<EntityType> ObligationRecipient
        {
            get
            {
                return this.obligationRecipient;
            }
            set
            {
                if ((this.obligationRecipient != value))
                {
                    this.obligationRecipient = value;
                    this.RaisePropertyChanged("ObligationRecipient");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationRecurrence", IsNullable=true, Order=6)]
        public System.Collections.Generic.List<ObligationRecurrenceType> ObligationRecurrence
        {
            get
            {
                return this.obligationRecurrence;
            }
            set
            {
                if ((this.obligationRecurrence != value))
                {
                    this.obligationRecurrence = value;
                    this.RaisePropertyChanged("ObligationRecurrence");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="AmountType")]
    [System.Xml.Serialization.XmlRootAttribute("DocumentSubmissionFee", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="AmountType")]
    
    public partial class AmountType : Decimal
    {
        
        /// <remarks/>
        private CurrencyCodeSimpleType currencyCode;
        
        /// <remarks/>
        private bool currencyCodeSpecified;
        
        /// <remarks/>
        private string currencyText;
        
        public AmountType()
        {
        }
        
        public AmountType(CurrencyCodeSimpleType currencyCode, bool currencyCodeSpecified, string currencyText)
        {
            this.currencyCode = currencyCode;
            this.currencyCodeSpecified = currencyCodeSpecified;
            this.currencyText = currencyText;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, AttributeName="currencyCode")]
        public CurrencyCodeSimpleType CurrencyCode
        {
            get
            {
                return this.currencyCode;
            }
            set
            {
                if ((this.currencyCode != value))
                {
                    this.currencyCode = value;
                    this.currencyCodeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrencyCodeSpecified
        {
            get
            {
                return this.currencyCodeSpecified;
            }
            set
            {
                if ((this.currencyCodeSpecified != value))
                {
                    this.currencyCodeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, AttributeName="currencyText")]
        public string CurrencyText
        {
            get
            {
                return this.currencyText;
            }
            set
            {
                if ((this.currencyText != value))
                {
                    this.currencyText = value;
                }
            }
        }
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="NumericType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="NumericType")]
    public partial class NumericType : Decimal
    {
        
        public NumericType()
        {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ObligationExemptionType")]
    [System.Xml.Serialization.XmlRootAttribute("ObligationExemption", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ObligationExemptionType")]
    
    public partial class ObligationExemptionType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<AmountType> financialObligationExemptionAmount;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> obligationExemptionDescriptionText;
        
        public ObligationExemptionType()
        {
        }
        
        public ObligationExemptionType(System.Collections.Generic.List<AmountType> financialObligationExemptionAmount, System.Collections.Generic.List<TextType> obligationExemptionDescriptionText)
        {
            this.financialObligationExemptionAmount = financialObligationExemptionAmount;
            this.obligationExemptionDescriptionText = obligationExemptionDescriptionText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("FinancialObligationExemptionAmount", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<AmountType> FinancialObligationExemptionAmount
        {
            get
            {
                return this.financialObligationExemptionAmount;
            }
            set
            {
                if ((this.financialObligationExemptionAmount != value))
                {
                    this.financialObligationExemptionAmount = value;
                    this.RaisePropertyChanged("FinancialObligationExemptionAmount");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationExemptionDescriptionText", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<TextType> ObligationExemptionDescriptionText
        {
            get
            {
                return this.obligationExemptionDescriptionText;
            }
            set
            {
                if ((this.obligationExemptionDescriptionText != value))
                {
                    this.obligationExemptionDescriptionText = value;
                    this.RaisePropertyChanged("ObligationExemptionDescriptionText");
                }
            }
        }
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Ecf.OrganizationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Ecf.PersonType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Niem.Structures.v20.ReferenceType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="EntityType")]
    [System.Xml.Serialization.XmlRootAttribute("NiemEntity", Namespace = "http://niem.gov/niem/niem-core/2.0", IsNullable = true, ElementName = "EntityType")]
    
    public partial class EntityType : ComplexObjectType
    {
        
        /// <remarks/>
        private object entityRepresentation;


        private EntityRepresentationTpes entityRepresentationType;


        public EntityType()
        {
        }

        public EntityType(object entityRepresentation, EntityRepresentationTpes entityRepresentationType)
        {
            this.entityRepresentation = entityRepresentation;
            this.entityRepresentationType = entityRepresentationType;
        }

        public EntityType(OrganizationType organization)
        {
            this.entityRepresentation = organization;
            this.entityRepresentationType = EntityRepresentationTpes.EntityOrganization;
        }
        public EntityType(ReferenceType reference, EntityRepresentationTpes entityRepresentationType)
        {
            this.entityRepresentation = reference;
            this.entityRepresentationType = entityRepresentationType;
        }

        public EntityType(PersonType person)
        {
            this.entityRepresentation = person;
            this.entityRepresentationType = EntityRepresentationTpes.EntityPerson;
        }


        public EntityType(Oasis.LegalXml.CourtFiling.v40.Ecf.PersonType person)
        {
            this.entityRepresentation = person;
            this.entityRepresentationType = EntityRepresentationTpes.EcfPerson;
        }
        public EntityType(Oasis.LegalXml.CourtFiling.v40.Ecf.OrganizationType organization)
        {
            this.entityRepresentation = organization;
            this.entityRepresentationType = EntityRepresentationTpes.EcfOrganization;
        }

        public EntityType(Arizona.Courts.Extensions.v20.OrganizationType organization)
        {
            this.entityRepresentation = organization;
            this.entityRepresentationType = EntityRepresentationTpes.AZAOCOrganization;
        }


        [System.Xml.Serialization.XmlElementAttribute("EntityOrganization", typeof(OrganizationType), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("EntityOrganizationReference", typeof(ReferenceType), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("EntityPerson", typeof(PersonType), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("EntityPersonReference", typeof(ReferenceType), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("EntityPerson", typeof(Oasis.LegalXml.CourtFiling.v40.Ecf.PersonType), Order = 0, Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CommonTypes-4.0")]
        [System.Xml.Serialization.XmlElementAttribute("EntityOrganization", typeof(Oasis.LegalXml.CourtFiling.v40.Ecf.OrganizationType), Order = 0, Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CommonTypes-4.0")]
        [System.Xml.Serialization.XmlElementAttribute("EntityOrganization", typeof(Arizona.Courts.Extensions.v20.OrganizationType), Order = 0, Namespace = "http://schema.azcourts.az.gov/courts/efiling/ecf/extension/2.0")]

        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("EntityRepresentationType")]
        public object EntityRepresentation
        {
            get
            {
                return this.entityRepresentation;
            }
            set
            {
                if ((this.entityRepresentation != value))
                {
                    this.entityRepresentation = value;
                    this.RaisePropertyChanged("EntityRepresentation");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("EntityRepresentationType", Order = 1)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public EntityRepresentationTpes EntityRepresentationType
        {
            get
            {
                return this.entityRepresentationType;
            }
            set
            {
                if ((this.entityRepresentationType != value))
                {
                    this.entityRepresentationType = value;
                    this.RaisePropertyChanged("EntityRepresentationType");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnore()]
        public string FullName
        {
            get
            {
                string prefix;
                string givenName;
                string middleName;
                string surName;
                string suffix;
                string fullName = string.Empty;
                if (this.entityRepresentationType == EntityRepresentationTpes.EntityPerson ||
                     this.entityRepresentationType == EntityRepresentationTpes.EcfPerson)
                {
                    Niem.NiemCore.v20.PersonType niemPerson = this.entityRepresentation as Niem.NiemCore.v20.PersonType;
                    if (niemPerson != null && niemPerson.PersonName != null && niemPerson.PersonName.Count > 0)
                    {
                        niemPerson.PersonName[0].ToSimpleType(out prefix, out givenName, out middleName, out surName, out suffix, out fullName);
                    }
                }
                return fullName;
            }
        }

    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="OrganizationType")]
    [System.Xml.Serialization.XmlRootAttribute("EntityOrganization", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="OrganizationType")]
    
    public partial class OrganizationType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> organizationIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<LocationType> organizationLocation;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> organizationName;
        
        /// <remarks/>
        private System.Collections.Generic.List<ContactInformationType> organizationPrimaryContactInformation;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> organizationSubUnitName;
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> organizationTaxIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> organizationUnitName;
        
        public OrganizationType()
        {
        }

        public OrganizationType(Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.OrganizationType organization)
        {
            if (organization != null)
            {
                if (!string.IsNullOrEmpty(organization.Id))
                {
                    this.Id = organization.Id;
                }

                this.organizationName = NiemStringHelper<TextType>.ToList(organization.Name);
                this.organizationUnitName = NiemStringHelper<TextType>.ToList(organization.UnitName);
                this.OrganizationSubUnitName = NiemStringHelper<TextType>.ToList(organization.SubUnitName);

                if (!string.IsNullOrEmpty(organization.EportalOrganizationId) || !string.IsNullOrEmpty(organization.EportalUnitId) || !!string.IsNullOrEmpty(organization.EportalSubUnitId))
                {
                    System.Collections.Generic.List<IdentificationType> organizationIdentification = new System.Collections.Generic.List<IdentificationType>();

                    if (!string.IsNullOrEmpty(organization.EportalOrganizationId))
                    {
                        organizationIdentification.Add(new IdentificationType(organization.EportalOrganizationId, Constants.EPORTAL_IDENTIFICATION_ORGANIZATION_CATEGORY_TEXT));
                    };
                    if (!string.IsNullOrEmpty(organization.EportalUnitId))
                    {
                        organizationIdentification.Add(new IdentificationType(organization.EportalUnitId, Constants.EPORTAL_IDENTIFICATION_ORGANIZATION_UNIT_TEXT));
                    };
                    if (!string.IsNullOrEmpty(organization.EportalSubUnitId))
                    {
                        organizationIdentification.Add(new IdentificationType(organization.EportalSubUnitId, Constants.EPORTAL_IDENTIFICATION_ORGANIZATION_SUBUNIT_TEXT));
                    };

                    this.organizationIdentification = organizationIdentification;

                }

                if (organization.ContactInformation != null)
                {
                    if ( !string.IsNullOrEmpty(organization.ContactInformation.Address1) && 
                         !string.IsNullOrEmpty(organization.ContactInformation.City) && 
                         !string.IsNullOrEmpty(organization.ContactInformation.ZipCode)
                        )
                    {
                        this.organizationLocation = new System.Collections.Generic.List<LocationType>
                        {
                                new LocationType
                                { 
                                    LocationAddress = new System.Collections.Generic.List<AddressType>  {
                                     new AddressType
                                         (
                                             address1: organization.ContactInformation.Address1 , 
                                             address2: organization.ContactInformation.Address2 , 
                                             city: organization.ContactInformation.City , 
                                             state : organization.ContactInformation.State , 
                                             zipCode: organization.ContactInformation.ZipCode,
                                             countryCode: organization.ContactInformation.CountryCode ,
                                             country: organization.ContactInformation.Country
                                         ) 
                                    } 
                                }
                       };
                    }
                    this.organizationPrimaryContactInformation = new List<ContactInformationType>{new ContactInformationType(organization.ContactInformation) };
                            
                }

            }
        }

        public OrganizationType(string eportalOrganizationId, string name, string eportalUnitId, string unitName, string eportalSubUnitId, string subUnitName)
            : this
            (
               new Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.OrganizationType
                {
                    Id = string.Empty,
                    EportalOrganizationId = eportalOrganizationId,
                    Name = name ,
                    EportalUnitId = eportalUnitId ,
                    UnitName = unitName,
                    EportalSubUnitId = eportalSubUnitId ,
                    SubUnitName = subUnitName
                }
            )
        {


        }



        public OrganizationType
            (
                string id,
                string eportalOrganizationId,
                string name,
                string eportalUnitId,
                string unitName,
                string eportalSubUnitId,
                string subUnitName,
                string address1,
                string address2,
                string city,
                string state,
                string zipCode,
                string phoneNumber,
                string extension,
                string emailAddress
            ) :
            this
            (
               new Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.OrganizationType
                {
                    Id = id,
                    EportalOrganizationId = eportalOrganizationId,
                    Name = name,
                    EportalUnitId = eportalUnitId,
                    UnitName = unitName,
                    EportalSubUnitId = eportalSubUnitId,
                    SubUnitName = subUnitName,
                    ContactInformation = new Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.ContactInformationType
                    {
                         Address1 = address1 ,
                         Address2 = address2 ,
                         City = city,
                         State = state ,
                         ZipCode = zipCode,
                         PrimaryPhoneNumber = phoneNumber,
                         PhoneNumberExtension = extension ,
                         EmailAddress = emailAddress

                    }
                }
            )
        {
            
        }

        public void ToSimpleType(out Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.OrganizationType organization)
        {

            organization = new Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.OrganizationType
            {
                 Id = !string.IsNullOrEmpty(this.Id) ? this.Id : string.Empty ,
                 Name = NiemStringHelper<TextType>.FirstValue(this.organizationName),
                 UnitName = NiemStringHelper<TextType>.FirstValue(this.organizationUnitName),
                 SubUnitName = NiemStringHelper<TextType>.FirstValue(this.organizationSubUnitName),
                  
            };
            if (this.organizationPrimaryContactInformation != null && this.organizationPrimaryContactInformation.Count > 0)
            {
                Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.ContactInformationType contactInformation = null;
                this.organizationPrimaryContactInformation[0].ToSimpleType(out contactInformation);
                organization.ContactInformation = contactInformation;
            }
            if (organization.ContactInformation == null) organization.ContactInformation = new Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.ContactInformationType();
            if (this.organizationIdentification != null && this.organizationIdentification.Count > 0)
            {
                IdentificationType identification = this.organizationIdentification.Find
                    (ident => (NiemStringHelper<TextType>.FirstValue(ident.IdentificationCategories) == Niem.NiemCore.v20.Constants.EPORTAL_IDENTIFICATION_ORGANIZATION_CATEGORY_TEXT));
                if (identification != null)
                {
                    organization.EportalOrganizationId = NiemStringHelper<Niem.Proxy.xsd.v20.String>.FirstValue(identification.IdentificationID);
                }

                identification = this.organizationIdentification.Find
                    (ident => (NiemStringHelper<TextType>.FirstValue(ident.IdentificationCategories) == Niem.NiemCore.v20.Constants.EPORTAL_IDENTIFICATION_ORGANIZATION_UNIT_TEXT));
                if (identification != null)
                {
                    organization.EportalUnitId = NiemStringHelper<Niem.Proxy.xsd.v20.String>.FirstValue(identification.IdentificationID);
                }

                identification = this.organizationIdentification.Find
                    (ident => (NiemStringHelper<TextType>.FirstValue(ident.IdentificationCategories) == Niem.NiemCore.v20.Constants.EPORTAL_IDENTIFICATION_ORGANIZATION_SUBUNIT_TEXT));
                if (identification != null)
                {
                    organization.EportalSubUnitId = NiemStringHelper<Niem.Proxy.xsd.v20.String>.FirstValue(identification.IdentificationID);
                }
                
            }

        }

        
        public void ToSimpleType
            (
                out string id , 
                out string eportalOrganizationId , 
                out string name, 
                out string eportalUnitId , 
                out string unitName , 
                string eportalSubUnitId , 
                string subUnitName  , 
                out string address1, 
                out string address2, 
                out string city, 
                out string state, 
                out string zipCode, 
                out string addressFullText, 
                out string phoneNumber, 
                out string extension, 
                out string emailAddress 
            )
        {
            
            id = string.Empty ;
            name = string.Empty;
            unitName = string.Empty;
            subUnitName = string.Empty;
            address1 = string.Empty;
            address2 = string.Empty;
            city = string.Empty;
            state = string.Empty;
            zipCode = string.Empty;
            addressFullText = string.Empty;
            phoneNumber = string.Empty;
            extension = string.Empty;
            emailAddress = string.Empty;
            eportalOrganizationId = string.Empty;
            eportalUnitId = string.Empty;
            eportalSubUnitId = string.Empty;
            Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.OrganizationType organization = null ;
            this.ToSimpleType(out organization);
            if (organization != null)
            {
                id = organization.Id;
                name = organization.Name;
                unitName = organization.UnitName;
                subUnitName = organization.SubUnitName;
                eportalOrganizationId = organization.EportalOrganizationId;
                eportalUnitId = organization.EportalUnitId;
                eportalSubUnitId = organization.EportalSubUnitId;
                if (organization.ContactInformation != null)
                {
                    address1 = organization.ContactInformation.Address1;
                    address2 = organization.ContactInformation.Address2;
                    city = organization.ContactInformation.City;
                    state = organization.ContactInformation.State;
                    zipCode = organization.ContactInformation.ZipCode;
                    addressFullText = organization.ContactInformation.AddressFullText;
                    phoneNumber = organization.ContactInformation.PrimaryPhoneNumber;
                    extension = organization.ContactInformation.PhoneNumberExtension;
                    emailAddress = organization.ContactInformation.EmailAddress;
                }
            }
        }
        
        public OrganizationType(System.Collections.Generic.List<IdentificationType> organizationIdentification, System.Collections.Generic.List<LocationType> organizationLocation, System.Collections.Generic.List<TextType> organizationName, System.Collections.Generic.List<ContactInformationType> organizationPrimaryContactInformation, System.Collections.Generic.List<TextType> organizationSubUnitName, System.Collections.Generic.List<IdentificationType> organizationTaxIdentification, System.Collections.Generic.List<TextType> organizationUnitName)
        {
            this.organizationIdentification = organizationIdentification;
            this.organizationLocation = organizationLocation;
            this.organizationName = organizationName;
            this.organizationPrimaryContactInformation = organizationPrimaryContactInformation;
            this.organizationSubUnitName = organizationSubUnitName;
            this.organizationTaxIdentification = organizationTaxIdentification;
            this.organizationUnitName = organizationUnitName;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationIdentification", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<IdentificationType> OrganizationIdentification
        {
            get
            {
                return this.organizationIdentification;
            }
            set
            {
                if ((this.organizationIdentification != value))
                {
                    this.organizationIdentification = value;
                    this.RaisePropertyChanged("OrganizationIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationLocation", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<LocationType> OrganizationLocation
        {
            get
            {
                return this.organizationLocation;
            }
            set
            {
                if ((this.organizationLocation != value))
                {
                    this.organizationLocation = value;
                    this.RaisePropertyChanged("OrganizationLocation");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationName", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<TextType> OrganizationName
        {
            get
            {
                return this.organizationName;
            }
            set
            {
                if ((this.organizationName != value))
                {
                    this.organizationName = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationPrimaryContactInformation", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<ContactInformationType> OrganizationPrimaryContactInformation
        {
            get
            {
                return this.organizationPrimaryContactInformation;
            }
            set
            {
                if ((this.organizationPrimaryContactInformation != value))
                {
                    this.organizationPrimaryContactInformation = value;
                    this.RaisePropertyChanged("OrganizationPrimaryContactInformation");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationSubUnitName", IsNullable=true, Order=4)]
        public System.Collections.Generic.List<TextType> OrganizationSubUnitName
        {
            get
            {
                return this.organizationSubUnitName;
            }
            set
            {
                if ((this.organizationSubUnitName != value))
                {
                    this.organizationSubUnitName = value;
                    this.RaisePropertyChanged("OrganizationSubUnitName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationTaxIdentification", IsNullable=true, Order=5)]
        public System.Collections.Generic.List<IdentificationType> OrganizationTaxIdentification
        {
            get
            {
                return this.organizationTaxIdentification;
            }
            set
            {
                if ((this.organizationTaxIdentification != value))
                {
                    this.organizationTaxIdentification = value;
                    this.RaisePropertyChanged("OrganizationTaxIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationUnitName", IsNullable=true, Order=6)]
        public System.Collections.Generic.List<TextType> OrganizationUnitName
        {
            get
            {
                return this.organizationUnitName;
            }
            set
            {
                if ((this.organizationUnitName != value))
                {
                    this.organizationUnitName = value;
                    this.RaisePropertyChanged("OrganizationUnitName");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="LocationType")]
    [System.Xml.Serialization.XmlRootAttribute("IncidentLocation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="LocationType")]
    
    public partial class LocationType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<AddressType> locationAddress;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> locationDescriptionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<ProperNameTextType> locationName;
        
        public LocationType()
        {
        }
        
        public LocationType(System.Collections.Generic.List<AddressType> locationAddress, System.Collections.Generic.List<TextType> locationDescriptionText, System.Collections.Generic.List<ProperNameTextType> locationName)
        {
            this.locationAddress = locationAddress;
            this.locationDescriptionText = locationDescriptionText;
            this.locationName = locationName;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LocationAddress", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<AddressType> LocationAddress
        {
            get
            {
                return this.locationAddress;
            }
            set
            {
                if ((this.locationAddress != value))
                {
                    this.locationAddress = value;
                    this.RaisePropertyChanged("LocationAddress");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LocationDescriptionText", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<TextType> LocationDescriptionText
        {
            get
            {
                return this.locationDescriptionText;
            }
            set
            {
                if ((this.locationDescriptionText != value))
                {
                    this.locationDescriptionText = value;
                    this.RaisePropertyChanged("LocationDescriptionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LocationName", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<ProperNameTextType> LocationName
        {
            get
            {
                return this.locationName;
            }
            set
            {
                if ((this.locationName != value))
                {
                    this.locationName = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="AddressType")]
    [System.Xml.Serialization.XmlRootAttribute("Address", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="AddressType")]
    
    public partial class AddressType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> addressRepresentations;
        
        public AddressType()
        {
        }

        public AddressType(string address1, string address2, string city, string state, string zipCode , string countryCode , string country)
        {
            if ( !string.IsNullOrEmpty(address1) ||
                 !string.IsNullOrEmpty(address2) ||
                 !string.IsNullOrEmpty(city) ||
                 !string.IsNullOrEmpty(state) ||
                 !string.IsNullOrEmpty(zipCode)
            )
            {
                addressRepresentations = new System.Collections.Generic.List<object>();
                addressRepresentations.Add(new StructuredAddressType(address1, address2, city, state, zipCode , countryCodeText:countryCode, country:country));

                System.Text.StringBuilder addressFullTextBuilder = new System.Text.StringBuilder();
                if (!string.IsNullOrEmpty(address1)) addressFullTextBuilder.Append(address1.Trim());
                if (!string.IsNullOrEmpty(address2)) addressFullTextBuilder.Append(" " + address2.Trim());
                if (!string.IsNullOrEmpty(city)) addressFullTextBuilder.Append(" " + city.Trim());
                if (!string.IsNullOrEmpty(state)) addressFullTextBuilder.Append(" " + state.Trim());
                if (!string.IsNullOrEmpty(zipCode)) addressFullTextBuilder.Append(" " + zipCode.Trim());
                if (!string.IsNullOrEmpty(country)) addressFullTextBuilder.Append(" " + country.Trim());

                addressRepresentations.Add(new TextType(addressFullTextBuilder.ToString().Trim()));

            }
        }

        public void ToSimpleType(out string address1, out string address2, out string city, out string state, out string zipCode, out string addressFullText , out string countryCode , out string country)
        {
            address1 = string.Empty;
            address2 = string.Empty;
            city = string.Empty;
            state = string.Empty;
            zipCode = string.Empty;
            addressFullText = string.Empty;
            countryCode = string.Empty;
            country = string.Empty;

            if (this.addressRepresentations != null && this.addressRepresentations.Count > 0)
            {
                for (int i = 0; i < this.addressRepresentations.Count; i++)
                {
                    if (this.addressRepresentations[i] is StructuredAddressType)
                    {
                        StructuredAddressType structuredAddress = this.addressRepresentations[i] as StructuredAddressType;
                        structuredAddress.ToSimpleType(out address1, out address2, out city, out state, out zipCode , out countryCode , out country);
                    }
                    else if (this.addressRepresentations[i] is TextType)
                    {
                        TextType completeAddress = this.addressRepresentations[i] as TextType;
                        addressFullText = completeAddress != null  ? completeAddress.ToString() : string.Empty; 

                    }

                }
            }
        }


        public AddressType(System.Collections.Generic.List<object> addressRepresentations)
        {
            this.addressRepresentations = addressRepresentations;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AddressFullText", typeof(TextType), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("StructuredAddress", typeof(StructuredAddressType), IsNullable=true, Order=0)]
        public System.Collections.Generic.List<object> AddressRepresentations
        {
            get
            {
                return this.addressRepresentations;
            }
            set
            {
                if ((this.addressRepresentations != value))
                {
                    this.addressRepresentations = value;
                    this.RaisePropertyChanged("AddressRepresentations");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="StructuredAddressType")]
    [System.Xml.Serialization.XmlRootAttribute("StructuredAddress", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="StructuredAddressType")]
    
    public partial class StructuredAddressType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> addressRecipientName;
        
        /// <remarks/>
        private object[] addressDeliveryPoints;
        
        /// <remarks/>
        private AddressDeliveryPointType[] addressDeliveryPointTypes;
        
        /// <remarks/>
        private System.Collections.Generic.List<ProperNameTextType> locationCityName;
        
        /// <remarks/>
        private System.Collections.Generic.List<object> locationCounty;
        
        /// <remarks/>
        private System.Collections.Generic.List<object> locationState;
        
        /// <remarks/>
        private System.Collections.Generic.List<object> locationCountry;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> locationPostalCode;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> locationPostalExtensionCode;
        
        public StructuredAddressType()
        {
        }


        public StructuredAddressType(string address1, string address2, string city, string state, string zipCode, string countryCodeText , string country)
        {

            if (!string.IsNullOrEmpty(address1) || !string.IsNullOrEmpty(address2))
            {
                int numberOfaddressDeliveryPoints = 0;
                if (string.IsNullOrEmpty(address1) && !string.IsNullOrEmpty(address2))
                {
                    address1 = address2;
                    address2 = string.Empty;
                }
                if (!string.IsNullOrEmpty(address1)) numberOfaddressDeliveryPoints++;
                if (!string.IsNullOrEmpty(address2)) numberOfaddressDeliveryPoints++;
                if (numberOfaddressDeliveryPoints > 0)
                {
                    addressDeliveryPointTypes = new AddressDeliveryPointType[numberOfaddressDeliveryPoints];
                    addressDeliveryPoints = new object[numberOfaddressDeliveryPoints];
                    if (!string.IsNullOrEmpty(address1))
                    {
                        addressDeliveryPointTypes[0] = AddressDeliveryPointType.AddressDeliveryPointText;
                        addressDeliveryPoints[0] = new TextType(address1);
                    }
                    if (!string.IsNullOrEmpty(address2))
                    {
                        addressDeliveryPointTypes[1] = AddressDeliveryPointType.AddressDeliveryPointText;
                        addressDeliveryPoints[1] = new TextType(address2);
                    }

                }

            }

            if (!string.IsNullOrEmpty(city) )
            {
                locationCityName = NiemStringHelper<ProperNameTextType>.ToList(city);
            }
            if (!string.IsNullOrEmpty(state))
            {
                locationState = new System.Collections.Generic.List<object>();
                // We will throw this into LocationStateName
                // if state is a valid Usps state
                if (System.Enum.IsDefined(typeof(USStateCodeSimpleType), state))
                {
                    USStateCodeSimpleType stateCodeSimpleType = (USStateCodeSimpleType)System.Enum.Parse(typeof(USStateCodeSimpleType), state);
                    USStateCodeType stateCode = new USStateCodeType();
                    stateCode.Value = stateCodeSimpleType;
                    locationState.Add(stateCode);
                    

                }
                locationState.Add(new ProperNameTextType(state));
            }
            if (!string.IsNullOrEmpty(zipCode))
            {
                locationPostalCode = NiemStringHelper<String>.ToList(zipCode);
            }
            if (!string.IsNullOrEmpty(countryCodeText))
            {
                locationCountry = new System.Collections.Generic.List<object>();
                // We will throw this into LocationStateName
                // if state is a valid Usps state
                if (System.Enum.IsDefined(typeof(Niem.Fips104.v20.CountryCodeSimpleType), countryCodeText))
                {
                    Niem.Fips104.v20.CountryCodeSimpleType countryCodeSimple = (Niem.Fips104.v20.CountryCodeSimpleType)System.Enum.Parse(typeof(Niem.Fips104.v20.CountryCodeSimpleType), countryCodeText);
                    Niem.Fips104.v20.CountryCodeType countryCode = new CountryCodeType { Value = countryCodeSimple };
                    locationCountry.Add(countryCode);
                }
                locationCountry.Add(new ProperNameTextType(country));
            }


        }

        public void ToSimpleType(out string address1, out string address2, out string city, out string state, out string zipCode , out string countryCode , out string country )
        {
            address1 = string.Empty;
            address2 = string.Empty;
            city = string.Empty;
            state = string.Empty;
            zipCode = string.Empty;
            countryCode = string.Empty;
            country = string.Empty;

            if (this.addressDeliveryPoints != null && this.addressDeliveryPoints.Length > 0 && this.addressDeliveryPointTypes != null && this.addressDeliveryPointTypes.Length > 0 )
            {
                switch (this.addressDeliveryPointTypes[0])
                {
                    case AddressDeliveryPointType.LocationStreet:
                        StreetType street = this.addressDeliveryPoints[0] as StreetType;
                        address1 = street != null && street.StreetFullText != null && street.StreetFullText.Count > 0  ?  street.StreetFullText[0].ToString() : string.Empty ;
                        break;
                    case AddressDeliveryPointType.AddressDeliveryPointText:
                        TextType textType = this.addressDeliveryPoints[0] as TextType;
                        address1 = textType != null  ? textType.ToString() : string.Empty;
                        break; 

                }
            };
            if (this.addressDeliveryPoints != null && this.addressDeliveryPoints.Length > 1 && this.addressDeliveryPointTypes != null && this.addressDeliveryPointTypes.Length > 1)
            {
                switch (this.addressDeliveryPointTypes[1])
                {
                    case AddressDeliveryPointType.AddressDeliveryPointText:
                        TextType textType = this.addressDeliveryPoints[1] as TextType;
                        address2 = textType != null ? textType.ToString() : string.Empty;
                        break;

                }

            };

            city = NiemStringHelper<ProperNameTextType>.FirstValue(this.locationCityName);

            if (this.locationState != null && this.locationState.Count > 0 )
            {
                
                if (this.locationState[0] is USStateCodeType)
                {
                    USStateCodeType stateCode = this.locationState[0] as USStateCodeType;
                    state = stateCode.Value.ToString(); 
                }
                else if ( this.locationState[0] is ProperNameTextType )
                {
                    ProperNameTextType stateProperNameText = this.locationState[0] as ProperNameTextType ;
                    state = stateProperNameText != null  ? stateProperNameText.ToString() : string.Empty;
                }
                if (this.locationState.Count > 1 && this.locationState[1] is ProperNameTextType)
                {
                    ProperNameTextType stateProperNameText = this.locationState[1] as ProperNameTextType;
                    state = stateProperNameText != null ? stateProperNameText.ToString() : string.Empty;
                }
            }

            if (this.locationCountry != null && this.locationCountry.Count > 0)
            {
                if (this.locationCountry[0] is Niem.Fips104.v20.CountryCodeType)
                {
                    Niem.Fips104.v20.CountryCodeType fifsCountryCode = this.locationCountry[0] as Niem.Fips104.v20.CountryCodeType;
                    countryCode = fifsCountryCode.Value.ToString();
                }
                else if (this.locationCountry[0] is ProperNameTextType)
                {
                    ProperNameTextType countryNameText = this.locationCountry[0] as ProperNameTextType;
                    countryCode = countryNameText != null ? countryNameText.ToString() : string.Empty;
                }
                if (this.locationCountry.Count > 1 && this.locationCountry[1] is ProperNameTextType)
                {
                    ProperNameTextType countryNameText = this.locationCountry[1] as ProperNameTextType;
                    country= countryNameText != null ? countryNameText.ToString() : string.Empty;
                }

            }

            zipCode = NiemStringHelper<String>.FirstValue(this.locationPostalCode);

        }


        public StructuredAddressType(System.Collections.Generic.List<TextType> addressRecipientName, object[] addressDeliveryPoints, AddressDeliveryPointType[] addressDeliveryPointTypes, System.Collections.Generic.List<ProperNameTextType> locationCityName, System.Collections.Generic.List<object> locationCounty, System.Collections.Generic.List<object> locationState, System.Collections.Generic.List<object> locationCountry, System.Collections.Generic.List<String> locationPostalCode, System.Collections.Generic.List<String> locationPostalExtensionCode)
        {
            this.addressRecipientName = addressRecipientName;
            this.addressDeliveryPoints = addressDeliveryPoints;
            this.addressDeliveryPointTypes = addressDeliveryPointTypes;
            this.locationCityName = locationCityName;
            this.locationCounty = locationCounty;
            this.locationState = locationState;
            this.locationCountry = locationCountry;
            this.locationPostalCode = locationPostalCode;
            this.locationPostalExtensionCode = locationPostalExtensionCode;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AddressRecipientName", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> AddressRecipientName
        {
            get
            {
                return this.addressRecipientName;
            }
            set
            {
                if ((this.addressRecipientName != value))
                {
                    this.addressRecipientName = value;
                    this.RaisePropertyChanged("AddressRecipientName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("AddressDeliveryPointID", typeof(String), IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("AddressDeliveryPointText", typeof(TextType), IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("AddressPrivateMailboxText", typeof(TextType), IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("AddressSecondaryUnitText", typeof(TextType), IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("LocationRouteName", typeof(TextType), IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("LocationStreet", typeof(StreetType), IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("AddressDeliveryPointTypes")]
        public object[] AddressDeliveryPoints
        {
            get
            {
                return this.addressDeliveryPoints;
            }
            set
            {
                if ((this.addressDeliveryPoints != value))
                {
                    this.addressDeliveryPoints = value;
                    this.RaisePropertyChanged("AddressDeliveryPoints");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("AddressDeliveryPointTypes", Order = 2)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public AddressDeliveryPointType[] AddressDeliveryPointTypes
        {
            get
            {
                return this.addressDeliveryPointTypes;
            }
            set
            {
                if ((this.addressDeliveryPointTypes != value))
                {
                    this.addressDeliveryPointTypes = value;
                    this.RaisePropertyChanged("AddressDeliveryPointTypes");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LocationCityName", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<ProperNameTextType> LocationCityName
        {
            get
            {
                return this.locationCityName;
            }
            set
            {
                if ((this.locationCityName != value))
                {
                    this.locationCityName = value;
                    this.RaisePropertyChanged("LocationCityName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LocationCountyCode", typeof(USCountyCodeType), IsNullable=true, Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("LocationCountyName", typeof(ProperNameTextType), IsNullable=true, Order=4)]
        public System.Collections.Generic.List<object> LocationCounty
        {
            get
            {
                return this.locationCounty;
            }
            set
            {
                if ((this.locationCounty != value))
                {
                    this.locationCounty= value;
                    this.RaisePropertyChanged("LocationCounty");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LocationStateName", typeof(ProperNameTextType), IsNullable=true, Order=5)]
        [System.Xml.Serialization.XmlElementAttribute("LocationStateUSPostalServiceCode", typeof(USStateCodeType), IsNullable=true, Order=5)]
        public System.Collections.Generic.List<object> LocationState
        {
            get
            {
                return this.locationState;
            }
            set
            {
                if ((this.locationState != value))
                {
                    this.locationState = value;
                    this.RaisePropertyChanged("LocationState");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LocationCountryFIPS10-4Code", typeof(CountryCodeType), IsNullable=true, Order=6)]
        [System.Xml.Serialization.XmlElementAttribute("LocationCountryName", typeof(ProperNameTextType), IsNullable=true, Order=6)]
        public System.Collections.Generic.List<object> LocationCountry
        {
            get
            {
                return this.locationCountry;
            }
            set
            {
                if ((this.locationCountry != value))
                {
                    this.locationCountry = value;
                    this.RaisePropertyChanged("LocationCountry");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LocationPostalCode", IsNullable=true, Order=7)]
        public System.Collections.Generic.List<String> LocationPostalCode
        {
            get
            {
                return this.locationPostalCode;
            }
            set
            {
                if ((this.locationPostalCode != value))
                {
                    this.locationPostalCode = value;
                    this.RaisePropertyChanged("LocationPostalCode");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LocationPostalExtensionCode", IsNullable=true, Order=8)]
        public System.Collections.Generic.List<String> LocationPostalExtensionCode
        {
            get
            {
                return this.locationPostalExtensionCode;
            }
            set
            {
                if ((this.locationPostalExtensionCode != value))
                {
                    this.locationPostalExtensionCode = value;
                    this.RaisePropertyChanged("LocationPostalExtensionCode");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="StreetType")]
    [System.Xml.Serialization.XmlRootAttribute("LocationStreet", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="StreetType")]
    
    public partial class StreetType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> streetFullText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> streetNumberText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> streetPredirectionalText;
        
        /// <remarks/>
        private System.Collections.Generic.List<ProperNameTextType> streetName;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> streetCategoryText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> streetPostdirectionalText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> streetExtensionText;
        
        public StreetType()
        {
        }

        public StreetType(string street)
        {
            streetFullText = new System.Collections.Generic.List<TextType>();
            streetFullText.Add(new TextType(street)); 
        }

        public StreetType(System.Collections.Generic.List<TextType> streetFullText, System.Collections.Generic.List<TextType> streetNumberText, System.Collections.Generic.List<TextType> streetPredirectionalText, System.Collections.Generic.List<ProperNameTextType> streetName, System.Collections.Generic.List<TextType> streetCategoryText, System.Collections.Generic.List<TextType> streetPostdirectionalText, System.Collections.Generic.List<TextType> streetExtensionText)
        {
            this.streetFullText = streetFullText;
            this.streetNumberText = streetNumberText;
            this.streetPredirectionalText = streetPredirectionalText;
            this.streetName = streetName;
            this.streetCategoryText = streetCategoryText;
            this.streetPostdirectionalText = streetPostdirectionalText;
            this.streetExtensionText = streetExtensionText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StreetFullText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> StreetFullText
        {
            get
            {
                return this.streetFullText;
            }
            set
            {
                if ((this.streetFullText != value))
                {
                    this.streetFullText = value;
                    this.RaisePropertyChanged("StreetFullText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StreetNumberText", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<TextType> StreetNumberText
        {
            get
            {
                return this.streetNumberText;
            }
            set
            {
                if ((this.streetNumberText != value))
                {
                    this.streetNumberText = value;
                    this.RaisePropertyChanged("StreetNumberText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StreetPredirectionalText", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<TextType> StreetPredirectionalText
        {
            get
            {
                return this.streetPredirectionalText;
            }
            set
            {
                if ((this.streetPredirectionalText != value))
                {
                    this.streetPredirectionalText = value;
                    this.RaisePropertyChanged("StreetPredirectionalText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StreetName", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<ProperNameTextType> StreetName
        {
            get
            {
                return this.streetName;
            }
            set
            {
                if ((this.streetName != value))
                {
                    this.streetName = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StreetCategoryText", IsNullable=true, Order=4)]
        public System.Collections.Generic.List<TextType> StreetCategoryText
        {
            get
            {
                return this.streetCategoryText;
            }
            set
            {
                if ((this.streetCategoryText != value))
                {
                    this.streetCategoryText = value;
                    this.RaisePropertyChanged("StreetCategoryText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StreetPostdirectionalText", IsNullable=true, Order=5)]
        public System.Collections.Generic.List<TextType> StreetPostdirectionalText
        {
            get
            {
                return this.streetPostdirectionalText;
            }
            set
            {
                if ((this.streetPostdirectionalText != value))
                {
                    this.streetPostdirectionalText = value;
                    this.RaisePropertyChanged("StreetPostdirectionalText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StreetExtensionText", IsNullable=true, Order=6)]
        public System.Collections.Generic.List<TextType> StreetExtensionText
        {
            get
            {
                return this.streetExtensionText;
            }
            set
            {
                if ((this.streetExtensionText != value))
                {
                    this.streetExtensionText = value;
                    this.RaisePropertyChanged("StreetExtensionText");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://niem.gov/niem/niem-core/2.0", IncludeInSchema = true, TypeName = "AddressDeliveryPointType")]
    public enum AddressDeliveryPointType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AddressDeliveryPointID")]
        AddressDeliveryPointID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AddressDeliveryPointText")]
        AddressDeliveryPointText,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AddressPrivateMailboxText")]
        AddressPrivateMailboxText,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="AddressSecondaryUnitText")]
        AddressSecondaryUnitText,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="LocationRouteName")]
        LocationRouteName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="LocationStreet")]
        LocationStreet,
    }
    
    
    
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    // [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ContactInformationType")]
    [System.Xml.Serialization.XmlRootAttribute("ContactInformation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ContactInformationType")]
    
    public partial class ContactInformationType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> contactMeans;
        
        /// <remarks/>
        private System.Collections.Generic.List<EntityType> contactEntity;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> contactEntityDescriptionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> contactInformationDescriptionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<PersonType> contactResponder;
        
        public ContactInformationType()
        {
        }

        public ContactInformationType(Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.ContactInformationType contactInformation)
        {
            if (contactInformation != null)
            {
                if (!string.IsNullOrEmpty(contactInformation.Address1) ||
                      !string.IsNullOrEmpty(contactInformation.Address2) ||
                      !string.IsNullOrEmpty(contactInformation.City) ||
                      !string.IsNullOrEmpty(contactInformation.State) ||
                      !string.IsNullOrEmpty(contactInformation.ZipCode) ||
                      !string.IsNullOrEmpty(contactInformation.EmailAddress) ||
                      !string.IsNullOrEmpty(contactInformation.PrimaryPhoneNumber) ||
                      !string.IsNullOrEmpty(contactInformation.HomePhoneNumber) ||
                      !string.IsNullOrEmpty(contactInformation.WorkPhoneNumber) ||
                      !string.IsNullOrEmpty(contactInformation.MobilePhoneNumber) ||
                      !string.IsNullOrEmpty(contactInformation.FaxPhoneNumber) 
                 )
                {
                    contactMeans = new System.Collections.Generic.List<object>();
                    if (!string.IsNullOrEmpty(contactInformation.EmailAddress))
                    {
                        // contactMeans.Add(new Niem.Proxy.xsd.v20.String(emailAddress)) ; 
                        string[] emailAddressArray = contactInformation.EmailAddress.Split(';');
                        if (emailAddressArray != null && emailAddressArray.Length > 0)
                        {
                            foreach (string arrayItem in emailAddressArray)
                            {
                                string singleEmailAddress = arrayItem.Trim();
                                if (!string.IsNullOrEmpty(singleEmailAddress))
                                {
                                    contactMeans.Add(new Niem.Proxy.xsd.v20.String(singleEmailAddress));
                                }
                            }
                        }
                    }
                    if (!string.IsNullOrEmpty(contactInformation.Address1) ||
                        !string.IsNullOrEmpty(contactInformation.Address2) ||
                        !string.IsNullOrEmpty(contactInformation.City) ||
                        !string.IsNullOrEmpty(contactInformation.State) ||
                        !string.IsNullOrEmpty(contactInformation.ZipCode)
                    )
                    {
                        contactMeans.Add(new AddressType(contactInformation.Address1, contactInformation.Address2, contactInformation.City, contactInformation.State, contactInformation.ZipCode , contactInformation.CountryCode, contactInformation.Country));
                    }
                    if (!string.IsNullOrEmpty(contactInformation.PrimaryPhoneNumber))
                    {
                        contactMeans.Add(new TelephoneNumberType(contactInformation.PrimaryPhoneNumber, contactInformation.PhoneNumberExtension, "PRIMARYPHONE"));
                    }
                    if (!string.IsNullOrEmpty(contactInformation.HomePhoneNumber))
                    {
                        contactMeans.Add(new TelephoneNumberType(contactInformation.HomePhoneNumber, string.Empty, "HOMEPHONE"));
                    }
                    if (!string.IsNullOrEmpty(contactInformation.WorkPhoneNumber))
                    {
                        contactMeans.Add(new TelephoneNumberType(contactInformation.WorkPhoneNumber, contactInformation.WorkPhoneNumberExtension, "WORKPHONE"));
                    }
                    if (!string.IsNullOrEmpty(contactInformation.MobilePhoneNumber))
                    {
                        contactMeans.Add(new TelephoneNumberType(contactInformation.MobilePhoneNumber, string.Empty, "MOBILEPHONE"));
                    }

                    if (!string.IsNullOrEmpty(contactInformation.FaxPhoneNumber))
                    {
                        contactMeans.Add(new TelephoneNumberType(contactInformation.FaxPhoneNumber, string.Empty, "FAXPHONE"));
                    }
                }

            }
        }
        public ContactInformationType(string address1, string address2, string city, string state, string zipCode , string phoneNumber , string extension ,  string emailAddress) : 
            this
            ( 
               new Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.ContactInformationType
               {
                    Address1 = address1,
                    Address2  = address2 ,
                    City = city,
                    State = state ,
                    ZipCode = zipCode ,
                    PrimaryPhoneNumber = phoneNumber ,
                    PhoneNumberExtension = extension ,
                    EmailAddress = emailAddress
               }
            ) 
        {

        }
        public void ToSimpleType(out Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.ContactInformationType contactInformation)
        {
            
            contactInformation = null;


            if (this.contactMeans != null && this.contactMeans.Count > 0)
            {
                contactInformation = new Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.ContactInformationType();
                System.Text.StringBuilder sb = new System.Text.StringBuilder();
                int numberOfEmailAddresses = 0;
                for (int i = 0; i < this.contactMeans.Count; i++)
                {

                    if (this.contactMeans[i] is String)
                    {
                        String contactEmailID = this.contactMeans[i] as String;
                        System.String singleEmailAddress = contactEmailID.ToString();
                        if (!string.IsNullOrEmpty(singleEmailAddress))
                        {
                            numberOfEmailAddresses++;
                            if (numberOfEmailAddresses > 1) sb.Append(";");
                            sb.Append(singleEmailAddress);
                        }
                    }
                    else if (this.contactMeans[i] is AddressType)
                    {
                        AddressType contactMailingAddress = this.contactMeans[i] as AddressType;
                        string address1 = string.Empty;
                        string address2 = string.Empty;
                        string city = string.Empty;
                        string state = string.Empty;
                        string zipCode = string.Empty;
                        string addressFullText = string.Empty;
                        string countryCode = string.Empty;
                        string country = string.Empty;

                        contactMailingAddress.ToSimpleType(out address1, out address2, out city, out state, out zipCode, out addressFullText , out countryCode , out country);
                        contactInformation.Address1 = address1;
                        contactInformation.Address2 = address2;
                        contactInformation.City = city;
                        contactInformation.State = state;
                        contactInformation.ZipCode = zipCode;
                        contactInformation.AddressFullText = addressFullText;
                        contactInformation.CountryCode = countryCode;
                        contactInformation.Country = country;
                    }
                    else if (this.contactMeans[i] is TelephoneNumberType)
                    {
                        TelephoneNumberType contactTelephoneNumber = this.contactMeans[i] as TelephoneNumberType;
                        string phoneNumber = string.Empty;
                        string extension = string.Empty;
                        string phoneNumberType = string.Empty;
                        contactTelephoneNumber.ToSimpleType(phoneNumber : out phoneNumber, extension : out extension , phoneNumberType: out phoneNumberType);
                        if (string.IsNullOrEmpty(phoneNumberType)) phoneNumberType = "PRIMARYPHONE";
                        switch (phoneNumberType)
                        {
                            case "PRIMARYPHONE":
                                contactInformation.PrimaryPhoneNumber = phoneNumber;
                                contactInformation.PhoneNumberExtension = extension;
                                break;
                            case "HOMEPHONE":
                                contactInformation.HomePhoneNumber = phoneNumber;
                                break;
                            case "WORKPHONE":
                                contactInformation.WorkPhoneNumber = phoneNumber;
                                contactInformation.WorkPhoneNumberExtension = extension;
                                break;
                            case "MOBILEPHONE":
                                contactInformation.MobilePhoneNumber = phoneNumber;
                                break;
                            case "FAXPHONE":
                                contactInformation.FaxPhoneNumber = phoneNumber;
                                break;

                        }
                    }
                }
                if (numberOfEmailAddresses > 0)
                {
                    contactInformation.EmailAddress = sb.ToString();
                }

            }
        }

        public void ToSimpleType
            (
                out string address1,  
                out string address2, 
                out string city, 
                out string state, 
                out string zipCode, 
                out string addressFullText , 
                out string phoneNumber, 
                out string extension, 
                out string emailAddress
            )
        {
            address1 = string.Empty;
            address2 = string.Empty;
            city = string.Empty;
            state = string.Empty;
            zipCode = string.Empty;
            addressFullText = string.Empty;
            phoneNumber = string.Empty;
            extension = string.Empty;
            emailAddress = string.Empty;

            Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.ContactInformationType contactInformation = null;
            this.ToSimpleType(out  contactInformation);
            if (contactInformation != null)
            {
                address1 = contactInformation.Address1 ;
                address2 = contactInformation.Address2 ;
                city  = contactInformation.City ;
                state = contactInformation.State ;
                zipCode = contactInformation.ZipCode ;
                phoneNumber = contactInformation.PrimaryPhoneNumber ;
                extension = contactInformation.PhoneNumberExtension ;
                emailAddress = contactInformation.EmailAddress;
                addressFullText = contactInformation.AddressFullText;
            }

        }

        public ContactInformationType
            (
                System.Collections.Generic.List<object> contactMeans, 
                System.Collections.Generic.List<EntityType> contactEntity, 
                System.Collections.Generic.List<TextType> contactEntityDescriptionText, 
                System.Collections.Generic.List<TextType> contactInformationDescriptionText, 
                System.Collections.Generic.List<PersonType> contactResponder
            )
        {
            this.contactMeans = contactMeans;
            this.contactEntity = contactEntity;
            this.contactEntityDescriptionText = contactEntityDescriptionText;
            this.contactInformationDescriptionText = contactInformationDescriptionText;
            this.contactResponder = contactResponder;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactEmailID", typeof(String), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ContactMailingAddress", typeof(AddressType), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ContactTelephoneNumber", typeof(TelephoneNumberType), IsNullable=true, Order=0)]
        
        public System.Collections.Generic.List<object> ContactMeans
        {
            get
            {
                return this.contactMeans;
            }
            set
            {
                if ((this.contactMeans != value))
                {
                    this.contactMeans = value;
                    this.RaisePropertyChanged("ContactMeans");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactEntity", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<EntityType> ContactEntity
        {
            get
            {
                return this.contactEntity;
            }
            set
            {
                if ((this.contactEntity != value))
                {
                    this.contactEntity = value;
                    this.RaisePropertyChanged("ContactEntity");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactEntityDescriptionText", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<TextType> ContactEntityDescriptionText
        {
            get
            {
                return this.contactEntityDescriptionText;
            }
            set
            {
                if ((this.contactEntityDescriptionText != value))
                {
                    this.contactEntityDescriptionText = value;
                    this.RaisePropertyChanged("ContactEntityDescriptionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationDescriptionText", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<TextType> ContactInformationDescriptionText
        {
            get
            {
                return this.contactInformationDescriptionText;
            }
            set
            {
                if ((this.contactInformationDescriptionText != value))
                {
                    this.contactInformationDescriptionText = value;
                    this.RaisePropertyChanged("ContactInformationDescriptionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactResponder", IsNullable=true, Order=4)]
        public System.Collections.Generic.List<PersonType> ContactResponder
        {
            get
            {
                return this.contactResponder;
            }
            set
            {
                if ((this.contactResponder != value))
                {
                    this.contactResponder = value;
                    this.RaisePropertyChanged("ContactResponder");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="TelephoneNumberType")]
    [System.Xml.Serialization.XmlRootAttribute("TelephoneNumber", Namespace = "http://niem.gov/niem/niem-core/2.0", IsNullable = true, ElementName = "TelephoneNumberType")]
    public partial class TelephoneNumberType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ComplexObjectType> telephoneNumberRepresentations;
        
        public TelephoneNumberType()
        {
        }
        public TelephoneNumberType(string phoneNumber) : this(phoneNumber, string.Empty )
        {
        }

        public TelephoneNumberType(string phoneNumber , string extension)
        {
            telephoneNumberRepresentations = new System.Collections.Generic.List<ComplexObjectType>{new FullTelephoneNumberType(phoneNumber , extension)};
        }

        public TelephoneNumberType(string phoneNumber, string extension, string phoneNumberType)
        {
            this.Id = phoneNumberType;
            telephoneNumberRepresentations = new System.Collections.Generic.List<ComplexObjectType> { new FullTelephoneNumberType(phoneNumber, extension) };
        }

        public void ToSimpleType(out string phoneNumber, out string extension)
        {
            phoneNumber = string.Empty;
            extension = string.Empty;
            string phoneNumberType = string.Empty;
            this.ToSimpleType(phoneNumber: out phoneNumber, extension: out extension, phoneNumberType: out phoneNumberType);

        }

        public void ToSimpleType(out string phoneNumber, out string extension, out string phoneNumberType)
        {
            phoneNumber = string.Empty;
            extension = string.Empty;
            phoneNumberType = this.Id;
            if (this.telephoneNumberRepresentations != null && this.telephoneNumberRepresentations.Count > 0)
            {
                if (this.telephoneNumberRepresentations[0] is FullTelephoneNumberType)
                {

                    FullTelephoneNumberType fullTelephoneNumber = this.telephoneNumberRepresentations[0] as FullTelephoneNumberType;
                    fullTelephoneNumber.ToSimpleType(out phoneNumber, out extension);
                }
                else if (this.telephoneNumberRepresentations[0] is InternationalTelephoneNumberType)
                {
                }
                else if (this.telephoneNumberRepresentations[0] is NANPTelephoneNumberType)
                {

                }
            }

        }

        public TelephoneNumberType(System.Collections.Generic.List<ComplexObjectType> telephoneNumberRepresentations)
        {
            this.telephoneNumberRepresentations = telephoneNumberRepresentations;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("FullTelephoneNumber", typeof(FullTelephoneNumberType), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("InternationalTelephoneNumber", typeof(InternationalTelephoneNumberType), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NANPTelephoneNumber", typeof(NANPTelephoneNumberType), IsNullable=true, Order=0)]
        public System.Collections.Generic.List<ComplexObjectType> TelephoneNumberRepresentations
        {
            get
            {
                return this.telephoneNumberRepresentations;
            }
            set
            {
                if ((this.telephoneNumberRepresentations != value))
                {
                    this.telephoneNumberRepresentations = value;
                    this.RaisePropertyChanged("TelephoneNumberRepresentations");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="FullTelephoneNumberType")]
    [System.Xml.Serialization.XmlRootAttribute("FullTelephoneNumber", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="FullTelephoneNumberType")]
    
    public partial class FullTelephoneNumberType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<String> telephoneNumberFullID;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> telephoneSuffixID;
        
        public FullTelephoneNumberType()
        {
        }

        public FullTelephoneNumberType(System.String phoneNumber) : this(phoneNumber , string.Empty ) 
        {
        }

        public FullTelephoneNumberType(System.String phoneNumber  , System.String extension)
        {
            if (!string.IsNullOrEmpty(phoneNumber))
            {
                this.telephoneNumberFullID = NiemStringHelper<String>.ToList(phoneNumber);
                if (!string.IsNullOrEmpty(extension)) this.telephoneSuffixID = NiemStringHelper<String>.ToList(extension);
            }
        }

        public FullTelephoneNumberType(System.Collections.Generic.List<String> telephoneNumberFullID, System.Collections.Generic.List<String> telephoneSuffixID)
        {
            this.telephoneNumberFullID = telephoneNumberFullID;
            this.telephoneSuffixID = telephoneSuffixID;
        }

        public void ToSimpleType(out System.String phoneNumber, out System.String extension)
        {
            phoneNumber = NiemStringHelper<String>.FirstValue(this.telephoneNumberFullID);
            extension = NiemStringHelper<String>.FirstValue(this.telephoneSuffixID);
        }

        [System.Xml.Serialization.XmlElementAttribute("TelephoneNumberFullID", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<String> TelephoneNumberFullID
        {
            get
            {
                return this.telephoneNumberFullID;
            }
            set
            {
                if ((this.telephoneNumberFullID != value))
                {
                    this.telephoneNumberFullID = value;
                    this.RaisePropertyChanged("TelephoneNumberFullID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TelephoneSuffixID", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<String> TelephoneSuffixID
        {
            get
            {
                return this.telephoneSuffixID;
            }
            set
            {
                if ((this.telephoneSuffixID != value))
                {
                    this.telephoneSuffixID = value;
                    this.RaisePropertyChanged("TelephoneSuffixID");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="InternationalTelephoneNumberType")]
    [System.Xml.Serialization.XmlRootAttribute("InternationalTelephoneNumber", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="InternationalTelephoneNumberType")]
    
    public partial class InternationalTelephoneNumberType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<String> telephoneCountryCodeID;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> telephoneNumberID;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> telephoneSuffixID;
        
        public InternationalTelephoneNumberType()
        {
        }
        
        public InternationalTelephoneNumberType(System.Collections.Generic.List<String> telephoneCountryCodeID, System.Collections.Generic.List<String> telephoneNumberID, System.Collections.Generic.List<String> telephoneSuffixID)
        {
            this.telephoneCountryCodeID = telephoneCountryCodeID;
            this.telephoneNumberID = telephoneNumberID;
            this.telephoneSuffixID = telephoneSuffixID;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TelephoneCountryCodeID", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<String> TelephoneCountryCodeID
        {
            get
            {
                return this.telephoneCountryCodeID;
            }
            set
            {
                if ((this.telephoneCountryCodeID != value))
                {
                    this.telephoneCountryCodeID = value;
                    this.RaisePropertyChanged("TelephoneCountryCodeID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TelephoneNumberID", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<String> TelephoneNumberID
        {
            get
            {
                return this.telephoneNumberID;
            }
            set
            {
                if ((this.telephoneNumberID != value))
                {
                    this.telephoneNumberID = value;
                    this.RaisePropertyChanged("TelephoneNumberID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TelephoneSuffixID", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<String> TelephoneSuffixID
        {
            get
            {
                return this.telephoneSuffixID;
            }
            set
            {
                if ((this.telephoneSuffixID != value))
                {
                    this.telephoneSuffixID = value;
                    this.RaisePropertyChanged("TelephoneSuffixID");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="NANPTelephoneNumberType")]
    [System.Xml.Serialization.XmlRootAttribute("NANPTelephoneNumber", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="NANPTelephoneNumberType")]
    
    public partial class NANPTelephoneNumberType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<String> telephoneAreaCodeID;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> telephoneExchangeID;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> telephoneLineID;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> telephoneSuffixID;
        
        public NANPTelephoneNumberType()
        {
        }
        
        public NANPTelephoneNumberType(System.Collections.Generic.List<String> telephoneAreaCodeID, System.Collections.Generic.List<String> telephoneExchangeID, System.Collections.Generic.List<String> telephoneLineID, System.Collections.Generic.List<String> telephoneSuffixID)
        {
            this.telephoneAreaCodeID = telephoneAreaCodeID;
            this.telephoneExchangeID = telephoneExchangeID;
            this.telephoneLineID = telephoneLineID;
            this.telephoneSuffixID = telephoneSuffixID;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TelephoneAreaCodeID", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<String> TelephoneAreaCodeID
        {
            get
            {
                return this.telephoneAreaCodeID;
            }
            set
            {
                if ((this.telephoneAreaCodeID != value))
                {
                    this.telephoneAreaCodeID = value;
                    this.RaisePropertyChanged("TelephoneAreaCodeID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TelephoneExchangeID", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<String> TelephoneExchangeID
        {
            get
            {
                return this.telephoneExchangeID;
            }
            set
            {
                if ((this.telephoneExchangeID != value))
                {
                    this.telephoneExchangeID = value;
                    this.RaisePropertyChanged("TelephoneExchangeID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TelephoneLineID", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<String> TelephoneLineID
        {
            get
            {
                return this.telephoneLineID;
            }
            set
            {
                if ((this.telephoneLineID != value))
                {
                    this.telephoneLineID = value;
                    this.RaisePropertyChanged("TelephoneLineID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("TelephoneSuffixID", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<String> TelephoneSuffixID
        {
            get
            {
                return this.telephoneSuffixID;
            }
            set
            {
                if ((this.telephoneSuffixID != value))
                {
                    this.telephoneSuffixID = value;
                    this.RaisePropertyChanged("TelephoneSuffixID");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PersonType")]
    [System.Xml.Serialization.XmlRootAttribute("ContactResponder", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PersonType")]
    
    public partial class PersonType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> personBirthDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<CapabilityType> personCapability;
        
        /// <remarks/>
        private System.Collections.Generic.List<CountryCodeType>  personCitizenship;
        
        /// <remarks/>
        private System.Collections.Generic.List<DNAType> personDNA;
        
        /// <remarks/>
        private System.Collections.Generic.List<object> personEthnicity;
        
        /// <remarks/>
        private System.Collections.Generic.List<EYECodeType> personEyeColor;
        
        /// <remarks/>
        private System.Collections.Generic.List<FingerprintSetType> personFingerprintSet;
        
        /// <remarks/>
        private System.Collections.Generic.List<HAICodeType> personHairColor;
        
        /// <remarks/>
        private System.Collections.Generic.List<LengthMeasureType> personHeightMeasure;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> personLanguageEnglishIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<PersonNameType> personName;
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> personOtherIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<PhysicalFeatureType> personPhysicalFeature;
        
        /// <remarks/>
        private System.Collections.Generic.List<PersonLanguageType> personPrimaryLanguage;
        
        /// <remarks/>
        private System.Collections.Generic.List<object> personRace;
        
        /// <remarks/>
        private System.Collections.Generic.List<SEXCodeType> personSexCode;
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> personStateIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> personTaxIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<WeightMeasureType> personWeightMeasure;
        
        public PersonType()
        {
        }

        public PersonType(Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.PersonType person)
        {
            if (person != null)
            {
                if (!string.IsNullOrEmpty(person.Id)) this.Id = person.Id;

                this.personName = new System.Collections.Generic.List<PersonNameType> 
                    { 
                        new PersonNameType
                         (
                            prefix: person.Prefix,  
                            givenName: person.GivenName, 
                            middleName: person.MiddleName ,
                            surName: person.SurName, 
                            suffix: person.Suffix,
                            suffixCode: person.SuffixCode
                         ) 
                    };
                if (!string.IsNullOrEmpty(person.EportalUserId))
                {
                    this.personOtherIdentification = new System.Collections.Generic.List<IdentificationType>
                    {
                        new IdentificationType(person.EportalUserId, Constants.EPORTAL_IDENTIFICATION_CATEGORY_TEXT)
                    };
                }
            }

        }

        public PersonType(string id , string prefix, string givenName, string middleName, string surName, string suffix , string eportalUserId)
            : this 
              (  new Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.PersonType
                 {
                      Id = id,
                      Prefix = prefix ,
                      GivenName = givenName,
                      MiddleName = middleName,
                      SurName = surName,
                      Suffix = suffix,
                      SuffixCode = suffix ,
                      EportalUserId = eportalUserId
                 }
               )
        {
            
        }

        public void ToSimpleType(out Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.PersonType person)
        {
            person = new Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.PersonType();
            person.Id = this.Id;

            if (this.personName != null && this.personName.Count > 0)
            {
                string prefix = string.Empty;
                string givenName = string.Empty;
                string middleName = string.Empty;
                string surName = string.Empty;
                string suffix = string.Empty;
                string suffixCode = string.Empty;
                string fullName = string.Empty;
                this.personName[0].ToSimpleType
                    (
                        prefix:  out prefix, 
                        givenName: out givenName, 
                        middleName: out middleName, 
                        surName : out surName, 
                        suffix : out suffix, 
                        suffixCode: out suffixCode,
                        fullName: out fullName
                    );
                person.Prefix = prefix;
                person.GivenName = givenName;
                person.MiddleName = middleName;
                person.SurName = surName;
                person.Suffix = suffix;
                person.SuffixCode = suffixCode;
                person.FullName = fullName;
            }

            if (this.personOtherIdentification != null && this.personOtherIdentification.Count > 0)
            {
                string eportalUserIdCategory = string.Empty;
                string eportlUserId = string.Empty;
                this.personOtherIdentification[0].ToSimpleType(out eportlUserId, out eportalUserIdCategory);
                person.EportalUserId = eportlUserId;
            }
        }

        public void ToSimpleType(out string id , out string prefix, out string givenName, out string middleName, out string surName, out string suffix, out string fullName, out string eportlUserId)
        {
            Oasis.LegalXml.CourtFiling.v40.EcfHelperTypes.PersonType person = null;
            this.ToSimpleType(out person);
            
            id = string.Empty;
            prefix = string.Empty;
            givenName = string.Empty;
            middleName = string.Empty;
            surName = string.Empty;
            suffix = string.Empty;
            fullName = string.Empty;
            eportlUserId = string.Empty;
            if (person != null)
            {
                id = person.Id;
                prefix = person.Prefix;
                givenName = person.GivenName;
                middleName = person.MiddleName;
                surName = person.SurName;
                suffix = person.Suffix;
                fullName = person.FullName;
                eportlUserId = person.EportalUserId;
            }

        }

        public int? PortalUserId
        {
            get
            {
                int? portalUserId = null;
                if (this.personOtherIdentification != null && this.personOtherIdentification.Count > 0)
                {
                    IdentificationType eportalUserIdIdentification = this.personOtherIdentification.Find(ident => (NiemStringHelper<TextType>.FirstValue(ident.IdentificationCategories).Equals(Constants.EPORTAL_IDENTIFICATION_CATEGORY_TEXT)));
                    if ( eportalUserIdIdentification != null ) 
                    {
                        int userIdTemporary = 0;
                        int.TryParse(NiemStringHelper<String>.FirstValue(eportalUserIdIdentification.IdentificationID), out userIdTemporary);
                        portalUserId = userIdTemporary;
                    }
                }

                return portalUserId;
            }
        }


        public PersonType(
                    System.Collections.Generic.List<DateType> personBirthDate, 
                    System.Collections.Generic.List<CapabilityType> personCapability,
                    System.Collections.Generic.List<CountryCodeType> personCitizenship, 
                    System.Collections.Generic.List<DNAType> personDNA,
                    System.Collections.Generic.List<object> personEthnicity,
                    System.Collections.Generic.List<EYECodeType> personEyeColor, 
                    System.Collections.Generic.List<FingerprintSetType> personFingerprintSet,
                    System.Collections.Generic.List<HAICodeType> personHairColor, 
                    System.Collections.Generic.List<LengthMeasureType> personHeightMeasure, 
                    System.Collections.Generic.List<Boolean> personLanguageEnglishIndicator, 
                    System.Collections.Generic.List<PersonNameType> personName, 
                    System.Collections.Generic.List<IdentificationType> personOtherIdentification, 
                    System.Collections.Generic.List<PhysicalFeatureType> personPhysicalFeature, 
                    System.Collections.Generic.List<PersonLanguageType> personPrimaryLanguage,
                    System.Collections.Generic.List<object> personRace,
                    System.Collections.Generic.List<SEXCodeType> personSexCode, 
                    System.Collections.Generic.List<IdentificationType> personStateIdentification, 
                    System.Collections.Generic.List<IdentificationType> personTaxIdentification, 
                    System.Collections.Generic.List<WeightMeasureType> personWeightMeasure)
        {
            this.personBirthDate = personBirthDate;
            this.personCapability = personCapability;
            this.personCitizenship = personCitizenship;
            this.personDNA = personDNA;
            this.personEthnicity = personEthnicity;
            this.personEyeColor = personEyeColor;
            this.personFingerprintSet = personFingerprintSet;
            this.personHairColor = personHairColor;
            this.personHeightMeasure = personHeightMeasure;
            this.personLanguageEnglishIndicator = personLanguageEnglishIndicator;
            this.personName = personName;
            this.personOtherIdentification = personOtherIdentification;
            this.personPhysicalFeature = personPhysicalFeature;
            this.personPrimaryLanguage = personPrimaryLanguage;
            this.personRace = personRace;
            this.personSexCode = personSexCode;
            this.personStateIdentification = personStateIdentification;
            this.personTaxIdentification = personTaxIdentification;
            this.personWeightMeasure = personWeightMeasure;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonBirthDate", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<DateType> PersonBirthDate
        {
            get
            {
                return this.personBirthDate;
            }
            set
            {
                if ((this.personBirthDate != value))
                {
                    this.personBirthDate = value;
                    this.RaisePropertyChanged("PersonBirthDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonCapability", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<CapabilityType> PersonCapability
        {
            get
            {
                return this.personCapability;
            }
            set
            {
                if ((this.personCapability != value))
                {
                    this.personCapability = value;
                    this.RaisePropertyChanged("PersonCapability");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonCitizenshipFIPS10-4Code", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<CountryCodeType> PersonCitizenship
        {
            get
            {
                return this.personCitizenship;
            }
            set
            {
                if ((this.personCitizenship != value))
                {
                    this.personCitizenship = value;
                    this.RaisePropertyChanged("PersonCitizenship");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonDNA", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<DNAType> PersonDNA
        {
            get
            {
                return this.personDNA;
            }
            set
            {
                if ((this.personDNA != value))
                {
                    this.personDNA = value;
                    this.RaisePropertyChanged("PersonDNA");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonEthnicityCode", typeof(EthnicityCodeType), IsNullable=true, Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("PersonEthnicityText", typeof(TextType), IsNullable=true, Order=4)]
        public System.Collections.Generic.List<object> PersonEthnicity
        {
            get
            {
                return this.personEthnicity;
            }
            set
            {
                if ((this.personEthnicity != value))
                {
                    this.personEthnicity = value;
                    this.RaisePropertyChanged("PersonEthnicity");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonEyeColorCode", IsNullable=true, Order=5)]
        public System.Collections.Generic.List<EYECodeType> PersonEyeColor
        {
            get
            {
                return this.personEyeColor;
            }
            set
            {
                if ((this.personEyeColor != value))
                {
                    this.personEyeColor = value;
                    this.RaisePropertyChanged("PersonEyeColor");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonFingerprintSet", IsNullable=true, Order=6)]
        public System.Collections.Generic.List<FingerprintSetType> PersonFingerprintSet
        {
            get
            {
                return this.personFingerprintSet;
            }
            set
            {
                if ((this.personFingerprintSet != value))
                {
                    this.personFingerprintSet = value;
                    this.RaisePropertyChanged("PersonFingerprintSet");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonHairColorCode", IsNullable=true, Order=7)]
        public System.Collections.Generic.List<HAICodeType> PersonHairColor
        {
            get
            {
                return this.personHairColor;
            }
            set
            {
                if ((this.personHairColor != value))
                {
                    this.personHairColor = value;
                    this.RaisePropertyChanged("PersonHairColor");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonHeightMeasure", IsNullable=true, Order=8)]
        public System.Collections.Generic.List<LengthMeasureType> PersonHeightMeasure
        {
            get
            {
                return this.personHeightMeasure;
            }
            set
            {
                if ((this.personHeightMeasure != value))
                {
                    this.personHeightMeasure = value;
                    this.RaisePropertyChanged("PersonHeightMeasure");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonLanguageEnglishIndicator", IsNullable=true, Order=9)]
        public System.Collections.Generic.List<Boolean> PersonLanguageEnglishIndicator
        {
            get
            {
                return this.personLanguageEnglishIndicator;
            }
            set
            {
                if ((this.personLanguageEnglishIndicator != value))
                {
                    this.personLanguageEnglishIndicator = value;
                    this.RaisePropertyChanged("PersonLanguageEnglishIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonName", IsNullable=true, Order=10)]
        public System.Collections.Generic.List<PersonNameType> PersonName
        {
            get
            {
                return this.personName;
            }
            set
            {
                if ((this.personName != value))
                {
                    this.personName = value;
                    this.RaisePropertyChanged("PersonName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonOtherIdentification", IsNullable=true, Order=11)]
        public System.Collections.Generic.List<IdentificationType> PersonOtherIdentification
        {
            get
            {
                return this.personOtherIdentification;
            }
            set
            {
                if ((this.personOtherIdentification != value))
                {
                    this.personOtherIdentification = value;
                    this.RaisePropertyChanged("PersonOtherIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonPhysicalFeature", IsNullable=true, Order=12)]
        public System.Collections.Generic.List<PhysicalFeatureType> PersonPhysicalFeature
        {
            get
            {
                return this.personPhysicalFeature;
            }
            set
            {
                if ((this.personPhysicalFeature != value))
                {
                    this.personPhysicalFeature = value;
                    this.RaisePropertyChanged("PersonPhysicalFeature");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonPrimaryLanguage", IsNullable=true, Order=13)]
        public System.Collections.Generic.List<PersonLanguageType> PersonPrimaryLanguage
        {
            get
            {
                return this.personPrimaryLanguage;
            }
            set
            {
                if ((this.personPrimaryLanguage != value))
                {
                    this.personPrimaryLanguage = value;
                    this.RaisePropertyChanged("PersonPrimaryLanguage");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonRaceCode", typeof(RACCodeType), IsNullable=true, Order=14)]
        [System.Xml.Serialization.XmlElementAttribute("PersonRaceText", typeof(TextType), IsNullable=true, Order=14)]
        public System.Collections.Generic.List<object> PersonRace
        {
            get
            {
                return this.personRace;
            }
            set
            {
                if ((this.personRace != value))
                {
                    this.personRace = value;
                    this.RaisePropertyChanged("PersonRace");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonSexCode", IsNullable=true, Order=15)]
        public System.Collections.Generic.List<SEXCodeType> PersonSexCode
        {
            get
            {
                return this.personSexCode;
            }
            set
            {
                if ((this.personSexCode != value))
                {
                    this.personSexCode = value;
                    this.RaisePropertyChanged("PersonSexCode");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonStateIdentification", IsNullable=true, Order=16)]
        public System.Collections.Generic.List<IdentificationType> PersonStateIdentification
        {
            get
            {
                return this.personStateIdentification;
            }
            set
            {
                if ((this.personStateIdentification != value))
                {
                    this.personStateIdentification = value;
                    this.RaisePropertyChanged("PersonStateIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonTaxIdentification", IsNullable=true, Order=17)]
        public System.Collections.Generic.List<IdentificationType> PersonTaxIdentification
        {
            get
            {
                return this.personTaxIdentification;
            }
            set
            {
                if ((this.personTaxIdentification != value))
                {
                    this.personTaxIdentification = value;
                    this.RaisePropertyChanged("PersonTaxIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonWeightMeasure", IsNullable=true, Order=18)]
        public System.Collections.Generic.List<WeightMeasureType> PersonWeightMeasure
        {
            get
            {
                return this.personWeightMeasure;
            }
            set
            {
                if ((this.personWeightMeasure != value))
                {
                    this.personWeightMeasure = value;
                    this.RaisePropertyChanged("PersonWeightMeasure");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="CapabilityType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonCapability", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="CapabilityType")]
    
    public partial class CapabilityType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> capabilityDescriptionText;
        
        public CapabilityType()
        {
        }
        
        public CapabilityType(System.Collections.Generic.List<TextType> capabilityDescriptionText)
        {
            this.capabilityDescriptionText = capabilityDescriptionText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CapabilityDescriptionText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> CapabilityDescriptionText
        {
            get
            {
                return this.capabilityDescriptionText;
            }
            set
            {
                if ((this.capabilityDescriptionText != value))
                {
                    this.capabilityDescriptionText = value;
                    this.RaisePropertyChanged("CapabilityDescriptionText");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DNAType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonDNA", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DNAType")]
    
    public partial class DNAType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<DNALocusType> dNALocus;
        
        /// <remarks/>
        private System.Collections.Generic.List<ImageType> dNAImage;
        
        public DNAType()
        {
        }
        
        public DNAType(System.Collections.Generic.List<DNALocusType> dNALocus, System.Collections.Generic.List<ImageType> dNAImage)
        {
            this.dNALocus = dNALocus;
            this.dNAImage = dNAImage;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DNALocus", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<DNALocusType> DNALocus
        {
            get
            {
                return this.dNALocus;
            }
            set
            {
                if ((this.dNALocus != value))
                {
                    this.dNALocus = value;
                    this.RaisePropertyChanged("DNALocus");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DNAImage", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<ImageType> DNAImage
        {
            get
            {
                return this.dNAImage;
            }
            set
            {
                if ((this.dNAImage != value))
                {
                    this.dNAImage = value;
                    this.RaisePropertyChanged("DNAImage");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DNALocusType")]
    [System.Xml.Serialization.XmlRootAttribute("DNALocus", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DNALocusType")]
    
    public partial class DNALocusType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> dNALocusCategoryText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> dNALocusValue;
        
        public DNALocusType()
        {
        }
        
        public DNALocusType(System.Collections.Generic.List<TextType> dNALocusCategoryText, System.Collections.Generic.List<TextType> dNALocusValue)
        {
            this.dNALocusCategoryText = dNALocusCategoryText;
            this.dNALocusValue = dNALocusValue;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DNALocusCategoryText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> DNALocusCategoryText
        {
            get
            {
                return this.dNALocusCategoryText;
            }
            set
            {
                if ((this.dNALocusCategoryText != value))
                {
                    this.dNALocusCategoryText = value;
                    this.RaisePropertyChanged("DNALocusCategoryText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DNALocusValue", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<TextType> DNALocusValue
        {
            get
            {
                return this.dNALocusValue;
            }
            set
            {
                if ((this.dNALocusValue != value))
                {
                    this.dNALocusValue = value;
                    this.RaisePropertyChanged("DNALocusValue");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ImageType")]
    [System.Xml.Serialization.XmlRootAttribute("BiometricImage", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ImageType")]
    public partial class ImageType : BinaryType
    {
        
        public ImageType()
        {
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ImageType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="BinaryType")]
    [System.Xml.Serialization.XmlRootAttribute("Attachment", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="BinaryType")]
    
    public partial class BinaryType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<Base64Binary> binaryObjects;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> binaryCaptureDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<EntityType> binaryCapturer;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> binaryDescriptionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> binaryFormatStandardName;
        
        /// <remarks/>
        private System.Collections.Generic.List<AnyURI> binaryLocationURI;
        
        /// <remarks/>
        private System.Collections.Generic.List<NonNegativeDecimalType> binarySizeValue;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> binaryCategoryText;
        
        public BinaryType()
        {
        }

        public BinaryType(byte[] binaryData)
        {
            if (binaryData != null && binaryData.Length > 0)
            {
                binaryObjects = new System.Collections.Generic.List<Base64Binary>();
                binaryObjects.Add(new Base64Binary(binaryData));
                binarySizeValue = new System.Collections.Generic.List<NonNegativeDecimalType>();
                binarySizeValue.Add(new NonNegativeDecimalType((decimal)binaryData.Length));
            }
        }


        public BinaryType(System.Collections.Generic.List<Base64Binary> binaryObjects, System.Collections.Generic.List<DateType> binaryCaptureDate, System.Collections.Generic.List<EntityType> binaryCapturer, System.Collections.Generic.List<TextType> binaryDescriptionText, System.Collections.Generic.List<TextType> binaryFormatStandardName, System.Collections.Generic.List<AnyURI> binaryLocationURI, System.Collections.Generic.List<NonNegativeDecimalType> binarySizeValue, System.Collections.Generic.List<TextType> binaryCategoryText)
        {
            this.binaryObjects = binaryObjects;
            this.binaryCaptureDate = binaryCaptureDate;
            this.binaryCapturer = binaryCapturer;
            this.binaryDescriptionText = binaryDescriptionText;
            this.binaryFormatStandardName = binaryFormatStandardName;
            this.binaryLocationURI = binaryLocationURI;
            this.binarySizeValue = binarySizeValue;
            this.binaryCategoryText = binaryCategoryText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BinaryBase64Object", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<Base64Binary> BinaryObjects
        {
            get
            {
                return this.binaryObjects;
            }
            set
            {
                if ((this.binaryObjects != value))
                {
                    this.binaryObjects = value;
                    this.RaisePropertyChanged("BinaryObjects");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BinaryCaptureDate", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<DateType> BinaryCaptureDate
        {
            get
            {
                return this.binaryCaptureDate;
            }
            set
            {
                if ((this.binaryCaptureDate != value))
                {
                    this.binaryCaptureDate = value;
                    this.RaisePropertyChanged("BinaryCaptureDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BinaryCapturer", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<EntityType> BinaryCapturer
        {
            get
            {
                return this.binaryCapturer;
            }
            set
            {
                if ((this.binaryCapturer != value))
                {
                    this.binaryCapturer = value;
                    this.RaisePropertyChanged("BinaryCapturer");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BinaryDescriptionText", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<TextType> BinaryDescriptionText
        {
            get
            {
                return this.binaryDescriptionText;
            }
            set
            {
                if ((this.binaryDescriptionText != value))
                {
                    this.binaryDescriptionText = value;
                    this.RaisePropertyChanged("BinaryDescriptionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BinaryFormatStandardName", IsNullable=true, Order=4)]
        public System.Collections.Generic.List<TextType> BinaryFormatStandardName
        {
            get
            {
                return this.binaryFormatStandardName;
            }
            set
            {
                if ((this.binaryFormatStandardName != value))
                {
                    this.binaryFormatStandardName = value;
                    this.RaisePropertyChanged("BinaryFormatStandardName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BinaryLocationURI", IsNullable=true, Order=5)]
        public System.Collections.Generic.List<AnyURI> BinaryLocationURI
        {
            get
            {
                return this.binaryLocationURI;
            }
            set
            {
                if ((this.binaryLocationURI != value))
                {
                    this.binaryLocationURI = value;
                    this.RaisePropertyChanged("BinaryLocationURI");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BinarySizeValue", IsNullable=true, Order=6)]
        public System.Collections.Generic.List<NonNegativeDecimalType> BinarySizeValue
        {
            get
            {
                return this.binarySizeValue;
            }
            set
            {
                if ((this.binarySizeValue != value))
                {
                    this.binarySizeValue = value;
                    this.RaisePropertyChanged("BinarySizeValue");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BinaryCategoryText", IsNullable=true, Order=7)]
        public System.Collections.Generic.List<TextType> BinaryCategoryText
        {
            get
            {
                return this.binaryCategoryText;
            }
            set
            {
                if ((this.binaryCategoryText != value))
                {
                    this.binaryCategoryText = value;
                    this.RaisePropertyChanged("BinaryCategoryText");
                }
            }
        }
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="NonNegativeDecimalType")]
    [System.Xml.Serialization.XmlRootAttribute("BinarySizeValue", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="NonNegativeDecimalType")]
    
    public partial class NonNegativeDecimalType : object 
    {
        
        /// <remarks/>
        private string id;
        
        /// <remarks/>
        private string metadata;
        
        /// <remarks/>
        private string linkMetadata;
        
        /// <remarks/>
        private decimal value;
        
        public NonNegativeDecimalType()
        {
        }
        public NonNegativeDecimalType(decimal value)
        {
            this.value = value; 
        }
        
        public NonNegativeDecimalType(string id, string metadata, string linkMetadata, decimal value)
        {
            this.id = id;
            this.metadata = metadata;
            this.linkMetadata = linkMetadata;
            this.value = value;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://niem.gov/niem/structures/2.0", DataType="ID", AttributeName="id")]
        public string Id
        {
            get
            {
                return this.id;
            }
            set
            {
                if ((this.id != value))
                {
                    this.id = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://niem.gov/niem/structures/2.0", DataType="IDREFS", AttributeName="metadata")]
        public string Metadata
        {
            get
            {
                return this.metadata;
            }
            set
            {
                if ((this.metadata != value))
                {
                    this.metadata = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://niem.gov/niem/structures/2.0", DataType="IDREFS", AttributeName="linkMetadata")]
        public string LinkMetadata
        {
            get
            {
                return this.linkMetadata;
            }
            set
            {
                if ((this.linkMetadata != value))
                {
                    this.linkMetadata = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public decimal Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }
        
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="FingerprintSetType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonFingerprintSet", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="FingerprintSetType")]
    
    public partial class FingerprintSetType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<FingerprintType> fingerprint;
        
        public FingerprintSetType()
        {
        }
        
        public FingerprintSetType(System.Collections.Generic.List<FingerprintType> fingerprint)
        {
            this.fingerprint = fingerprint;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Fingerprint", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<FingerprintType> Fingerprint
        {
            get
            {
                return this.fingerprint;
            }
            set
            {
                if ((this.fingerprint != value))
                {
                    this.fingerprint = value;
                    this.RaisePropertyChanged("Fingerprint");
                }
            }
        }
    }
    
    
    
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="LengthMeasureType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonHeightMeasure", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="LengthMeasureType")]
    
    public partial class LengthMeasureType : MeasureType
    {
        
        /// <remarks/>
        private LengthCodeType lengthUnitCode;
        
        public LengthMeasureType()
        {
        }
        
        public LengthMeasureType(LengthCodeType lengthUnitCode)
        {
            this.lengthUnitCode = lengthUnitCode;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0, ElementName="LengthUnitCode")]
        public LengthCodeType LengthUnitCode
        {
            get
            {
                return this.lengthUnitCode;
            }
            set
            {
                if ((this.lengthUnitCode != value))
                {
                    this.lengthUnitCode = value;
                    this.RaisePropertyChanged("LengthUnitCode");
                }
            }
        }
    }
    
    
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WeightMeasureType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpeedMeasureType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LengthMeasureType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="MeasureType")]
    [System.Xml.Serialization.XmlRootAttribute("Measure", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="MeasureType")]
    
    public partial class MeasureType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> measureValues;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> measureUnitText;
        
        public MeasureType()
        {
        }

        public MeasureType(System.Collections.Generic.List<TextType> measureValues, System.Collections.Generic.List<TextType> measureUnitText)
        {
            this.measureValues = measureValues;
            this.measureUnitText = measureUnitText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("MeasureText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> MeasureValues
        {
            get
            {
                return this.measureValues;
            }
            set
            {
                if ((this.measureValues != value))
                {
                    this.measureValues = value;
                    this.RaisePropertyChanged("MeasureValues");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("MeasureUnitText", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<TextType> MeasureUnitText
        {
            get
            {
                return this.measureUnitText;
            }
            set
            {
                if ((this.measureUnitText != value))
                {
                    this.measureUnitText = value;
                    this.RaisePropertyChanged("MeasureUnitText");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="WeightMeasureType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonWeightMeasure", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="WeightMeasureType")]
    
    public partial class WeightMeasureType : MeasureType
    {
        
        /// <remarks/>
        private MassCodeType weightUnitCode;
        
        public WeightMeasureType()
        {
        }
        
        public WeightMeasureType(MassCodeType weightUnitCode)
        {
            this.weightUnitCode = weightUnitCode;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0, ElementName="WeightUnitCode")]
        public MassCodeType WeightUnitCode
        {
            get
            {
                return this.weightUnitCode;
            }
            set
            {
                if ((this.weightUnitCode != value))
                {
                    this.weightUnitCode = value;
                    this.RaisePropertyChanged("WeightUnitCode");
                }
            }
        }
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="SpeedMeasureType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="SpeedMeasureType")]
    
    public partial class SpeedMeasureType : MeasureType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<String> speedUnitCode;
        
        public SpeedMeasureType()
        {
        }
        
        public SpeedMeasureType(System.Collections.Generic.List<String> speedUnitCode)
        {
            this.speedUnitCode = speedUnitCode;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("SpeedUnitCode", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<String> SpeedUnitCode
        {
            get
            {
                return this.speedUnitCode;
            }
            set
            {
                if ((this.speedUnitCode != value))
                {
                    this.speedUnitCode = value;
                    this.RaisePropertyChanged("SpeedUnitCode");
                }
            }
        }
    }
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PersonNameType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonName", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PersonNameType")]
    
    public partial class PersonNameType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> personNamePrefixText;
        
        /// <remarks/>
        private System.Collections.Generic.List<PersonNameTextType> personGivenName;
        
        /// <remarks/>
        private System.Collections.Generic.List<PersonNameTextType> personMiddleName;
        
        /// <remarks/>
        private System.Collections.Generic.List<PersonNameTextType> personSurName;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> personNameSuffixText;
        
        /// <remarks/>
        private System.Collections.Generic.List<PersonNameTextType> personMaidenName;
        
        /// <remarks/>
        private System.Collections.Generic.List<PersonNameTextType> personFullName;
        
        /// <remarks/>
        private string personNameCommentText;
        
        public PersonNameType()
        {
        }

        public PersonNameType(string prefix, string givenName, string middleName, string surName, string suffix , string suffixCode)
        {
            this.personNamePrefixText = NiemStringHelper<TextType>.ToList(prefix);
            this.personGivenName = NiemStringHelper<PersonNameTextType>.ToList(givenName);
            this.personMiddleName = NiemStringHelper<PersonNameTextType>.ToList(middleName);
            this.personSurName = NiemStringHelper<PersonNameTextType>.ToList(surName);
            if ( !string.IsNullOrEmpty(suffixCode) && !string.IsNullOrEmpty(suffix)) 
            {
                this.personNameSuffixText = new List<TextType> { new TextType { Value = suffixCode, Metadata = suffix } };
            }

            string personFullNameText = this.GeneratePersonFullName(prefix, givenName, middleName, surName, suffix);
            this.personFullName = NiemStringHelper<PersonNameTextType>.ToList(personFullNameText);

        }

        public PersonNameType(string prefix, string givenName, string middleName, string surName, string suffix) : 
            this ( prefix: prefix, givenName: givenName, middleName: middleName, surName: surName, suffixCode: suffix , suffix: suffix)
        {
        }

        public string GeneratePersonFullName(string prefix, string givenName, string middleName, string surName, string suffix)
        {
            System.Text.StringBuilder personFullName = new System.Text.StringBuilder();
            if (!string.IsNullOrEmpty(prefix)) personFullName.Append(prefix.Trim());
            if (!string.IsNullOrEmpty(givenName)) personFullName.Append(" " + givenName.Trim());
            if (!string.IsNullOrEmpty(middleName)) personFullName.Append(" " + middleName.Trim());
            if (!string.IsNullOrEmpty(surName)) personFullName.Append(" " + surName.Trim());
            if (!string.IsNullOrEmpty(suffix)) personFullName.Append(" " + suffix.Trim());
            return personFullName.ToString().Trim();
        }


        public PersonNameType(System.Collections.Generic.List<TextType> personNamePrefixText, System.Collections.Generic.List<PersonNameTextType> personGivenName, System.Collections.Generic.List<PersonNameTextType> personMiddleName, System.Collections.Generic.List<PersonNameTextType> personSurName, System.Collections.Generic.List<TextType> personNameSuffixText, System.Collections.Generic.List<PersonNameTextType> personMaidenName, System.Collections.Generic.List<PersonNameTextType> personFullName, string personNameCommentText)
        {
            this.personNamePrefixText = personNamePrefixText;
            this.personGivenName = personGivenName;
            this.personMiddleName = personMiddleName;
            this.personSurName = personSurName;
            this.personNameSuffixText = personNameSuffixText;
            this.personMaidenName = personMaidenName;
            this.personFullName = personFullName;
            this.personNameCommentText = personNameCommentText;
        }

        
        public void ToSimpleType(out string prefix, out string givenName, out string middleName, out string surName, out string suffix, out string suffixCode, out string fullName)
        {
            prefix = NiemStringHelper<TextType>.FirstValue(this.personNamePrefixText);
            givenName = NiemStringHelper<PersonNameTextType>.FirstValue(this.personGivenName);
            middleName = NiemStringHelper<PersonNameTextType>.FirstValue(this.personMiddleName);
            surName = NiemStringHelper<PersonNameTextType>.FirstValue(this.personSurName);
            suffixCode = NiemStringHelper<TextType>.FirstValue(this.personNameSuffixText);
            suffix = this.personNameSuffixText != null && 
                     this.personNameSuffixText.Count > 0 && !string.IsNullOrEmpty(this.personNameSuffixText[0].Metadata) ?
                     this.personNameSuffixText[0].Metadata :
                    string.Empty;
            fullName = NiemStringHelper<PersonNameTextType>.FirstValue(this.personFullName);
        }

        public void ToSimpleType(out string prefix, out string givenName, out string middleName, out string surName, out string suffix , out string fullName)
        {
            prefix = string.Empty;
            givenName = string.Empty;
            middleName = string.Empty;
            surName = string.Empty;
            suffix = string.Empty;
            fullName = string.Empty;
            string suffixCode = string.Empty;
            this.ToSimpleType
                (
                    prefix: out prefix,
                    givenName: out givenName,
                    middleName: out middleName,
                    surName: out surName,
                    suffix: out suffix,
                    suffixCode: out suffixCode,
                    fullName: out fullName
                );
        }

        [System.Xml.Serialization.XmlElementAttribute("PersonNamePrefixText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> PersonNamePrefixText
        {
            get
            {
                return this.personNamePrefixText;
            }
            set
            {
                if ((this.personNamePrefixText != value))
                {
                    this.personNamePrefixText = value;
                    this.RaisePropertyChanged("PersonNamePrefixText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonGivenName", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<PersonNameTextType> PersonGivenName
        {
            get
            {
                return this.personGivenName;
            }
            set
            {
                if ((this.personGivenName != value))
                {
                    this.personGivenName = value;
                    this.RaisePropertyChanged("PersonGivenName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonMiddleName", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<PersonNameTextType> PersonMiddleName
        {
            get
            {
                return this.personMiddleName;
            }
            set
            {
                if ((this.personMiddleName != value))
                {
                    this.personMiddleName = value;
                    this.RaisePropertyChanged("PersonMiddleName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonSurName", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<PersonNameTextType> PersonSurName
        {
            get
            {
                return this.personSurName;
            }
            set
            {
                if ((this.personSurName != value))
                {
                    this.personSurName = value;
                    this.RaisePropertyChanged("PersonSurName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonNameSuffixText", IsNullable=true, Order=4)]
        public System.Collections.Generic.List<TextType> PersonNameSuffixText
        {
            get
            {
                return this.personNameSuffixText;
            }
            set
            {
                if ((this.personNameSuffixText != value))
                {
                    this.personNameSuffixText = value;
                    this.RaisePropertyChanged("PersonNameSuffixText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonMaidenName", IsNullable=true, Order=5)]
        public System.Collections.Generic.List<PersonNameTextType> PersonMaidenName
        {
            get
            {
                return this.personMaidenName;
            }
            set
            {
                if ((this.personMaidenName != value))
                {
                    this.personMaidenName = value;
                    this.RaisePropertyChanged("PersonMaidenName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonFullName", IsNullable=true, Order=6)]
        public System.Collections.Generic.List<PersonNameTextType> PersonFullName
        {
            get
            {
                return this.personFullName;
            }
            set
            {
                if ((this.personFullName != value))
                {
                    this.personFullName = value;
                    this.RaisePropertyChanged("PersonFullName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, AttributeName="personNameCommentText")]
        public string PersonNameCommentText
        {
            get
            {
                return this.personNameCommentText;
            }
            set
            {
                if ((this.personNameCommentText != value))
                {
                    this.personNameCommentText = value;
                    this.RaisePropertyChanged("PersonNameCommentText");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PhysicalFeatureType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonPhysicalFeature", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PhysicalFeatureType")]
    
    public partial class PhysicalFeatureType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> physicalFeatureCategories;
        
        public PhysicalFeatureType()
        {
        }

        public PhysicalFeatureType(System.Collections.Generic.List<object> physicalFeatureCategories)
        {
            this.physicalFeatureCategories = physicalFeatureCategories;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PhysicalFeatureCategoryCode", typeof(SMTCodeType), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("PhysicalFeatureCategoryText", typeof(TextType), IsNullable=true, Order=0)]
        public System.Collections.Generic.List<object> PhysicalFeatureCategories
        {
            get
            {
                return this.physicalFeatureCategories;
            }
            set
            {
                if ((this.physicalFeatureCategories != value))
                {
                    this.physicalFeatureCategories = value;
                    this.RaisePropertyChanged("PhysicalFeatureCategories");
                }
            }
        }
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PersonLanguageType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonPrimaryLanguage", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PersonLanguageType")]
    
    public partial class PersonLanguageType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<LanguageCodeType> languageCodes;
        
        public PersonLanguageType()
        {
        }

        public PersonLanguageType(System.Collections.Generic.List<LanguageCodeType> languageCodes)
        {
            this.languageCodes = languageCodes;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LanguageCode", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<LanguageCodeType> LanguageCodes
        {
            get
            {
                return this.languageCodes;
            }
            set
            {
                if ((this.languageCodes != value))
                {
                    this.languageCodes = value;
                    this.RaisePropertyChanged("LanguageCodes");
                }
            }
        }
    }
    
    
    
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://niem.gov/niem/niem-core/2.0", IncludeInSchema = true, TypeName = "EntityRepresentationTpes")]
    public enum EntityRepresentationTpes
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EntityOrganization" )]
        EntityOrganization,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EntityOrganizationReference")]
        EntityOrganizationReference,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EntityPerson")]
        EntityPerson,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="EntityPersonReference")]
        EntityPersonReference,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CommonTypes-4.0:EntityPerson")]
        EcfPerson,

        [System.Xml.Serialization.XmlEnumAttribute(Name = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CommonTypes-4.0:EntityOrganization")]
        EcfOrganization,

        [System.Xml.Serialization.XmlEnumAttribute(Name = "http://schema.azcourts.az.gov/courts/efiling/ecf/extension/2.0:EntityOrganization")]
        AZAOCOrganization,

    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ObligationRecurrenceType")]
    [System.Xml.Serialization.XmlRootAttribute("ObligationRecurrence", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ObligationRecurrenceType")]
    
    public partial class ObligationRecurrenceType : ObligationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> obligationEndDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> obligationPeriodText;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> obligationStartDate;
        
        public ObligationRecurrenceType()
        {
        }
        
        public ObligationRecurrenceType(System.Collections.Generic.List<DateType> obligationEndDate, System.Collections.Generic.List<TextType> obligationPeriodText, System.Collections.Generic.List<DateType> obligationStartDate)
        {
            this.obligationEndDate = obligationEndDate;
            this.obligationPeriodText = obligationPeriodText;
            this.obligationStartDate = obligationStartDate;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationEndDate", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<DateType> ObligationEndDate
        {
            get
            {
                return this.obligationEndDate;
            }
            set
            {
                if ((this.obligationEndDate != value))
                {
                    this.obligationEndDate = value;
                    this.RaisePropertyChanged("ObligationEndDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationPeriodText", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<TextType> ObligationPeriodText
        {
            get
            {
                return this.obligationPeriodText;
            }
            set
            {
                if ((this.obligationPeriodText != value))
                {
                    this.obligationPeriodText = value;
                    this.RaisePropertyChanged("ObligationPeriodText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ObligationStartDate", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<DateType> ObligationStartDate
        {
            get
            {
                return this.obligationStartDate;
            }
            set
            {
                if ((this.obligationStartDate != value))
                {
                    this.obligationStartDate = value;
                    this.RaisePropertyChanged("ObligationStartDate");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="JurisdictionType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="JurisdictionType")]
    public partial class JurisdictionType : ComplexObjectType
    {
        
        public JurisdictionType()
        {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ItemValueType")]
    [System.Xml.Serialization.XmlRootAttribute("ItemValue", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ItemValueType")]
    public partial class ItemValueType : ComplexObjectType
    {
        
        public ItemValueType()
        {
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TangibleItemType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConveyanceType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VehicleType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ItemType")]
    [System.Xml.Serialization.XmlRootAttribute("Item", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ItemType")]
    
    public partial class ItemType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> itemDescriptionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> itemOtherIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<ItemValueType> itemValue;
        
        public ItemType()
        {
        }
        
        public ItemType(System.Collections.Generic.List<TextType> itemDescriptionText, System.Collections.Generic.List<IdentificationType> itemOtherIdentification, System.Collections.Generic.List<ItemValueType> itemValue)
        {
            this.itemDescriptionText = itemDescriptionText;
            this.itemOtherIdentification = itemOtherIdentification;
            this.itemValue = itemValue;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemDescriptionText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> ItemDescriptionText
        {
            get
            {
                return this.itemDescriptionText;
            }
            set
            {
                if ((this.itemDescriptionText != value))
                {
                    this.itemDescriptionText = value;
                    this.RaisePropertyChanged("ItemDescriptionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemOtherIdentification", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<IdentificationType> ItemOtherIdentification
        {
            get
            {
                return this.itemOtherIdentification;
            }
            set
            {
                if ((this.itemOtherIdentification != value))
                {
                    this.itemOtherIdentification = value;
                    this.RaisePropertyChanged("ItemOtherIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemValue", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<ItemValueType> ItemValue
        {
            get
            {
                return this.itemValue;
            }
            set
            {
                if ((this.itemValue != value))
                {
                    this.itemValue = value;
                    this.RaisePropertyChanged("ItemValue");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConveyanceType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VehicleType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="TangibleItemType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="TangibleItemType")]
    
    public partial class TangibleItemType : ItemType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> itemColors;
        
        /// <remarks/>
        private System.Collections.Generic.List<GYear> itemModelYearDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<VSTCodeType> vehicleStyleCode;
        
        public TangibleItemType()
        {
        }

        public TangibleItemType(System.Collections.Generic.List<object> itemColors, System.Collections.Generic.List<GYear> itemModelYearDate, System.Collections.Generic.List<VSTCodeType> vehicleStyleCode)
        {
            this.itemColors = itemColors;
            this.itemModelYearDate = itemModelYearDate;
            this.vehicleStyleCode = vehicleStyleCode;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ConveyanceColorPrimaryText", typeof(TextType), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("VehicleColorPrimaryCode", typeof(VCOCodeType), IsNullable=true, Order=0)]
        public System.Collections.Generic.List<object> ItemColors
        {
            get
            {
                return this.itemColors;
            }
            set
            {
                if ((this.itemColors != value))
                {
                    this.itemColors = value;
                    this.RaisePropertyChanged("ItemColors");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemModelYearDate", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<GYear> ItemModelYearDate
        {
            get
            {
                return this.itemModelYearDate;
            }
            set
            {
                if ((this.itemModelYearDate != value))
                {
                    this.itemModelYearDate = value;
                    this.RaisePropertyChanged("ItemModelYearDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("VehicleStyleCode", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<VSTCodeType> VehicleStyleCode
        {
            get
            {
                return this.vehicleStyleCode;
            }
            set
            {
                if ((this.vehicleStyleCode != value))
                {
                    this.vehicleStyleCode = value;
                    this.RaisePropertyChanged("VehicleStyleCode");
                }
            }
        }
    }
    
    
    
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VehicleType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ConveyanceType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ConveyanceType")]
    
    public partial class ConveyanceType : TangibleItemType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> conveyanceRegistrationPlateIdentification;
        
        public ConveyanceType()
        {
        }
        
        public ConveyanceType(System.Collections.Generic.List<IdentificationType> conveyanceRegistrationPlateIdentification)
        {
            this.conveyanceRegistrationPlateIdentification = conveyanceRegistrationPlateIdentification;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ConveyanceRegistrationPlateIdentification", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<IdentificationType> ConveyanceRegistrationPlateIdentification
        {
            get
            {
                return this.conveyanceRegistrationPlateIdentification;
            }
            set
            {
                if ((this.conveyanceRegistrationPlateIdentification != value))
                {
                    this.conveyanceRegistrationPlateIdentification = value;
                    this.RaisePropertyChanged("ConveyanceRegistrationPlateIdentification");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="VehicleType")]
    [System.Xml.Serialization.XmlRootAttribute("Vehicle", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="VehicleType")]
    
    public partial class VehicleType : ConveyanceType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> vehicleIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<VMACodeType> vehicleMakeCode;
        
        /// <remarks/>
        private System.Collections.Generic.List<VMOCodeType> vehicleModelCode;
        
        public VehicleType()
        {
        }
        
        public VehicleType(System.Collections.Generic.List<IdentificationType> vehicleIdentification, System.Collections.Generic.List<VMACodeType> vehicleMakeCode, System.Collections.Generic.List<VMOCodeType> vehicleModelCode)
        {
            this.vehicleIdentification = vehicleIdentification;
            this.vehicleMakeCode = vehicleMakeCode;
            this.vehicleModelCode = vehicleModelCode;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("VehicleIdentification", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<IdentificationType> VehicleIdentification
        {
            get
            {
                return this.vehicleIdentification;
            }
            set
            {
                if ((this.vehicleIdentification != value))
                {
                    this.vehicleIdentification = value;
                    this.RaisePropertyChanged("VehicleIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("VehicleMakeCode", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<VMACodeType> VehicleMakeCode
        {
            get
            {
                return this.vehicleMakeCode;
            }
            set
            {
                if ((this.vehicleMakeCode != value))
                {
                    this.vehicleMakeCode = value;
                    this.RaisePropertyChanged("VehicleMakeCode");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("VehicleModelCode", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<VMOCodeType> VehicleModelCode
        {
            get
            {
                return this.vehicleModelCode;
            }
            set
            {
                if ((this.vehicleModelCode != value))
                {
                    this.vehicleModelCode = value;
                    this.RaisePropertyChanged("VehicleModelCode");
                }
            }
        }
    }
    
    
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ItemRegistrationType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ItemRegistrationType")]
    
    public partial class ItemRegistrationType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> registrationJurisdiction;
        
        public ItemRegistrationType()
        {
        }
        
        public ItemRegistrationType(System.Collections.Generic.List<object> registrationJurisdiction)
        {
            this.registrationJurisdiction = registrationJurisdiction;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("RegistrationJurisdiction", Order=0)]
        public System.Collections.Generic.List<object> RegistrationJurisdiction
        {
            get
            {
                return this.registrationJurisdiction;
            }
            set
            {
                if ((this.registrationJurisdiction != value))
                {
                    this.registrationJurisdiction = value;
                    this.RaisePropertyChanged("RegistrationJurisdiction");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="InsuranceType")]
    [System.Xml.Serialization.XmlRootAttribute("Insurance", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="InsuranceType")]
    
    public partial class InsuranceType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> insuranceCarrierName;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> insuranceActiveIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> insuranceCoverageCategoryText;
        
        public InsuranceType()
        {
        }

        public InsuranceType(System.Collections.Generic.List<TextType> insuranceCarrierName, System.Collections.Generic.List<Boolean> insuranceActiveIndicator, System.Collections.Generic.List<TextType> insuranceCoverageCategoryText)
        {
            this.insuranceCarrierName = insuranceCarrierName;
            this.insuranceActiveIndicator = insuranceActiveIndicator;
            this.insuranceCoverageCategoryText = insuranceCoverageCategoryText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("InsuranceCarrierName", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> InsuranceCarrierName
        {
            get
            {
                return this.insuranceCarrierName;
            }
            set
            {
                if ((this.insuranceCarrierName != value))
                {
                    this.insuranceCarrierName = value;
                    this.RaisePropertyChanged("InsuranceCarrierName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("InsuranceActiveIndicator", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<Boolean> InsuranceActiveIndicator
        {
            get
            {
                return this.insuranceActiveIndicator;
            }
            set
            {
                if ((this.insuranceActiveIndicator != value))
                {
                    this.insuranceActiveIndicator = value;
                    this.RaisePropertyChanged("InsuranceActiveIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("InsuranceCoverageCategoryText", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<TextType> InsuranceCoverageCategoryText
        {
            get
            {
                return this.insuranceCoverageCategoryText;
            }
            set
            {
                if ((this.insuranceCoverageCategoryText != value))
                {
                    this.insuranceCoverageCategoryText = value;
                    this.RaisePropertyChanged("InsuranceCoverageCategoryText");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DrivingRestrictionType")]
    [System.Xml.Serialization.XmlRootAttribute("DriverLicenseRestriction", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DrivingRestrictionType")]
    
    public partial class DrivingRestrictionType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> drivingRestrictions;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> drivingRestrictionEndDate;
        
        public DrivingRestrictionType()
        {
        }

        public DrivingRestrictionType(System.Collections.Generic.List<object> drivingRestrictions, System.Collections.Generic.List<DateType> drivingRestrictionEndDate)
        {
            this.drivingRestrictions = drivingRestrictions;
            this.drivingRestrictionEndDate = drivingRestrictionEndDate;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DrivingRestrictionCode", typeof(DrivingRestrictionCodeType), IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("DrivingRestrictionText", typeof(TextType), IsNullable=true, Order=0)]
        public System.Collections.Generic.List<object> DrivingRestrictions
        {
            get
            {
                return this.drivingRestrictions;
            }
            set
            {
                if ((this.drivingRestrictions != value))
                {
                    this.drivingRestrictions = value;
                    this.RaisePropertyChanged("DrivingRestrictions");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DrivingRestrictionEndDate", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<DateType> DrivingRestrictionEndDate
        {
            get
            {
                return this.drivingRestrictionEndDate;
            }
            set
            {
                if ((this.drivingRestrictionEndDate != value))
                {
                    this.drivingRestrictionEndDate = value;
                    this.RaisePropertyChanged("DrivingRestrictionEndDate");
                }
            }
        }
    }
    
    
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DriverLicenseType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DriverLicenseBaseType")]
    [System.Xml.Serialization.XmlRootAttribute("DriverLicenseBase", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DriverLicenseBaseType")]
    
    public partial class DriverLicenseBaseType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> driverLicenseIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> driverLicenseExpirationDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> driverLicenseIssueDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<DrivingRestrictionType> driverLicenseRestriction;
        
        public DriverLicenseBaseType()
        {
        }
        
        public DriverLicenseBaseType(System.Collections.Generic.List<IdentificationType> driverLicenseIdentification, System.Collections.Generic.List<DateType> driverLicenseExpirationDate, System.Collections.Generic.List<DateType> driverLicenseIssueDate, System.Collections.Generic.List<DrivingRestrictionType> driverLicenseRestriction)
        {
            this.driverLicenseIdentification = driverLicenseIdentification;
            this.driverLicenseExpirationDate = driverLicenseExpirationDate;
            this.driverLicenseIssueDate = driverLicenseIssueDate;
            this.driverLicenseRestriction = driverLicenseRestriction;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DriverLicenseIdentification", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<IdentificationType> DriverLicenseIdentification
        {
            get
            {
                return this.driverLicenseIdentification;
            }
            set
            {
                if ((this.driverLicenseIdentification != value))
                {
                    this.driverLicenseIdentification = value;
                    this.RaisePropertyChanged("DriverLicenseIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DriverLicenseExpirationDate", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<DateType> DriverLicenseExpirationDate
        {
            get
            {
                return this.driverLicenseExpirationDate;
            }
            set
            {
                if ((this.driverLicenseExpirationDate != value))
                {
                    this.driverLicenseExpirationDate = value;
                    this.RaisePropertyChanged("DriverLicenseExpirationDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DriverLicenseIssueDate", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<DateType> DriverLicenseIssueDate
        {
            get
            {
                return this.driverLicenseIssueDate;
            }
            set
            {
                if ((this.driverLicenseIssueDate != value))
                {
                    this.driverLicenseIssueDate = value;
                    this.RaisePropertyChanged("DriverLicenseIssueDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DriverLicenseRestriction", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<DrivingRestrictionType> DriverLicenseRestriction
        {
            get
            {
                return this.driverLicenseRestriction;
            }
            set
            {
                if ((this.driverLicenseRestriction != value))
                {
                    this.driverLicenseRestriction = value;
                    this.RaisePropertyChanged("DriverLicenseRestriction");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DriverLicenseType")]
    [System.Xml.Serialization.XmlRootAttribute("DriverLicense", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DriverLicenseType")]
    
    public partial class DriverLicenseType : DriverLicenseBaseType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<DriverLicenseClassCodeType> driverLicenseCommercialClassCode;
        
        /// <remarks/>
        private System.Collections.Generic.List<DriverLicenseWithdrawalType> driverLicenseWithdrawal;
        
        public DriverLicenseType()
        {
        }

        public DriverLicenseType(System.Collections.Generic.List<DriverLicenseClassCodeType> driverLicenseCommercialClassCode, System.Collections.Generic.List<DriverLicenseWithdrawalType> driverLicenseWithdrawal)
        {
            this.driverLicenseCommercialClassCode = driverLicenseCommercialClassCode;
            this.driverLicenseWithdrawal = driverLicenseWithdrawal;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DriverLicenseCommercialClassCode", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<DriverLicenseClassCodeType> DriverLicenseCommercialClassCode
        {
            get
            {
                return this.driverLicenseCommercialClassCode;
            }
            set
            {
                if ((this.driverLicenseCommercialClassCode != value))
                {
                    this.driverLicenseCommercialClassCode = value;
                    this.RaisePropertyChanged("DriverLicenseCommercialClassCode");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DriverLicenseWithdrawal", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<DriverLicenseWithdrawalType> DriverLicenseWithdrawal
        {
            get
            {
                return this.driverLicenseWithdrawal;
            }
            set
            {
                if ((this.driverLicenseWithdrawal != value))
                {
                    this.driverLicenseWithdrawal = value;
                    this.RaisePropertyChanged("DriverLicenseWithdrawal");
                }
            }
        }
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DriverLicenseWithdrawalType")]
    [System.Xml.Serialization.XmlRootAttribute("DriverLicenseWithdrawal", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DriverLicenseWithdrawalType")]
    
    public partial class DriverLicenseWithdrawalType : ActivityType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> driverLicenseWithdrawalEffectiveDate;
        
        public DriverLicenseWithdrawalType()
        {
        }
        
        public DriverLicenseWithdrawalType(System.Collections.Generic.List<DateType> driverLicenseWithdrawalEffectiveDate)
        {
            this.driverLicenseWithdrawalEffectiveDate = driverLicenseWithdrawalEffectiveDate;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DriverLicenseWithdrawalEffectiveDate", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<DateType> DriverLicenseWithdrawalEffectiveDate
        {
            get
            {
                return this.driverLicenseWithdrawalEffectiveDate;
            }
            set
            {
                if ((this.driverLicenseWithdrawalEffectiveDate != value))
                {
                    this.driverLicenseWithdrawalEffectiveDate = value;
                    this.RaisePropertyChanged("DriverLicenseWithdrawalEffectiveDate");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IncidentType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DriverLicenseWithdrawalType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CaseType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ActivityType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ActivityType")]
    
    public partial class ActivityType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> activityIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<ComplexObjectType> activityDateRepresentations;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> activityDescriptionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<StatusType> activityStatus;
        
        /// <remarks/>
        private System.Collections.Generic.List<DispositionType> activityDisposition;
        
        public ActivityType()
        {
        }

        public ActivityType(System.Collections.Generic.List<IdentificationType> activityIdentification, System.Collections.Generic.List<ComplexObjectType> activityDateRepresentations, System.Collections.Generic.List<TextType> activityDescriptionText, System.Collections.Generic.List<StatusType> activityStatus, System.Collections.Generic.List<DispositionType> activityDisposition)
        {
            this.activityIdentification = activityIdentification;
            this.activityDateRepresentations = activityDateRepresentations;
            this.activityDescriptionText = activityDescriptionText;
            this.activityStatus = activityStatus;
            this.activityDisposition = activityDisposition;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ActivityIdentification", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<IdentificationType> ActivityIdentification
        {
            get
            {
                return this.activityIdentification;
            }
            set
            {
                if ((this.activityIdentification != value))
                {
                    this.activityIdentification = value;
                    this.RaisePropertyChanged("ActivityIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ActivityDate", typeof(DateType), IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("ActivityDateRange", typeof(DateRangeType), IsNullable=true, Order=1)]
        public System.Collections.Generic.List<ComplexObjectType> ActivityDateRepresentations  
        {
            get
            {
                return this.activityDateRepresentations;
            }
            set
            {
                if ((this.activityDateRepresentations != value))
                {
                    this.activityDateRepresentations = value;
                    this.RaisePropertyChanged("ActivityDateRepresentations");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ActivityDescriptionText", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<TextType> ActivityDescriptionText
        {
            get
            {
                return this.activityDescriptionText;
            }
            set
            {
                if ((this.activityDescriptionText != value))
                {
                    this.activityDescriptionText = value;
                    this.RaisePropertyChanged("ActivityDescriptionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ActivityStatus", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<StatusType> ActivityStatus
        {
            get
            {
                return this.activityStatus;
            }
            set
            {
                if ((this.activityStatus != value))
                {
                    this.activityStatus = value;
                    this.RaisePropertyChanged("ActivityStatus");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ActivityDisposition", typeof(DispositionType), IsNullable=true, Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("CaseDisposition", typeof(CaseDispositionType), IsNullable=true, Order=4)]
        public System.Collections.Generic.List<DispositionType> ActivityDisposition
        {
            get
            {
                return this.activityDisposition;
            }
            set
            {
                if ((this.activityDisposition != value))
                {
                    this.activityDisposition = value;
                    this.RaisePropertyChanged("ActivityDisposition");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DateRangeType")]
    [System.Xml.Serialization.XmlRootAttribute("ActivityDateRange", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DateRangeType")]
    
    public partial class DateRangeType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> startDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> endDate;
        
        public DateRangeType()
        {
        }
        
        public DateRangeType(System.Collections.Generic.List<DateType> startDate, System.Collections.Generic.List<DateType> endDate)
        {
            this.startDate = startDate;
            this.endDate = endDate;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StartDate", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<DateType> StartDate
        {
            get
            {
                return this.startDate;
            }
            set
            {
                if ((this.startDate != value))
                {
                    this.startDate = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("EndDate", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<DateType> EndDate
        {
            get
            {
                return this.endDate;
            }
            set
            {
                if ((this.endDate != value))
                {
                    this.endDate = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarriageStatusType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="StatusType")]
    [System.Xml.Serialization.XmlRootAttribute("ActivityStatus", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="StatusType")]
    
    public partial class StatusType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> statusText;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> statusDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> statusDescriptionText;
        
        public StatusType()
        {
        }
        
        public StatusType(System.Collections.Generic.List<TextType> statusText, System.Collections.Generic.List<DateType> statusDate, System.Collections.Generic.List<TextType> statusDescriptionText)
        {
            this.statusText = statusText;
            this.statusDate = statusDate;
            this.statusDescriptionText = statusDescriptionText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StatusText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> StatusText
        {
            get
            {
                return this.statusText;
            }
            set
            {
                if ((this.statusText != value))
                {
                    this.statusText = value;
                    this.RaisePropertyChanged("StatusText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StatusDate", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<DateType> StatusDate
        {
            get
            {
                return this.statusDate;
            }
            set
            {
                if ((this.statusDate != value))
                {
                    this.statusDate = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StatusDescriptionText", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<TextType> StatusDescriptionText
        {
            get
            {
                return this.statusDescriptionText;
            }
            set
            {
                if ((this.statusDescriptionText != value))
                {
                    this.statusDescriptionText = value;
                    this.RaisePropertyChanged("StatusDescriptionText");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="MarriageStatusType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonUnionStatus", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="MarriageStatusType")]
    public partial class MarriageStatusType : StatusType
    {
        
        public MarriageStatusType()
        {
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CaseDispositionType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DispositionType")]
    [System.Xml.Serialization.XmlRootAttribute("ActivityDisposition", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DispositionType")]
    
    public partial class DispositionType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> dispositionDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> dispositionDescriptionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> dispositionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> dispositionCategoryText;
        
        public DispositionType()
        {
        }
        
        public DispositionType(System.Collections.Generic.List<DateType> dispositionDate, System.Collections.Generic.List<TextType> dispositionDescriptionText, System.Collections.Generic.List<TextType> dispositionText, System.Collections.Generic.List<TextType> dispositionCategoryText)
        {
            this.dispositionDate = dispositionDate;
            this.dispositionDescriptionText = dispositionDescriptionText;
            this.dispositionText = dispositionText;
            this.dispositionCategoryText = dispositionCategoryText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DispositionDate", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<DateType> DispositionDate
        {
            get
            {
                return this.dispositionDate;
            }
            set
            {
                if ((this.dispositionDate != value))
                {
                    this.dispositionDate = value;
                    this.RaisePropertyChanged("DispositionDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DispositionDescriptionText", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<TextType> DispositionDescriptionText
        {
            get
            {
                return this.dispositionDescriptionText;
            }
            set
            {
                if ((this.dispositionDescriptionText != value))
                {
                    this.dispositionDescriptionText = value;
                    this.RaisePropertyChanged("DispositionDescriptionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DispositionText", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<TextType> DispositionText
        {
            get
            {
                return this.dispositionText;
            }
            set
            {
                if ((this.dispositionText != value))
                {
                    this.dispositionText = value;
                    this.RaisePropertyChanged("DispositionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DispositionCategoryText", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<TextType> DispositionCategoryText
        {
            get
            {
                return this.dispositionCategoryText;
            }
            set
            {
                if ((this.dispositionCategoryText != value))
                {
                    this.dispositionCategoryText = value;
                    this.RaisePropertyChanged("DispositionCategoryText");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="CaseDispositionType")]
    [System.Xml.Serialization.XmlRootAttribute("CaseDisposition", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="CaseDispositionType")]
    
    public partial class CaseDispositionType : DispositionType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> caseDispositionFinalDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<CaseDispositionDecisionType> caseDispositionDecision;
        
        public CaseDispositionType()
        {
        }
        
        public CaseDispositionType(System.Collections.Generic.List<DateType> caseDispositionFinalDate, System.Collections.Generic.List<CaseDispositionDecisionType> caseDispositionDecision)
        {
            this.caseDispositionFinalDate = caseDispositionFinalDate;
            this.caseDispositionDecision = caseDispositionDecision;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CaseDispositionFinalDate", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<DateType> CaseDispositionFinalDate
        {
            get
            {
                return this.caseDispositionFinalDate;
            }
            set
            {
                if ((this.caseDispositionFinalDate != value))
                {
                    this.caseDispositionFinalDate = value;
                    this.RaisePropertyChanged("CaseDispositionFinalDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CaseDispositionDecision", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<CaseDispositionDecisionType> CaseDispositionDecision
        {
            get
            {
                return this.caseDispositionDecision;
            }
            set
            {
                if ((this.caseDispositionDecision != value))
                {
                    this.caseDispositionDecision = value;
                    this.RaisePropertyChanged("CaseDispositionDecision");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="CaseDispositionDecisionType")]
    [System.Xml.Serialization.XmlRootAttribute("CaseDispositionDecision", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="CaseDispositionDecisionType")]
    public partial class CaseDispositionDecisionType : ComplexObjectType
    {
        
        public CaseDispositionDecisionType()
        {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="IncidentType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="IncidentType")]
    
    public partial class IncidentType : ActivityType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<LocationType> incidentLocation;
        
        public IncidentType()
        {
        }
        
        public IncidentType(System.Collections.Generic.List<LocationType> incidentLocation)
        {
            this.incidentLocation = incidentLocation;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("IncidentLocation", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<LocationType> IncidentLocation
        {
            get
            {
                return this.incidentLocation;
            }
            set
            {
                if ((this.incidentLocation != value))
                {
                    this.incidentLocation = value;
                    this.RaisePropertyChanged("IncidentLocation");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="CaseType")]
    [System.Xml.Serialization.XmlRootAttribute("Case", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="CaseType")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Appellate.AppellateCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Citation.CitationCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Civil.CivilCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Criminal.CriminalCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Domestic.DomesticCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Juvenile.JuvenileCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Arizona.Courts.Extensions.v20.CivilCaseType))]

    public partial class CaseType : ActivityType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> caseTitleText;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> caseCategoryText;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> caseTrackingID;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> caseDocketID;


        public CaseType()
        {
        }
        
        public CaseType(System.Collections.Generic.List<TextType> caseTitleText, System.Collections.Generic.List<TextType> caseCategoryText, System.Collections.Generic.List<String> caseTrackingID, System.Collections.Generic.List<String> caseDocketID)
        {
            this.caseTitleText = caseTitleText;
            this.caseCategoryText = caseCategoryText;
            this.caseTrackingID = caseTrackingID;
            this.caseDocketID = caseDocketID;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CaseTitleText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> CaseTitleText
        {
            get
            {
                return this.caseTitleText;
            }
            set
            {
                if ((this.caseTitleText != value))
                {
                    this.caseTitleText = value;
                    this.RaisePropertyChanged("CaseTitleText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CaseCategoryText", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<TextType> CaseCategoryText
        {
            get
            {
                return this.caseCategoryText;
            }
            set
            {
                if ((this.caseCategoryText != value))
                {
                    this.caseCategoryText = value;
                    this.RaisePropertyChanged("CaseCategoryText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CaseTrackingID", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<String> CaseTrackingID
        {
            get
            {
                return this.caseTrackingID;
            }
            set
            {
                if ((this.caseTrackingID != value))
                {
                    this.caseTrackingID = value;
                    this.RaisePropertyChanged("CaseTrackingID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CaseDocketID", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<String> CaseDocketID
        {
            get
            {
                return this.caseDocketID;
            }
            set
            {
                if ((this.caseDocketID != value))
                {
                    this.caseDocketID = value;
                    this.RaisePropertyChanged("CaseDocketID");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DocumentType")]
    [System.Xml.Serialization.XmlRootAttribute("CaseFiling", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DocumentType")]
    
    public partial class DocumentType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ApplicationNameType> documentApplicationName;
        
        /// <remarks/>
        private System.Collections.Generic.List<BinaryType> documentBinary;
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> documentDescriptionText;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> documentEffectiveDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> documentFileControlID;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> documentFiledDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<IdentificationType> documentIdentification;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> documentInformationCutOffDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> documentPostDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<DateType> documentReceivedDate;
        
        /// <remarks/>
        private System.Collections.Generic.List<String> documentSequenceID;
        
        /// <remarks/>
        private System.Collections.Generic.List<StatusType> documentStatus;
        
        /// <remarks/>
        private System.Collections.Generic.List<LanguageCodeType> documentLanguageCode;
        
        /// <remarks/>
        private System.Collections.Generic.List<EntityType> documentSubmitter;
        
        public DocumentType()
        {
        }

        public DocumentType(System.Collections.Generic.List<ApplicationNameType> documentApplicationName, System.Collections.Generic.List<BinaryType> documentBinary, System.Collections.Generic.List<TextType> documentDescriptionText, System.Collections.Generic.List<DateType> documentEffectiveDate, System.Collections.Generic.List<String> documentFileControlID, System.Collections.Generic.List<DateType> documentFiledDate, System.Collections.Generic.List<IdentificationType> documentIdentification, System.Collections.Generic.List<DateType> documentInformationCutOffDate, System.Collections.Generic.List<DateType> documentPostDate, System.Collections.Generic.List<DateType> documentReceivedDate, System.Collections.Generic.List<String> documentSequenceID, System.Collections.Generic.List<StatusType> documentStatus, System.Collections.Generic.List<LanguageCodeType> documentLanguageCode, System.Collections.Generic.List<EntityType> documentSubmitter)
        {
            this.documentApplicationName = documentApplicationName;
            this.documentBinary = documentBinary;
            this.documentDescriptionText = documentDescriptionText;
            this.documentEffectiveDate = documentEffectiveDate;
            this.documentFileControlID = documentFileControlID;
            this.documentFiledDate = documentFiledDate;
            this.documentIdentification = documentIdentification;
            this.documentInformationCutOffDate = documentInformationCutOffDate;
            this.documentPostDate = documentPostDate;
            this.documentReceivedDate = documentReceivedDate;
            this.documentSequenceID = documentSequenceID;
            this.documentStatus = documentStatus;
            this.documentLanguageCode = documentLanguageCode;
            this.documentSubmitter = documentSubmitter;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentApplicationName", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<ApplicationNameType> DocumentApplicationName
        {
            get
            {
                return this.documentApplicationName;
            }
            set
            {
                if ((this.documentApplicationName != value))
                {
                    this.documentApplicationName = value;
                    this.RaisePropertyChanged("DocumentApplicationName");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentBinary", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<BinaryType> DocumentBinary
        {
            get
            {
                return this.documentBinary;
            }
            set
            {
                if ((this.documentBinary != value))
                {
                    this.documentBinary = value;
                    this.RaisePropertyChanged("DocumentBinary");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentDescriptionText", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<TextType> DocumentDescriptionText
        {
            get
            {
                return this.documentDescriptionText;
            }
            set
            {
                if ((this.documentDescriptionText != value))
                {
                    this.documentDescriptionText = value;
                    this.RaisePropertyChanged("DocumentDescriptionText");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentEffectiveDate", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<DateType> DocumentEffectiveDate
        {
            get
            {
                return this.documentEffectiveDate;
            }
            set
            {
                if ((this.documentEffectiveDate != value))
                {
                    this.documentEffectiveDate = value;
                    this.RaisePropertyChanged("DocumentEffectiveDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentFileControlID", IsNullable=true, Order=4)]
        public System.Collections.Generic.List<String> DocumentFileControlID
        {
            get
            {
                return this.documentFileControlID;
            }
            set
            {
                if ((this.documentFileControlID != value))
                {
                    this.documentFileControlID = value;
                    this.RaisePropertyChanged("DocumentFileControlID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentFiledDate", IsNullable=true, Order=5)]
        public System.Collections.Generic.List<DateType> DocumentFiledDate
        {
            get
            {
                return this.documentFiledDate;
            }
            set
            {
                if ((this.documentFiledDate != value))
                {
                    this.documentFiledDate = value;
                    this.RaisePropertyChanged("DocumentFiledDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentIdentification", IsNullable=true, Order=6)]
        public System.Collections.Generic.List<IdentificationType> DocumentIdentification
        {
            get
            {
                return this.documentIdentification;
            }
            set
            {
                if ((this.documentIdentification != value))
                {
                    this.documentIdentification = value;
                    this.RaisePropertyChanged("DocumentIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentInformationCutOffDate", IsNullable=true, Order=7)]
        public System.Collections.Generic.List<DateType> DocumentInformationCutOffDate
        {
            get
            {
                return this.documentInformationCutOffDate;
            }
            set
            {
                if ((this.documentInformationCutOffDate != value))
                {
                    this.documentInformationCutOffDate = value;
                    this.RaisePropertyChanged("DocumentInformationCutOffDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentPostDate", IsNullable=true, Order=8)]
        public System.Collections.Generic.List<DateType> DocumentPostDate
        {
            get
            {
                return this.documentPostDate;
            }
            set
            {
                if ((this.documentPostDate != value))
                {
                    this.documentPostDate = value;
                    this.RaisePropertyChanged("DocumentPostDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentReceivedDate", IsNullable=true, Order=9)]
        public System.Collections.Generic.List<DateType> DocumentReceivedDate
        {
            get
            {
                return this.documentReceivedDate;
            }
            set
            {
                if ((this.documentReceivedDate != value))
                {
                    this.documentReceivedDate = value;
                    this.RaisePropertyChanged("DocumentReceivedDate");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentSequenceID", IsNullable=true, Order=10)]
        public System.Collections.Generic.List<String> DocumentSequenceID
        {
            get
            {
                return this.documentSequenceID;
            }
            set
            {
                if ((this.documentSequenceID != value))
                {
                    this.documentSequenceID = value;
                    this.RaisePropertyChanged("DocumentSequenceID");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentStatus", IsNullable=true, Order=11)]
        public System.Collections.Generic.List<StatusType> DocumentStatus
        {
            get
            {
                return this.documentStatus;
            }
            set
            {
                if ((this.documentStatus != value))
                {
                    this.documentStatus = value;
                    this.RaisePropertyChanged("DocumentStatus");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentLanguageCode", IsNullable=true, Order=12)]
        public System.Collections.Generic.List<LanguageCodeType> DocumentLanguageCode
        {
            get
            {
                return this.documentLanguageCode;
            }
            set
            {
                if ((this.documentLanguageCode != value))
                {
                    this.documentLanguageCode = value;
                    this.RaisePropertyChanged("DocumentLanguageCode");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DocumentSubmitter", IsNullable=true, Order=13)]
        public System.Collections.Generic.List<EntityType> DocumentSubmitter
        {
            get
            {
                return this.documentSubmitter;
            }
            set
            {
                if ((this.documentSubmitter != value))
                {
                    this.documentSubmitter = value;
                    this.RaisePropertyChanged("DocumentSubmitter");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnore()]
        public System.DateTime? PostedTime
        {
            get
            {
                return ( this.documentPostDate != null && documentPostDate.Count > 0 ? this.documentPostDate[0].DateValue : null);

            }
            set
            {
                if (value == null)
                {
                    this.documentPostDate = null;
                }
                else
                {
                    this.documentPostDate = new System.Collections.Generic.List<DateType> { new DateType((System.DateTime)value) };
                }

            }
        }

        [System.Xml.Serialization.XmlIgnore()]
        public System.DateTime? ReceivedTime
        {
            get
            {
                return (this.documentReceivedDate != null && documentReceivedDate.Count > 0 ? this.documentReceivedDate[0].DateValue : null);

            }
            set
            {
                if (value == null)
                {
                    this.documentReceivedDate = null;
                }
                else
                {
                    this.documentReceivedDate = new System.Collections.Generic.List<DateType> { new DateType((System.DateTime)value) };
                }

            }
        }

        [System.Xml.Serialization.XmlIgnore()]
        public System.DateTime? FiledTime
        {
            get
            {
                return (this.documentFiledDate != null && documentFiledDate.Count > 0 ? this.documentFiledDate[0].DateValue : null);

            }
            set
            {
                if (value == null)
                {
                    this.documentFiledDate = null;
                }
                else
                {
                    this.documentFiledDate = new System.Collections.Generic.List<DateType> { new DateType((System.DateTime)value) };
                }

            }
        }

    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ApplicationNameType")]
    [System.Xml.Serialization.XmlRootAttribute("DocumentApplicationName", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ApplicationNameType")]
    
    public partial class ApplicationNameType : object 
    {
        
        /// <remarks/>
        private string id;
        
        /// <remarks/>
        private string metadata;
        
        /// <remarks/>
        private string linkMetadata;
        
        /// <remarks/>
        private string applicationVersionText;
        
        /// <remarks/>
        private string value;
        
        public ApplicationNameType()
        {
        }

        public ApplicationNameType(string value)
        {
            this.value = value; 
        }

        public ApplicationNameType(string id, string metadata, string linkMetadata, string applicationVersionText, string value)
        {
            this.id = id;
            this.metadata = metadata;
            this.linkMetadata = linkMetadata;
            this.applicationVersionText = applicationVersionText;
            this.value = value;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://niem.gov/niem/structures/2.0", DataType="ID", AttributeName="id")]
        public string Id
        {
            get
            {
                return this.id;
            }
            set
            {
                if ((this.id != value))
                {
                    this.id = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://niem.gov/niem/structures/2.0", DataType="IDREFS", AttributeName="metadata")]
        public string Metadata
        {
            get
            {
                return this.metadata;
            }
            set
            {
                if ((this.metadata != value))
                {
                    this.metadata = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://niem.gov/niem/structures/2.0", DataType="IDREFS", AttributeName="linkMetadata")]
        public string LinkMetadata
        {
            get
            {
                return this.linkMetadata;
            }
            set
            {
                if ((this.linkMetadata != value))
                {
                    this.linkMetadata = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, AttributeName="applicationVersionText")]
        public string ApplicationVersionText
        {
            get
            {
                return this.applicationVersionText;
            }
            set
            {
                if ((this.applicationVersionText != value))
                {
                    this.applicationVersionText = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }
        
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="BiometricType")]
    [System.Xml.Serialization.XmlRootAttribute("Biometric", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="BiometricType")]
    
    public partial class BiometricType : ComplexObjectType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ImageType> biometricImage;
        
        /// <remarks/>
        private System.Collections.Generic.List<EntityType> biometricCapturer;
        
        public BiometricType()
        {
        }
        
        public BiometricType(System.Collections.Generic.List<ImageType> biometricImage, System.Collections.Generic.List<EntityType> biometricCapturer)
        {
            this.biometricImage = biometricImage;
            this.biometricCapturer = biometricCapturer;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BiometricImage", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<ImageType> BiometricImage
        {
            get
            {
                return this.biometricImage;
            }
            set
            {
                if ((this.biometricImage != value))
                {
                    this.biometricImage = value;
                    this.RaisePropertyChanged("BiometricImage");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BiometricCapturer", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<EntityType> BiometricCapturer
        {
            get
            {
                return this.biometricCapturer;
            }
            set
            {
                if ((this.biometricCapturer != value))
                {
                    this.biometricCapturer = value;
                    this.RaisePropertyChanged("BiometricCapturer");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RelatedActivityAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonOrganizationAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonEmploymentAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonContactInformationAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonUnionAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrganizationContactInformationAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrganizationAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ImmediateFamilyAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GuardianAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DriverLicenseAssociationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActivityConveyanceAssociationType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="AssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("Association", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="AssociationType")]
    public partial class AssociationType : ComplexObjectType
    {
        
        public AssociationType()
        {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="RelatedActivityAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("RelatedCaseAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="RelatedActivityAssociationType")]
    
    public partial class RelatedActivityAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> activityReference;
        
        public RelatedActivityAssociationType()
        {
        }
        
        public RelatedActivityAssociationType(System.Collections.Generic.List<ReferenceType> activityReference)
        {
            this.activityReference = activityReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ActivityReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> ActivityReference
        {
            get
            {
                return this.activityReference;
            }
            set
            {
                if ((this.activityReference != value))
                {
                    this.activityReference = value;
                    this.RaisePropertyChanged("ActivityReference");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PersonOrganizationAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonGangAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PersonOrganizationAssociationType")]
    
    public partial class PersonOrganizationAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> personReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> organizationReference;
        
        public PersonOrganizationAssociationType()
        {
        }
        
        public PersonOrganizationAssociationType(System.Collections.Generic.List<ReferenceType> personReference, System.Collections.Generic.List<ReferenceType> organizationReference)
        {
            this.personReference = personReference;
            this.organizationReference = organizationReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> PersonReference
        {
            get
            {
                return this.personReference;
            }
            set
            {
                if ((this.personReference != value))
                {
                    this.personReference = value;
                    this.RaisePropertyChanged("PersonReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationReference", Order=1)]
        public System.Collections.Generic.List<ReferenceType> OrganizationReference
        {
            get
            {
                return this.organizationReference;
            }
            set
            {
                if ((this.organizationReference != value))
                {
                    this.organizationReference = value;
                    this.RaisePropertyChanged("OrganizationReference");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PersonEmploymentAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonEmploymentAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PersonEmploymentAssociationType")]
    
    public partial class PersonEmploymentAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> employeeReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<EntityType> employer;
        
        public PersonEmploymentAssociationType()
        {
        }
        
        public PersonEmploymentAssociationType(System.Collections.Generic.List<ReferenceType> employeeReference, System.Collections.Generic.List<EntityType> employer)
        {
            this.employeeReference = employeeReference;
            this.employer = employer;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("EmployeeReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> EmployeeReference
        {
            get
            {
                return this.employeeReference;
            }
            set
            {
                if ((this.employeeReference != value))
                {
                    this.employeeReference = value;
                    this.RaisePropertyChanged("EmployeeReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Employer", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<EntityType> Employer
        {
            get
            {
                return this.employer;
            }
            set
            {
                if ((this.employer != value))
                {
                    this.employer = value;
                    this.RaisePropertyChanged("Employer");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PersonContactInformationAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonContactInformationAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PersonContactInformationAssociationType")]
    
    public partial class PersonContactInformationAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> personReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> contactInformationReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsPrimaryIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsHomeIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsWorkIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsEmergencyIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsDayIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsEveningIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsNightIndicator;
        
        public PersonContactInformationAssociationType()
        {
        }
        
        public PersonContactInformationAssociationType(System.Collections.Generic.List<ReferenceType> personReference, System.Collections.Generic.List<ReferenceType> contactInformationReference, System.Collections.Generic.List<Boolean> contactInformationIsPrimaryIndicator, System.Collections.Generic.List<Boolean> contactInformationIsHomeIndicator, System.Collections.Generic.List<Boolean> contactInformationIsWorkIndicator, System.Collections.Generic.List<Boolean> contactInformationIsEmergencyIndicator, System.Collections.Generic.List<Boolean> contactInformationIsDayIndicator, System.Collections.Generic.List<Boolean> contactInformationIsEveningIndicator, System.Collections.Generic.List<Boolean> contactInformationIsNightIndicator)
        {
            this.personReference = personReference;
            this.contactInformationReference = contactInformationReference;
            this.contactInformationIsPrimaryIndicator = contactInformationIsPrimaryIndicator;
            this.contactInformationIsHomeIndicator = contactInformationIsHomeIndicator;
            this.contactInformationIsWorkIndicator = contactInformationIsWorkIndicator;
            this.contactInformationIsEmergencyIndicator = contactInformationIsEmergencyIndicator;
            this.contactInformationIsDayIndicator = contactInformationIsDayIndicator;
            this.contactInformationIsEveningIndicator = contactInformationIsEveningIndicator;
            this.contactInformationIsNightIndicator = contactInformationIsNightIndicator;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> PersonReference
        {
            get
            {
                return this.personReference;
            }
            set
            {
                if ((this.personReference != value))
                {
                    this.personReference = value;
                    this.RaisePropertyChanged("PersonReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationReference", Order=1)]
        public System.Collections.Generic.List<ReferenceType> ContactInformationReference
        {
            get
            {
                return this.contactInformationReference;
            }
            set
            {
                if ((this.contactInformationReference != value))
                {
                    this.contactInformationReference = value;
                    this.RaisePropertyChanged("ContactInformationReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsPrimaryIndicator", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsPrimaryIndicator
        {
            get
            {
                return this.contactInformationIsPrimaryIndicator;
            }
            set
            {
                if ((this.contactInformationIsPrimaryIndicator != value))
                {
                    this.contactInformationIsPrimaryIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsPrimaryIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsHomeIndicator", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsHomeIndicator
        {
            get
            {
                return this.contactInformationIsHomeIndicator;
            }
            set
            {
                if ((this.contactInformationIsHomeIndicator != value))
                {
                    this.contactInformationIsHomeIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsHomeIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsWorkIndicator", IsNullable=true, Order=4)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsWorkIndicator
        {
            get
            {
                return this.contactInformationIsWorkIndicator;
            }
            set
            {
                if ((this.contactInformationIsWorkIndicator != value))
                {
                    this.contactInformationIsWorkIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsWorkIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsEmergencyIndicator", IsNullable=true, Order=5)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsEmergencyIndicator
        {
            get
            {
                return this.contactInformationIsEmergencyIndicator;
            }
            set
            {
                if ((this.contactInformationIsEmergencyIndicator != value))
                {
                    this.contactInformationIsEmergencyIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsEmergencyIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsDayIndicator", IsNullable=true, Order=6)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsDayIndicator
        {
            get
            {
                return this.contactInformationIsDayIndicator;
            }
            set
            {
                if ((this.contactInformationIsDayIndicator != value))
                {
                    this.contactInformationIsDayIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsDayIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsEveningIndicator", IsNullable=true, Order=7)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsEveningIndicator
        {
            get
            {
                return this.contactInformationIsEveningIndicator;
            }
            set
            {
                if ((this.contactInformationIsEveningIndicator != value))
                {
                    this.contactInformationIsEveningIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsEveningIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsNightIndicator", IsNullable=true, Order=8)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsNightIndicator
        {
            get
            {
                return this.contactInformationIsNightIndicator;
            }
            set
            {
                if ((this.contactInformationIsNightIndicator != value))
                {
                    this.contactInformationIsNightIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsNightIndicator");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PersonUnionAssociationType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PersonAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("PersonAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PersonAssociationType")]
    
    public partial class PersonAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> personReference;
        
        public PersonAssociationType()
        {
        }
        
        public PersonAssociationType(System.Collections.Generic.List<ReferenceType> personReference)
        {
            this.personReference = personReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> PersonReference
        {
            get
            {
                return this.personReference;
            }
            set
            {
                if ((this.personReference != value))
                {
                    this.personReference = value;
                    this.RaisePropertyChanged("PersonReference");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="PersonUnionAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("MarriageAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="PersonUnionAssociationType")]
    
    public partial class PersonUnionAssociationType : PersonAssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<MarriageCategoryCodeType> personUnionCategoryCodes;
        
        /// <remarks/>
        private System.Collections.Generic.List<MarriageStatusType> personUnionStatus;
        
        public PersonUnionAssociationType()
        {
        }

        public PersonUnionAssociationType(System.Collections.Generic.List<MarriageCategoryCodeType> personUnionCategoryCodes, System.Collections.Generic.List<MarriageStatusType> personUnionStatus)
        {
            this.personUnionCategoryCodes = personUnionCategoryCodes;
            this.personUnionStatus = personUnionStatus;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonUnionCategoryCode", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<MarriageCategoryCodeType> PersonUnionCategoryCodes
        {
            get
            {
                return this.personUnionCategoryCodes;
            }
            set
            {
                if ((this.personUnionCategoryCodes != value))
                {
                    this.personUnionCategoryCodes = value;
                    this.RaisePropertyChanged("PersonUnionCategoryCodes");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonUnionStatus", IsNullable=true, Order=1)]
        public System.Collections.Generic.List<MarriageStatusType> PersonUnionStatus
        {
            get
            {
                return this.personUnionStatus;
            }
            set
            {
                if ((this.personUnionStatus != value))
                {
                    this.personUnionStatus = value;
                    this.RaisePropertyChanged("PersonUnionStatus");
                }
            }
        }
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="OrganizationContactInformationAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("OrganizationContactInformationAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="OrganizationContactInformationAssociationType")]
    
    public partial class OrganizationContactInformationAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> organizationReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> contactInformationReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsPrimaryIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsEmergencyIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsDayIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsEveningIndicator;
        
        /// <remarks/>
        private System.Collections.Generic.List<Boolean> contactInformationIsNightIndicator;
        
        public OrganizationContactInformationAssociationType()
        {
        }
        
        public OrganizationContactInformationAssociationType(System.Collections.Generic.List<ReferenceType> organizationReference, System.Collections.Generic.List<ReferenceType> contactInformationReference, System.Collections.Generic.List<Boolean> contactInformationIsPrimaryIndicator, System.Collections.Generic.List<Boolean> contactInformationIsEmergencyIndicator, System.Collections.Generic.List<Boolean> contactInformationIsDayIndicator, System.Collections.Generic.List<Boolean> contactInformationIsEveningIndicator, System.Collections.Generic.List<Boolean> contactInformationIsNightIndicator)
        {
            this.organizationReference = organizationReference;
            this.contactInformationReference = contactInformationReference;
            this.contactInformationIsPrimaryIndicator = contactInformationIsPrimaryIndicator;
            this.contactInformationIsEmergencyIndicator = contactInformationIsEmergencyIndicator;
            this.contactInformationIsDayIndicator = contactInformationIsDayIndicator;
            this.contactInformationIsEveningIndicator = contactInformationIsEveningIndicator;
            this.contactInformationIsNightIndicator = contactInformationIsNightIndicator;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> OrganizationReference
        {
            get
            {
                return this.organizationReference;
            }
            set
            {
                if ((this.organizationReference != value))
                {
                    this.organizationReference = value;
                    this.RaisePropertyChanged("OrganizationReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationReference", Order=1)]
        public System.Collections.Generic.List<ReferenceType> ContactInformationReference
        {
            get
            {
                return this.contactInformationReference;
            }
            set
            {
                if ((this.contactInformationReference != value))
                {
                    this.contactInformationReference = value;
                    this.RaisePropertyChanged("ContactInformationReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsPrimaryIndicator", IsNullable=true, Order=2)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsPrimaryIndicator
        {
            get
            {
                return this.contactInformationIsPrimaryIndicator;
            }
            set
            {
                if ((this.contactInformationIsPrimaryIndicator != value))
                {
                    this.contactInformationIsPrimaryIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsPrimaryIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsEmergencyIndicator", IsNullable=true, Order=3)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsEmergencyIndicator
        {
            get
            {
                return this.contactInformationIsEmergencyIndicator;
            }
            set
            {
                if ((this.contactInformationIsEmergencyIndicator != value))
                {
                    this.contactInformationIsEmergencyIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsEmergencyIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsDayIndicator", IsNullable=true, Order=4)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsDayIndicator
        {
            get
            {
                return this.contactInformationIsDayIndicator;
            }
            set
            {
                if ((this.contactInformationIsDayIndicator != value))
                {
                    this.contactInformationIsDayIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsDayIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsEveningIndicator", IsNullable=true, Order=5)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsEveningIndicator
        {
            get
            {
                return this.contactInformationIsEveningIndicator;
            }
            set
            {
                if ((this.contactInformationIsEveningIndicator != value))
                {
                    this.contactInformationIsEveningIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsEveningIndicator");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ContactInformationIsNightIndicator", IsNullable=true, Order=6)]
        public System.Collections.Generic.List<Boolean> ContactInformationIsNightIndicator
        {
            get
            {
                return this.contactInformationIsNightIndicator;
            }
            set
            {
                if ((this.contactInformationIsNightIndicator != value))
                {
                    this.contactInformationIsNightIndicator = value;
                    this.RaisePropertyChanged("ContactInformationIsNightIndicator");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="OrganizationAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("OrganizationAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="OrganizationAssociationType")]
    
    public partial class OrganizationAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> organizationReference;
        
        public OrganizationAssociationType()
        {
        }
        
        public OrganizationAssociationType(System.Collections.Generic.List<ReferenceType> organizationReference)
        {
            this.organizationReference = organizationReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OrganizationReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> OrganizationReference
        {
            get
            {
                return this.organizationReference;
            }
            set
            {
                if ((this.organizationReference != value))
                {
                    this.organizationReference = value;
                    this.RaisePropertyChanged("OrganizationReference");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ImmediateFamilyAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("ImmediateFamilyAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ImmediateFamilyAssociationType")]
    
    public partial class ImmediateFamilyAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> personParentReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> personChildReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<object> familyKinships;
        
        public ImmediateFamilyAssociationType()
        {
        }

        public ImmediateFamilyAssociationType(System.Collections.Generic.List<ReferenceType> personParentReference, System.Collections.Generic.List<ReferenceType> personChildReference, System.Collections.Generic.List<object> familyKinships)
        {
            this.personParentReference = personParentReference;
            this.personChildReference = personChildReference;
            this.familyKinships = familyKinships;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonParentReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> PersonParentReference
        {
            get
            {
                return this.personParentReference;
            }
            set
            {
                if ((this.personParentReference != value))
                {
                    this.personParentReference = value;
                    this.RaisePropertyChanged("PersonParentReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonChildReference", Order=1)]
        public System.Collections.Generic.List<ReferenceType> PersonChildReference
        {
            get
            {
                return this.personChildReference;
            }
            set
            {
                if ((this.personChildReference != value))
                {
                    this.personChildReference = value;
                    this.RaisePropertyChanged("PersonChildReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("FamilyKinshipCode", typeof(FamilyKinshipCodeType), IsNullable=true, Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("FamilyKinshipText", typeof(TextType), IsNullable=true, Order=2)]
        public System.Collections.Generic.List<object> FamilyKinships
        {
            get
            {
                return this.familyKinships;
            }
            set
            {
                if ((this.familyKinships != value))
                {
                    this.familyKinships = value;
                    this.RaisePropertyChanged("FamilyKinships");
                }
            }
        }
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="GuardianAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("GuardianAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="GuardianAssociationType")]
    
    public partial class GuardianAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> personGuardianReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> personDependentReference;
        
        public GuardianAssociationType()
        {
        }
        
        public GuardianAssociationType(System.Collections.Generic.List<ReferenceType> personGuardianReference, System.Collections.Generic.List<ReferenceType> personDependentReference)
        {
            this.personGuardianReference = personGuardianReference;
            this.personDependentReference = personDependentReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonGuardianReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> PersonGuardianReference
        {
            get
            {
                return this.personGuardianReference;
            }
            set
            {
                if ((this.personGuardianReference != value))
                {
                    this.personGuardianReference = value;
                    this.RaisePropertyChanged("PersonGuardianReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonDependentReference", Order=1)]
        public System.Collections.Generic.List<ReferenceType> PersonDependentReference
        {
            get
            {
                return this.personDependentReference;
            }
            set
            {
                if ((this.personDependentReference != value))
                {
                    this.personDependentReference = value;
                    this.RaisePropertyChanged("PersonDependentReference");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="DriverLicenseAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="DriverLicenseAssociationType")]
    
    public partial class DriverLicenseAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> driverLicenseReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> personReference;
        
        public DriverLicenseAssociationType()
        {
        }
        
        public DriverLicenseAssociationType(System.Collections.Generic.List<ReferenceType> driverLicenseReference, System.Collections.Generic.List<ReferenceType> personReference)
        {
            this.driverLicenseReference = driverLicenseReference;
            this.personReference = personReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("DriverLicenseReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> DriverLicenseReference
        {
            get
            {
                return this.driverLicenseReference;
            }
            set
            {
                if ((this.driverLicenseReference != value))
                {
                    this.driverLicenseReference = value;
                    this.RaisePropertyChanged("DriverLicenseReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PersonReference", Order=1)]
        public System.Collections.Generic.List<ReferenceType> PersonReference
        {
            get
            {
                return this.personReference;
            }
            set
            {
                if ((this.personReference != value))
                {
                    this.personReference = value;
                    this.RaisePropertyChanged("PersonReference");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", TypeName="ActivityConveyanceAssociationType")]
    [System.Xml.Serialization.XmlRootAttribute("IncidentVehicleAssociation", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="ActivityConveyanceAssociationType")]
    
    public partial class ActivityConveyanceAssociationType : AssociationType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> activityReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<ReferenceType> conveyanceReference;
        
        public ActivityConveyanceAssociationType()
        {
        }
        
        public ActivityConveyanceAssociationType(System.Collections.Generic.List<ReferenceType> activityReference, System.Collections.Generic.List<ReferenceType> conveyanceReference)
        {
            this.activityReference = activityReference;
            this.conveyanceReference = conveyanceReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ActivityReference", Order=0)]
        public System.Collections.Generic.List<ReferenceType> ActivityReference
        {
            get
            {
                return this.activityReference;
            }
            set
            {
                if ((this.activityReference != value))
                {
                    this.activityReference = value;
                    this.RaisePropertyChanged("ActivityReference");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ConveyanceReference", Order=1)]
        public System.Collections.Generic.List<ReferenceType> ConveyanceReference
        {
            get
            {
                return this.conveyanceReference;
            }
            set
            {
                if ((this.conveyanceReference != value))
                {
                    this.conveyanceReference = value;
                    this.RaisePropertyChanged("ConveyanceReference");
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="MetadataType", Namespace="http://niem.gov/niem/niem-core/2.0")]
    [System.Xml.Serialization.XmlRootAttribute("Metadata", Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, ElementName="MetadataType1")]
    
    public partial class MetadataType : Structures.v20.MetadataType
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<TextType> sensitivityText;
        
        public MetadataType()
        {
        }
        
        public MetadataType(System.Collections.Generic.List<TextType> sensitivityText)
        {
            this.sensitivityText = sensitivityText;
        }
        
        [System.Xml.Serialization.XmlElementAttribute("SensitivityText", IsNullable=true, Order=0)]
        public System.Collections.Generic.List<TextType> SensitivityText
        {
            get
            {
                return this.sensitivityText;
            }
            set
            {
                if ((this.sensitivityText != value))
                {
                    this.sensitivityText = value;
                }
            }
        }
    }


    /*
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://niem.gov/niem/niem-core/2.0", TypeName = "PersonReferenceType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://niem.gov/niem/niem-core/2.0", IsNullable = true, ElementName = "PersonReference")]
    public partial class PersonReferenceType : ReferenceType
    {
        public PersonReferenceType()
        {
        }

        public PersonReferenceType(string referenceId)
            : base(referenceId) 
        {

        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://niem.gov/niem/niem-core/2.0", TypeName = "OrganizationReferenceType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://niem.gov/niem/niem-core/2.0", IsNullable = true, ElementName = "OrganizationReference")]
    public partial class OrganizationReferenceType : ReferenceType
    {
        public OrganizationReferenceType()
        {
        }

        public OrganizationReferenceType(string referenceId)
            : base( referenceId) 
        {

        }

    }
     */

}
