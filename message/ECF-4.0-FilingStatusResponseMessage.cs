/*
	'=======================================================================
	'   Author(s):      D V Rao
	'   Module/Form:    ECF-4.0-FilingListResponseMessage.cs
	'   Created Date:   
	'   Description:    
	'
	'   Modification History:
	'=======================================================================
	'   Author(s)       Date        Control/Procedure       Change
 	'=======================================================================
    '   Rao     02/10/2015      Removed references to Amcad extensions
    '   Rao     04/24/2012       Case Property can be any of ecf case types not just niem case
    '   Rao     04/24/2012       Moved AddNameSpaces to EcfHelper
	'=======================================================================
	*/

#region WSCF
//------------------------------------------------------------------------------
// <autogenerated code>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated code>
//------------------------------------------------------------------------------
// File time 27-11-08 03:50 PM
//
// This source code was auto-generated by WsContractFirst, Version=0.7.6319.1
#endregion

using Oasis.LegalXml.CourtFiling.v40.Ecf;
using Niem.NiemCore.v20; 
namespace Oasis.LegalXml.CourtFiling.v40.Filing
{
    
    
    /// <remarks/>
    /// 
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Appellate.AppellateCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Citation.CitationCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Civil.CivilCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Criminal.CriminalCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Domestic.DomesticCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Oasis.LegalXml.CourtFiling.v40.Juvenile.JuvenileCaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Niem.NiemCore.v20.CaseType))]

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:FilingStatusResponseMessage-4." +
        "0", TypeName="FilingStatusResponseMessageType")]
    [System.Xml.Serialization.XmlRootAttribute("FilingStatusResponseMessage", Namespace="urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:FilingStatusResponseMessage-4." +
        "0", IsNullable=false, ElementName="FilingStatusResponseMessageType")]
    
    public partial class FilingStatusResponseMessageType : QueryResponseMessageType
    {
        
        /// <remarks/>
        private object courtCase;
        private CaseTypeSelectionType caseTypeSelection; 

        
        /// <remarks/>
        private IdentificationType documentIdentification;
        
        /// <remarks/>
        private FilingStatusType filingStatus;

        [field: System.NonSerialized]
        [System.Xml.Serialization.XmlNamespaceDeclarations]
        public System.Xml.Serialization.XmlSerializerNamespaces namespaces = new System.Xml.Serialization.XmlSerializerNamespaces(); 


        public FilingStatusResponseMessageType()
        {
            EcfHelper.AddNameSpaces(this.namespaces);
        }
        
        public FilingStatusResponseMessageType
            (
             object courtCase, 
             CaseTypeSelectionType caseTypeSelection , 
            IdentificationType documentIdentification, 
            FilingStatusType filingStatus
            )
        {
            EcfHelper.AddNameSpaces(this.namespaces);
            this.courtCase = courtCase;
            this.caseTypeSelection = caseTypeSelection;
            this.documentIdentification = documentIdentification;
            this.filingStatus = filingStatus;
        }

        [System.Xml.Serialization.XmlElementAttribute("Case", typeof(Niem.NiemCore.v20.CaseType), Order = 0, Namespace = "http://niem.gov/niem/niem-core/2.0", IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("Case", typeof(Oasis.LegalXml.CourtFiling.v40.Citation.CitationCaseType), Order = 0, Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CitationCase-4.0", IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("Case", typeof(Oasis.LegalXml.CourtFiling.v40.Civil.CivilCaseType), Order = 0, Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CivilCase-4.0", IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("Case", typeof(Oasis.LegalXml.CourtFiling.v40.Criminal.CriminalCaseType), Order = 0, Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CriminalCase-4.0", IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("Case", typeof(Oasis.LegalXml.CourtFiling.v40.Domestic.DomesticCaseType), Order = 0, Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:DomesticCase-4.0", IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("Case", typeof(Oasis.LegalXml.CourtFiling.v40.Juvenile.JuvenileCaseType), Order = 0, Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:JuvenileCase-4.0", IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("AppellateCase", typeof(Oasis.LegalXml.CourtFiling.v40.Appellate.AppellateCaseType), Order = 0, Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:AppellateCase-4.0", IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("CaseTypeSelection")]
        public object Case
        {
            get
            {
                return this.courtCase;
            }
            set
            {
                if ((this.courtCase != value))
                {
                    this.caseTypeSelection = EcfHelper.GetCaseTypeSelectionType (caseObject:value);
                    this.courtCase = value;
                    this.RaisePropertyChanged("Case");
                }

            }
        }

        [System.Xml.Serialization.XmlElementAttribute("CaseTypeSelection", Order = 1)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public CaseTypeSelectionType CaseTypeSelection
        {
            get
            {
                return this.caseTypeSelection;
            }
            set
            {
                if ((this.caseTypeSelection != value))
                {
                    this.caseTypeSelection = value;
                    this.RaisePropertyChanged("CaseTypeSelection");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://niem.gov/niem/niem-core/2.0", IsNullable=true, Order=2, ElementName="DocumentIdentification")]
        public IdentificationType DocumentIdentification
        {
            get
            {
                return this.documentIdentification;
            }
            set
            {
                if ((this.documentIdentification != value))
                {
                    this.documentIdentification = value;
                    this.RaisePropertyChanged("DocumentIdentification");
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CommonTypes-4.0", Order=3, ElementName="FilingStatus")]
        public FilingStatusType FilingStatus
        {
            get
            {
                return this.filingStatus;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FilingStatus");
                }
                if ((this.filingStatus != value))
                {
                    this.filingStatus = value;
                    this.RaisePropertyChanged("FilingStatus");
                }
            }
        }



    }
    
 
}
