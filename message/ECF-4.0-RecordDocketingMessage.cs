/*
	'=======================================================================
	'   Author(s):      D V Rao
	'   Module/Form:    ECF-4.0-RecordDocketingMessage.cs
	'   Created Date:   
	'   Description:    
	'
	'   Modification History:
	'=======================================================================
	'   Author(s)       Date        Control/Procedure       Change
 	'=======================================================================
    '   Rao     04/24/2012       Moved AddNameSpaces to EcfHelper
	'=======================================================================
	*/

#region WSCF
//------------------------------------------------------------------------------
// <autogenerated code>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated code>
//------------------------------------------------------------------------------
// File time 27-11-08 05:12 PM
//
// This source code was auto-generated by WsContractFirst, Version=0.7.6319.1
#endregion

using Oasis.LegalXml.CourtFiling.v40.Ecf;
using Niem.Domains.Jxdm.v40;
using Niem.Proxy.xsd.v20;
using Niem.NiemCore.v20; 

namespace Oasis.LegalXml.CourtFiling.v40.Docketing
{


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:RecordDocketingMessage-4.0", TypeName = "RecordDocketingMessageType")]
    [System.Xml.Serialization.XmlRootAttribute("RecordDocketingMessage", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:RecordDocketingMessage-4.0", IsNullable = false, ElementName = "RecordDocketingMessageType")]
    
    public partial class RecordDocketingMessageType : ElectronicFilingMessageType
    {

        /// <remarks/>
        private CourtType caseCourt;

        /// <remarks/>
        private String caseTrackingID;

        /// <remarks/>
        private ReviewedDocumentType reviewedLeadDocument;

        /// <remarks/>
        private System.Collections.Generic.List<ReviewedDocumentType> reviewedConnectedDocument;

        /// <remarks/>
        private Boolean sealCaseIndicator;

        /// <remarks/>
        private TextType filingReviewCommentsText;

        [field: System.NonSerialized]
        [System.Xml.Serialization.XmlNamespaceDeclarations]
        public System.Xml.Serialization.XmlSerializerNamespaces namespaces = new System.Xml.Serialization.XmlSerializerNamespaces(); 

        public RecordDocketingMessageType()
        {
           EcfHelper.AddNameSpaces(this.namespaces);
        }

        public RecordDocketingMessageType(CourtType caseCourt, String caseTrackingID, ReviewedDocumentType reviewedLeadDocument, System.Collections.Generic.List<ReviewedDocumentType> reviewedConnectedDocument, Boolean sealCaseIndicator, TextType filingReviewCommentsText)
        {
            EcfHelper.AddNameSpaces(this.namespaces);
            this.caseCourt = caseCourt;
            this.caseTrackingID = caseTrackingID;
            this.reviewedLeadDocument = reviewedLeadDocument;
            this.reviewedConnectedDocument = reviewedConnectedDocument;
            this.sealCaseIndicator = sealCaseIndicator;
            this.filingReviewCommentsText = filingReviewCommentsText;
        }


        [System.Xml.Serialization.XmlElementAttribute(Namespace = "http://niem.gov/niem/domains/jxdm/4.0", IsNullable = true, Order = 0, ElementName = "CaseCourt")]
        public CourtType CaseCourt
        {
            get
            {
                return this.caseCourt;
            }
            set
            {
                if ((this.caseCourt != value))
                {
                    this.caseCourt = value;
                    this.RaisePropertyChanged("CaseCourt");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Namespace = "http://niem.gov/niem/niem-core/2.0", IsNullable = true, Order = 1, ElementName = "CaseTrackingID")]
        public String CaseTrackingID
        {
            get
            {
                return this.caseTrackingID;
            }
            set
            {
                if ((this.caseTrackingID != value))
                {
                    this.caseTrackingID = value;
                    this.RaisePropertyChanged("CaseTrackingID");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CommonTypes-4.0", Order = 2, ElementName = "ReviewedLeadDocument")]
        public ReviewedDocumentType ReviewedLeadDocument
        {
            get
            {
                return this.reviewedLeadDocument;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ReviewedLeadDocument");
                }
                if ((this.reviewedLeadDocument != value))
                {
                    this.reviewedLeadDocument = value;
                    this.RaisePropertyChanged("ReviewedLeadDocument");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("ReviewedConnectedDocument", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CommonTypes-4.0", Order = 3)]
        public System.Collections.Generic.List<ReviewedDocumentType> ReviewedConnectedDocument
        {
            get
            {
                return this.reviewedConnectedDocument;
            }
            set
            {
                if ((this.reviewedConnectedDocument != value))
                {
                    this.reviewedConnectedDocument = value;
                    this.RaisePropertyChanged("ReviewedConnectedDocument");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 4, ElementName = "SealCaseIndicator")]
        public Boolean SealCaseIndicator
        {
            get
            {
                return this.sealCaseIndicator;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SealCaseIndicator");
                }
                if ((this.sealCaseIndicator != value))
                {
                    this.sealCaseIndicator = value;
                    this.RaisePropertyChanged("SealCaseIndicator");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 5, ElementName = "FilingReviewCommentsText")]
        public TextType FilingReviewCommentsText
        {
            get
            {
                return this.filingReviewCommentsText;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FilingReviewCommentsText");
                }
                if ((this.filingReviewCommentsText != value))
                {
                    this.filingReviewCommentsText = value;
                    this.RaisePropertyChanged("FilingReviewCommentsText");
                }
            }
        }
    }

}
