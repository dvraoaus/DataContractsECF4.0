#region WSCF
//------------------------------------------------------------------------------
// <autogenerated code>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated code>
//------------------------------------------------------------------------------
// File time 27-11-08 10:49 AM
//
// This source code was auto-generated by WsContractFirst, Version=0.7.6319.1
#endregion


using Oasis.LegalXml.CourtFiling.v40.Ecf;
using Niem.NiemCore.v20;
using Niem.Structures.v20;
using Niem.Proxy.xsd.v20;
using W3.DigitalSignature; 
namespace Oasis.LegalXml.CourtFiling.v40.CourtPolicy
{


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "CourtPolicyResponseMessageType")]
    [System.Xml.Serialization.XmlRootAttribute("CourtPolicyResponseMessage", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "CourtPolicyResponseMessageType")]
    
    public partial class CourtPolicyResponseMessageType : QueryResponseMessageType
    {

        /// <remarks/>
        private IdentificationType policyVersionID;

        /// <remarks/>
        private DateType policyLastUpdateDate;

        /// <remarks/>
        private RuntimePolicyParametersType runtimePolicyParameters;

        /// <remarks/>
        private DevelopmentPolicyParametersType developmentPolicyParameters;

        public CourtPolicyResponseMessageType()
        {
        }

        public CourtPolicyResponseMessageType(IdentificationType policyVersionID, DateType policyLastUpdateDate, RuntimePolicyParametersType runtimePolicyParameters, DevelopmentPolicyParametersType developmentPolicyParameters)
        {
            this.policyVersionID = policyVersionID;
            this.policyLastUpdateDate = policyLastUpdateDate;
            this.runtimePolicyParameters = runtimePolicyParameters;
            this.developmentPolicyParameters = developmentPolicyParameters;
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0, ElementName = "PolicyVersionID")]
        public IdentificationType PolicyVersionID
        {
            get
            {
                return this.policyVersionID;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("PolicyVersionID");
                }
                if ((this.policyVersionID != value))
                {
                    this.policyVersionID = value;
                    this.RaisePropertyChanged("PolicyVersionID");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1, ElementName = "PolicyLastUpdateDate")]
        public DateType PolicyLastUpdateDate
        {
            get
            {
                return this.policyLastUpdateDate;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("PolicyLastUpdateDate");
                }
                if ((this.policyLastUpdateDate != value))
                {
                    this.policyLastUpdateDate = value;
                    this.RaisePropertyChanged("PolicyLastUpdateDate");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2, ElementName = "RuntimePolicyParameters")]
        public RuntimePolicyParametersType RuntimePolicyParameters
        {
            get
            {
                return this.runtimePolicyParameters;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("RuntimePolicyParameters");
                }
                if ((this.runtimePolicyParameters != value))
                {
                    this.runtimePolicyParameters = value;
                    this.RaisePropertyChanged("RuntimePolicyParameters");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3, ElementName = "DevelopmentPolicyParameters")]
        public DevelopmentPolicyParametersType DevelopmentPolicyParameters
        {
            get
            {
                return this.developmentPolicyParameters;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("DevelopmentPolicyParameters");
                }
                if ((this.developmentPolicyParameters != value))
                {
                    this.developmentPolicyParameters = value;
                    this.RaisePropertyChanged("DevelopmentPolicyParameters");
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "DevelopmentPolicyParametersType")]
    [System.Xml.Serialization.XmlRootAttribute("DevelopmentPolicyParameters", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "DevelopmentPolicyParametersType")]
    
    public partial class DevelopmentPolicyParametersType : ComplexObjectType
    {

        /// <remarks/>
        private Boolean uRLAttachmentSupportedIndicator;

        /// <remarks/>
        private Boolean acceptDocumentsRequiringFeesIndicator;

        /// <remarks/>
        private Boolean acceptConfidentialFilingsIndicator;

        /// <remarks/>
        private Boolean acceptMultipleLeadDocumentsIndicator;

        /// <remarks/>
        private MeasureType maximumAllowedAttachmentSize;

        /// <remarks/>
        private MeasureType maximumAllowedMessageSize;

        /// <remarks/>
        private System.Collections.Generic.List<TextType> supportedMessageProfileCode;

        /// <remarks/>
        private System.Collections.Generic.List<TextType> supportedSignatureProfileCode;

        /// <remarks/>
        private System.Collections.Generic.List<OperationNameType> supportedOperationName;

        /// <remarks/>
        private System.Collections.Generic.List<CaseTypeCodeType> supportedCaseType;

        /// <remarks/>
        private System.Collections.Generic.List<CourtExtensionType> courtExtension;

        /// <remarks/>
        private Boolean filingFeesMayBeApplicableIndicator;

        /// <remarks/>
        private DateType effectiveDate;

        /// <remarks/>
        private DateType expirationDate;

        public DevelopmentPolicyParametersType()
        {
        }

        public DevelopmentPolicyParametersType(Boolean uRLAttachmentSupportedIndicator, Boolean acceptDocumentsRequiringFeesIndicator, Boolean acceptConfidentialFilingsIndicator, Boolean acceptMultipleLeadDocumentsIndicator, MeasureType maximumAllowedAttachmentSize, MeasureType maximumAllowedMessageSize, System.Collections.Generic.List<TextType> supportedMessageProfileCode, System.Collections.Generic.List<TextType> supportedSignatureProfileCode, System.Collections.Generic.List<OperationNameType> supportedOperationName, System.Collections.Generic.List<CaseTypeCodeType> supportedCaseType, System.Collections.Generic.List<CourtExtensionType> courtExtension, Boolean filingFeesMayBeApplicableIndicator, DateType effectiveDate, DateType expirationDate)
        {
            this.uRLAttachmentSupportedIndicator = uRLAttachmentSupportedIndicator;
            this.acceptDocumentsRequiringFeesIndicator = acceptDocumentsRequiringFeesIndicator;
            this.acceptConfidentialFilingsIndicator = acceptConfidentialFilingsIndicator;
            this.acceptMultipleLeadDocumentsIndicator = acceptMultipleLeadDocumentsIndicator;
            this.maximumAllowedAttachmentSize = maximumAllowedAttachmentSize;
            this.maximumAllowedMessageSize = maximumAllowedMessageSize;
            this.supportedMessageProfileCode = supportedMessageProfileCode;
            this.supportedSignatureProfileCode = supportedSignatureProfileCode;
            this.supportedOperationName = supportedOperationName;
            this.supportedCaseType = supportedCaseType;
            this.courtExtension = courtExtension;
            this.filingFeesMayBeApplicableIndicator = filingFeesMayBeApplicableIndicator;
            this.effectiveDate = effectiveDate;
            this.expirationDate = expirationDate;
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0, ElementName = "URLAttachmentSupportedIndicator")]
        public Boolean URLAttachmentSupportedIndicator
        {
            get
            {
                return this.uRLAttachmentSupportedIndicator;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("URLAttachmentSupportedIndicator");
                }
                if ((this.uRLAttachmentSupportedIndicator != value))
                {
                    this.uRLAttachmentSupportedIndicator = value;
                    this.RaisePropertyChanged("URLAttachmentSupportedIndicator");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1, ElementName = "AcceptDocumentsRequiringFeesIndicator")]
        public Boolean AcceptDocumentsRequiringFeesIndicator
        {
            get
            {
                return this.acceptDocumentsRequiringFeesIndicator;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("AcceptDocumentsRequiringFeesIndicator");
                }
                if ((this.acceptDocumentsRequiringFeesIndicator != value))
                {
                    this.acceptDocumentsRequiringFeesIndicator = value;
                    this.RaisePropertyChanged("AcceptDocumentsRequiringFeesIndicator");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2, ElementName = "AcceptConfidentialFilingsIndicator")]
        public Boolean AcceptConfidentialFilingsIndicator
        {
            get
            {
                return this.acceptConfidentialFilingsIndicator;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("AcceptConfidentialFilingsIndicator");
                }
                if ((this.acceptConfidentialFilingsIndicator != value))
                {
                    this.acceptConfidentialFilingsIndicator = value;
                    this.RaisePropertyChanged("AcceptConfidentialFilingsIndicator");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3, ElementName = "AcceptMultipleLeadDocumentsIndicator")]
        public Boolean AcceptMultipleLeadDocumentsIndicator
        {
            get
            {
                return this.acceptMultipleLeadDocumentsIndicator;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("AcceptMultipleLeadDocumentsIndicator");
                }
                if ((this.acceptMultipleLeadDocumentsIndicator != value))
                {
                    this.acceptMultipleLeadDocumentsIndicator = value;
                    this.RaisePropertyChanged("AcceptMultipleLeadDocumentsIndicator");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 4, ElementName = "MaximumAllowedAttachmentSize")]
        public MeasureType MaximumAllowedAttachmentSize
        {
            get
            {
                return this.maximumAllowedAttachmentSize;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("MaximumAllowedAttachmentSize");
                }
                if ((this.maximumAllowedAttachmentSize != value))
                {
                    this.maximumAllowedAttachmentSize = value;
                    this.RaisePropertyChanged("MaximumAllowedAttachmentSize");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 5, ElementName = "MaximumAllowedMessageSize")]
        public MeasureType MaximumAllowedMessageSize
        {
            get
            {
                return this.maximumAllowedMessageSize;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("MaximumAllowedMessageSize");
                }
                if ((this.maximumAllowedMessageSize != value))
                {
                    this.maximumAllowedMessageSize = value;
                    this.RaisePropertyChanged("MaximumAllowedMessageSize");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("SupportedMessageProfileCode", Order = 6)]
        public System.Collections.Generic.List<TextType> SupportedMessageProfileCode
        {
            get
            {
                return this.supportedMessageProfileCode;
            }
            set
            {
                if ((this.supportedMessageProfileCode != value))
                {
                    this.supportedMessageProfileCode = value;
                    this.RaisePropertyChanged("SupportedMessageProfileCode");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("SupportedSignatureProfileCode", Order = 7)]
        public System.Collections.Generic.List<TextType> SupportedSignatureProfileCode
        {
            get
            {
                return this.supportedSignatureProfileCode;
            }
            set
            {
                if ((this.supportedSignatureProfileCode != value))
                {
                    this.supportedSignatureProfileCode = value;
                    this.RaisePropertyChanged("SupportedSignatureProfileCode");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("SupportedOperationName", Order = 8)]
        public System.Collections.Generic.List<OperationNameType> SupportedOperationName
        {
            get
            {
                return this.supportedOperationName;
            }
            set
            {
                if ((this.supportedOperationName != value))
                {
                    this.supportedOperationName = value;
                    this.RaisePropertyChanged("SupportedOperationName");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("SupportedCaseType", Order = 9)]
        public System.Collections.Generic.List<CaseTypeCodeType> SupportedCaseType
        {
            get
            {
                return this.supportedCaseType;
            }
            set
            {
                if ((this.supportedCaseType != value))
                {
                    this.supportedCaseType = value;
                    this.RaisePropertyChanged("SupportedCaseType");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("CourtExtension", Order = 10)]
        public System.Collections.Generic.List<CourtExtensionType> CourtExtension
        {
            get
            {
                return this.courtExtension;
            }
            set
            {
                if ((this.courtExtension != value))
                {
                    this.courtExtension = value;
                    this.RaisePropertyChanged("CourtExtension");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 11, ElementName = "FilingFeesMayBeApplicableIndicator")]
        public Boolean FilingFeesMayBeApplicableIndicator
        {
            get
            {
                return this.filingFeesMayBeApplicableIndicator;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FilingFeesMayBeApplicableIndicator");
                }
                if ((this.filingFeesMayBeApplicableIndicator != value))
                {
                    this.filingFeesMayBeApplicableIndicator = value;
                    this.RaisePropertyChanged("FilingFeesMayBeApplicableIndicator");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 12, ElementName = "EffectiveDate")]
        public DateType EffectiveDate
        {
            get
            {
                return this.effectiveDate;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("EffectiveDate");
                }
                if ((this.effectiveDate != value))
                {
                    this.effectiveDate = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 13, ElementName = "ExpirationDate")]
        public DateType ExpirationDate
        {
            get
            {
                return this.expirationDate;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ExpirationDate");
                }
                if ((this.expirationDate != value))
                {
                    this.expirationDate = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "RuntimePolicyParametersType")]
    [System.Xml.Serialization.XmlRootAttribute("RuntimePolicyParameters", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "RuntimePolicyParametersType")]
    
    public partial class RuntimePolicyParametersType : ComplexObjectType
    {

        /// <remarks/>
        private PublicKeyInformationType publicKeyInformation;

        /// <remarks/>
        private System.Collections.Generic.List<CourtCodelistType> courtCodelist;

        public RuntimePolicyParametersType()
        {
        }

        public RuntimePolicyParametersType(PublicKeyInformationType publicKeyInformation, System.Collections.Generic.List<CourtCodelistType> courtCodelist)
        {
            this.publicKeyInformation = publicKeyInformation;
            this.courtCodelist = courtCodelist;
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0, ElementName = "PublicKeyInformation")]
        public PublicKeyInformationType PublicKeyInformation
        {
            get
            {
                return this.publicKeyInformation;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("PublicKeyInformation");
                }
                if ((this.publicKeyInformation != value))
                {
                    this.publicKeyInformation = value;
                    this.RaisePropertyChanged("PublicKeyInformation");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("CourtCodelist", Order = 1)]
        public System.Collections.Generic.List<CourtCodelistType> CourtCodelist
        {
            get
            {
                return this.courtCodelist;
            }
            set
            {
                if ((this.courtCodelist != value))
                {
                    this.courtCodelist = value;
                    this.RaisePropertyChanged("CourtCodelist");
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "PublicKeyInformationType")]
    [System.Xml.Serialization.XmlRootAttribute("PublicKeyInformation", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "PublicKeyInformationType")]
    public partial class PublicKeyInformationType : ComplexObjectType
    {
        private KeyInfoType keyInfo;

        public PublicKeyInformationType(KeyInfoType keyInfo)
        {
            this.keyInfo = keyInfo;  
        }

        [System.Xml.Serialization.XmlElementAttribute("KeyInfo", Order = 0)]
        public KeyInfoType KeyInfo
        {
            get
            {
                return this.keyInfo;
            }
            set
            {
                if ((this.keyInfo != value))
                {
                    this.keyInfo = value;
                    this.RaisePropertyChanged("KeyInfo");
                }
            }
        }

    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "CourtCodelistType")]
    [System.Xml.Serialization.XmlRootAttribute("CourtCodelist", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "CourtCodelistType")]
    
    public partial class CourtCodelistType : ComplexObjectType
    {

        /// <remarks/>
        private TextType eCFElementName;

        /// <remarks/>
        private DateType effectiveDate;

        /// <remarks/>
        private DateType expirationDate;

        /// <remarks/>
        private IdentificationType courtCodelistURI;

        public CourtCodelistType()
        {
        }

        public CourtCodelistType(TextType eCFElementName, DateType effectiveDate, DateType expirationDate, IdentificationType courtCodelistURI)
        {
            this.eCFElementName = eCFElementName;
            this.effectiveDate = effectiveDate;
            this.expirationDate = expirationDate;
            this.courtCodelistURI = courtCodelistURI;
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0, ElementName = "ECFElementName")]
        public TextType ECFElementName
        {
            get
            {
                return this.eCFElementName;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ECFElementName");
                }
                if ((this.eCFElementName != value))
                {
                    this.eCFElementName = value;
                    this.RaisePropertyChanged("ECFElementName");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1, ElementName = "EffectiveDate")]
        public DateType EffectiveDate
        {
            get
            {
                return this.effectiveDate;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("EffectiveDate");
                }
                if ((this.effectiveDate != value))
                {
                    this.effectiveDate = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 2, ElementName = "ExpirationDate")]
        public DateType ExpirationDate
        {
            get
            {
                return this.expirationDate;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ExpirationDate");
                }
                if ((this.expirationDate != value))
                {
                    this.expirationDate = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 3, ElementName = "CourtCodelistURI")]
        public IdentificationType CourtCodelistURI
        {
            get
            {
                return this.courtCodelistURI;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("CourtCodelistURI");
                }
                if ((this.courtCodelistURI != value))
                {
                    this.courtCodelistURI = value;
                    this.RaisePropertyChanged("CourtCodelistURI");
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "CaseTypeCodeType")]
    [System.Xml.Serialization.XmlRootAttribute("SupportedCaseType", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "CaseTypeCodeType")]
    
    public partial class CaseTypeCodeType : object 
    {

        /// <remarks/>
        private string id;

        /// <remarks/>
        private string metadata;

        /// <remarks/>
        private string linkMetadata;

        /// <remarks/>
        private CaseTypeCodeSimpleType value;

        public CaseTypeCodeType()
        {
        }

        public CaseTypeCodeType(string id, string metadata, string linkMetadata, CaseTypeCodeSimpleType value)
        {
            this.id = id;
            this.metadata = metadata;
            this.linkMetadata = linkMetadata;
            this.value = value;
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://niem.gov/niem/structures/2.0", DataType = "ID", AttributeName = "id")]
        public string Id
        {
            get
            {
                return this.id;
            }
            set
            {
                if ((this.id != value))
                {
                    this.id = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://niem.gov/niem/structures/2.0", DataType = "IDREFS", AttributeName = "metadata")]
        public string Metadata
        {
            get
            {
                return this.metadata;
            }
            set
            {
                if ((this.metadata != value))
                {
                    this.metadata = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://niem.gov/niem/structures/2.0", DataType = "IDREFS", AttributeName = "linkMetadata")]
        public string LinkMetadata
        {
            get
            {
                return this.linkMetadata;
            }
            set
            {
                if ((this.linkMetadata != value))
                {
                    this.linkMetadata = value;
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        public CaseTypeCodeSimpleType Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }

    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "CourtExtensionType")]
    [System.Xml.Serialization.XmlRootAttribute("CourtExtension", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "CourtExtensionType")]
    
    public partial class CourtExtensionType : ComplexObjectType
    {

        /// <remarks/>
        private TextType eCFElementName;

        /// <remarks/>
        private IdentificationType courtExtensionURI;

        public CourtExtensionType()
        {
        }

        public CourtExtensionType(TextType eCFElementName, IdentificationType courtExtensionURI)
        {
            this.eCFElementName = eCFElementName;
            this.courtExtensionURI = courtExtensionURI;
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 0, ElementName = "ECFElementName")]
        public TextType ECFElementName
        {
            get
            {
                return this.eCFElementName;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ECFElementName");
                }
                if ((this.eCFElementName != value))
                {
                    this.eCFElementName = value;
                    this.RaisePropertyChanged("ECFElementName");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Order = 1, ElementName = "CourtExtensionURI")]
        public IdentificationType CourtExtensionURI
        {
            get
            {
                return this.courtExtensionURI;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("CourtExtensionURI");
                }
                if ((this.courtExtensionURI != value))
                {
                    this.courtExtensionURI = value;
                    this.RaisePropertyChanged("CourtExtensionURI");
                }
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "MajorDesignElementNameCodeType")]
    [System.Xml.Serialization.XmlRootAttribute("MajorDesignElementNameCode", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "MajorDesignElementNameCodeType")]
    
    public partial class MajorDesignElementNameCodeType : object 
    {

        /// <remarks/>
        private string id;

        /// <remarks/>
        private string metadata;

        /// <remarks/>
        private string linkMetadata;

        /// <remarks/>
        private MajorDesignElementNameCodeSimpleType value;

        public MajorDesignElementNameCodeType()
        {
        }

        public MajorDesignElementNameCodeType(string id, string metadata, string linkMetadata, MajorDesignElementNameCodeSimpleType value)
        {
            this.id = id;
            this.metadata = metadata;
            this.linkMetadata = linkMetadata;
            this.value = value;
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://niem.gov/niem/structures/2.0", DataType = "ID", AttributeName = "id")]
        public string Id
        {
            get
            {
                return this.id;
            }
            set
            {
                if ((this.id != value))
                {
                    this.id = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://niem.gov/niem/structures/2.0", DataType = "IDREFS", AttributeName = "metadata")]
        public string Metadata
        {
            get
            {
                return this.metadata;
            }
            set
            {
                if ((this.metadata != value))
                {
                    this.metadata = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://niem.gov/niem/structures/2.0", DataType = "IDREFS", AttributeName = "linkMetadata")]
        public string LinkMetadata
        {
            get
            {
                return this.linkMetadata;
            }
            set
            {
                if ((this.linkMetadata != value))
                {
                    this.linkMetadata = value;
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        public MajorDesignElementNameCodeSimpleType Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }

    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "MajorDesignElementNameCodeSimpleType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "MajorDesignElementNameCodeSimpleType")]
    public enum MajorDesignElementNameCodeSimpleType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "CourtRecord")]
        CourtRecord,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "FilingAssembly")]
        FilingAssembly,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "FilingReview")]
        FilingReview,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "Service")]
        Service,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "OperationNameType")]
    [System.Xml.Serialization.XmlRootAttribute("SupportedOperationName", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "OperationNameType")]
    
    public partial class OperationNameType : object 
    {

        /// <remarks/>
        private string id;

        /// <remarks/>
        private string metadata;

        /// <remarks/>
        private string linkMetadata;

        /// <remarks/>
        private OperationNameSimpleType value;

        public OperationNameType()
        {
        }

        public OperationNameType(string id, string metadata, string linkMetadata, OperationNameSimpleType value)
        {
            this.id = id;
            this.metadata = metadata;
            this.linkMetadata = linkMetadata;
            this.value = value;
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://niem.gov/niem/structures/2.0", DataType = "ID", AttributeName = "id")]
        public string Id
        {
            get
            {
                return this.id;
            }
            set
            {
                if ((this.id != value))
                {
                    this.id = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://niem.gov/niem/structures/2.0", DataType = "IDREFS", AttributeName = "metadata")]
        public string Metadata
        {
            get
            {
                return this.metadata;
            }
            set
            {
                if ((this.metadata != value))
                {
                    this.metadata = value;
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://niem.gov/niem/structures/2.0", DataType = "IDREFS", AttributeName = "linkMetadata")]
        public string LinkMetadata
        {
            get
            {
                return this.linkMetadata;
            }
            set
            {
                if ((this.linkMetadata != value))
                {
                    this.linkMetadata = value;
                }
            }
        }

        [System.Xml.Serialization.XmlTextAttribute()]
        public OperationNameSimpleType Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }

    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "OperationNameSimpleType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "OperationNameSimpleType")]
    public enum OperationNameSimpleType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "GetFeesCalculation")]
        GetFeesCalculation,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "GetCase")]
        GetCase,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "GetCaseList")]
        GetCaseList,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "GetDocument")]
        GetDocument,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "GetFilingList")]
        GetFilingList,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "GetFilingStatus")]
        GetFilingStatus,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "GetPolicy")]
        GetPolicy,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "GetServiceInformation")]
        GetServiceInformation,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "NotifyFilingReview")]
        NotifyFilingReview,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "NotifyDocketing")]
        NotifyDocketing,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "RecordFiling")]
        RecordFiling,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "ReviewFiling")]
        ReviewFiling,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "ServeFiling")]
        ServeFiling,
    }



    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", TypeName = "CaseTypeCodeSimpleType")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:CourtPolicyResponseMessage-4.0" +
        "", IsNullable = false, ElementName = "CaseTypeCodeSimpleType")]
    public enum CaseTypeCodeSimpleType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "Appellate")]
        Appellate,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "Bankruptcy")]
        Bankruptcy,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "Citation")]
        Citation,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "Civil")]
        Civil,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "Criminalt")]
        Criminalt,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "Domestic")]
        Domestic,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name = "Juvenile")]
        Juvenile,
    }

}
