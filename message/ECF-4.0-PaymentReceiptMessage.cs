/*
	'=======================================================================
	'   Author(s):      D V Rao
	'   Module/Form:    ECF-4.0-PaymentReceiptMessage.cs
	'   Created Date:   
	'   Description:    
	'
	'   Modification History:
	'=======================================================================
	'   Author(s)       Date        Control/Procedure       Change
	'=======================================================================
    '   Rao 06/08/2012 Added a constructor with PaymentMessageType. Changed XmlTypeAttribute 
	'=======================================================================
	*/

#region WSCF
//------------------------------------------------------------------------------
// <autogenerated code>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated code>
//------------------------------------------------------------------------------
// File time 27-11-08 04:07 PM
//
// This source code was auto-generated by WsContractFirst, Version=0.7.6319.1
#endregion

using Oasis.LegalXml.CourtFiling.v40.Payment; 

namespace Oasis.LegalXml.CourtFiling.v40.Payment
{
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]

    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:PaymentMessage-4.0", TypeName = "PaymentReceiptMessage")]
    [System.Xml.Serialization.XmlRootAttribute("PaymentReceiptMessage", Namespace = "urn:oasis:names:tc:legalxml-courtfiling:schema:xsd:PaymentReceiptMessage-4.0", IsNullable = false, ElementName = "PaymentReceiptMessage")]
    
    public partial class PaymentReceiptMessage : PaymentMessageType
    {
        public PaymentReceiptMessage()
        {
        }

        public PaymentReceiptMessage(PaymentMessageType paymentMessage) 
        {
            if (paymentMessage == null) paymentMessage = new PaymentMessageType();
                base.Address = paymentMessage.Address;
                base.AllowanceCharge = paymentMessage.AllowanceCharge;
                base.FeeExceptionReasonCode = paymentMessage.FeeExceptionReasonCode;
                base.FeeExceptionSupportingText = paymentMessage.FeeExceptionSupportingText;
                base.PayerName = paymentMessage.PayerName;
                base.Payment = paymentMessage.Payment;
            
        }

    }
    
}
